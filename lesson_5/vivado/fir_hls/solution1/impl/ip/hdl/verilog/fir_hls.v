// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir_hls,hls_ip_2019_1_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.695500,HLS_SYN_LAT=4004,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=26,HLS_SYN_FF=795,HLS_SYN_LUT=667,HLS_VERSION=2019_1_2}" *)

module fir_hls (
        ap_clk,
        ap_rst_n,
        x_V_TDATA,
        x_V_TVALID,
        x_V_TREADY,
        y_TDATA,
        y_TVALID,
        y_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input  [7:0] x_V_TDATA;
input   x_V_TVALID;
output   x_V_TREADY;
output  [31:0] y_TDATA;
output   y_TVALID;
input   y_TREADY;

 reg    ap_rst_n_inv;
reg   [7:0] x_V_0_data_out;
wire    x_V_0_vld_in;
wire    x_V_0_vld_out;
wire    x_V_0_ack_in;
reg    x_V_0_ack_out;
reg   [7:0] x_V_0_payload_A;
reg   [7:0] x_V_0_payload_B;
reg    x_V_0_sel_rd;
reg    x_V_0_sel_wr;
wire    x_V_0_sel;
wire    x_V_0_load_A;
wire    x_V_0_load_B;
reg   [1:0] x_V_0_state;
wire    x_V_0_state_cmp_full;
reg   [31:0] y_1_data_out;
reg    y_1_vld_in;
wire    y_1_vld_out;
wire    y_1_ack_in;
wire    y_1_ack_out;
reg   [31:0] y_1_payload_A;
reg   [31:0] y_1_payload_B;
reg    y_1_sel_rd;
reg    y_1_sel_wr;
wire    y_1_sel;
wire    y_1_load_A;
wire    y_1_load_B;
reg   [1:0] y_1_state;
wire    y_1_state_cmp_full;
reg    x_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln17_fu_509_p2;
reg    y_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln17_reg_1053;
reg   [0:0] icmp_ln17_reg_1053_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln17_reg_1053_pp0_iter2_reg;
reg   [7:0] shift_reg_V_30_0_reg_97;
reg  signed [7:0] shift_reg_30_V_reg_108;
reg  signed [7:0] shift_reg_29_V_reg_121;
reg  signed [7:0] shift_reg_28_V_reg_134;
reg  signed [7:0] shift_reg_27_V_reg_147;
reg  signed [7:0] shift_reg_26_V_reg_160;
reg  signed [7:0] shift_reg_25_V_reg_173;
reg   [7:0] shift_reg_24_V_reg_186;
reg  signed [7:0] shift_reg_23_V_reg_199;
reg  signed [7:0] shift_reg_22_V_reg_212;
reg  signed [7:0] shift_reg_21_V_reg_225;
reg   [7:0] shift_reg_20_V_reg_238;
reg  signed [7:0] shift_reg_19_V_reg_251;
reg  signed [7:0] shift_reg_18_V_reg_264;
reg  signed [7:0] shift_reg_17_V_reg_277;
reg  signed [7:0] shift_reg_16_V_reg_290;
reg  signed [7:0] shift_reg_15_V_reg_303;
reg  signed [7:0] shift_reg_14_V_reg_316;
reg  signed [7:0] shift_reg_13_V_reg_329;
reg  signed [7:0] shift_reg_12_V_reg_342;
reg   [7:0] shift_reg_11_V_reg_355;
reg  signed [7:0] shift_reg_10_V_reg_368;
reg  signed [7:0] shift_reg_9_V_reg_381;
reg  signed [7:0] shift_reg_8_V_reg_394;
reg   [7:0] shift_reg_7_V_reg_407;
reg  signed [7:0] shift_reg_6_V_reg_420;
reg  signed [7:0] shift_reg_5_V_reg_433;
reg  signed [7:0] shift_reg_4_V_reg_446;
reg  signed [7:0] shift_reg_3_V_reg_459;
reg  signed [7:0] shift_reg_2_V_reg_472;
reg  signed [7:0] shift_reg_1_V_reg_485;
reg   [11:0] i_0_reg_498;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] i_fu_515_p2;
reg  signed [7:0] shift_reg_0_V_reg_1062;
wire   [16:0] mul_ln215_fu_525_p2;
reg   [16:0] mul_ln215_reg_1068;
wire  signed [18:0] mul_ln1352_2_fu_861_p2;
reg  signed [18:0] mul_ln1352_2_reg_1073;
wire  signed [18:0] mul_ln1352_4_fu_867_p2;
reg  signed [18:0] mul_ln1352_4_reg_1078;
wire  signed [19:0] mul_ln1352_6_fu_873_p2;
reg  signed [19:0] mul_ln1352_6_reg_1083;
wire  signed [21:0] mul_ln1352_9_fu_879_p2;
reg  signed [21:0] mul_ln1352_9_reg_1088;
wire  signed [21:0] mul_ln1352_11_fu_885_p2;
reg  signed [21:0] mul_ln1352_11_reg_1093;
wire  signed [21:0] mul_ln1352_13_fu_891_p2;
reg  signed [21:0] mul_ln1352_13_reg_1098;
wire  signed [21:0] mul_ln1352_15_fu_897_p2;
reg  signed [21:0] mul_ln1352_15_reg_1103;
wire  signed [19:0] mul_ln1352_17_fu_903_p2;
reg  signed [19:0] mul_ln1352_17_reg_1108;
wire  signed [18:0] mul_ln1352_20_fu_909_p2;
reg  signed [18:0] mul_ln1352_20_reg_1113;
wire  signed [18:0] mul_ln1352_21_fu_915_p2;
reg  signed [18:0] mul_ln1352_21_reg_1118;
wire  signed [16:0] grp_fu_921_p3;
reg  signed [16:0] add_ln30_26_reg_1123;
wire   [19:0] add_ln30_6_fu_716_p2;
reg   [19:0] add_ln30_6_reg_1128;
wire   [21:0] add_ln30_9_fu_728_p2;
reg   [21:0] add_ln30_9_reg_1133;
wire   [22:0] add_ln30_12_fu_740_p2;
reg   [22:0] add_ln30_12_reg_1138;
wire   [22:0] add_ln30_17_fu_752_p2;
reg   [22:0] add_ln30_17_reg_1143;
wire   [21:0] add_ln30_20_fu_764_p2;
reg   [21:0] add_ln30_20_reg_1148;
wire   [19:0] add_ln30_28_fu_794_p2;
reg   [19:0] add_ln30_28_reg_1153;
wire  signed [31:0] sext_ln30_24_fu_856_p1;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [7:0] ap_phi_mux_shift_reg_V_30_0_phi_fu_101_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_30_V_phi_fu_113_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_28_V_phi_fu_139_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_27_V_phi_fu_152_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_22_V_phi_fu_217_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_19_V_phi_fu_256_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_17_V_phi_fu_282_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_15_V_phi_fu_308_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_13_V_phi_fu_334_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_9_V_phi_fu_386_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_5_V_phi_fu_438_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_3_V_phi_fu_464_p4;
reg  signed [7:0] ap_phi_mux_shift_reg_1_V_phi_fu_490_p4;
reg    ap_block_pp0_stage0_01001;
wire  signed [7:0] mul_ln215_fu_525_p0;
wire  signed [7:0] mul_ln1352_23_fu_579_p0;
wire  signed [10:0] shl_ln_fu_600_p3;
wire  signed [19:0] shl_ln1352_1_fu_620_p3;
wire  signed [19:0] shl_ln1352_2_fu_648_p3;
wire  signed [10:0] shl_ln1352_3_fu_668_p3;
wire  signed [16:0] grp_fu_929_p3;
wire  signed [18:0] sext_ln30_fu_692_p1;
wire  signed [18:0] grp_fu_937_p3;
(* use_dsp48 = "no" *) wire   [18:0] add_ln30_2_fu_695_p2;
wire  signed [16:0] grp_fu_953_p3;
wire  signed [18:0] grp_fu_945_p3;
wire  signed [18:0] sext_ln30_2_fu_704_p1;
(* use_dsp48 = "no" *) wire   [18:0] add_ln30_5_fu_707_p2;
wire  signed [19:0] sext_ln30_1_fu_700_p1;
wire  signed [19:0] sext_ln30_3_fu_712_p1;
wire  signed [19:0] grp_fu_962_p3;
wire  signed [20:0] grp_fu_970_p3;
wire  signed [21:0] sext_ln30_5_fu_722_p1;
wire  signed [21:0] sext_ln30_6_fu_725_p1;
wire  signed [21:0] grp_fu_979_p3;
wire  signed [21:0] grp_fu_987_p3;
wire  signed [22:0] sext_ln30_8_fu_734_p1;
wire  signed [22:0] sext_ln30_9_fu_737_p1;
wire  signed [21:0] grp_fu_995_p3;
wire  signed [21:0] grp_fu_1003_p3;
wire  signed [22:0] sext_ln30_12_fu_746_p1;
wire  signed [22:0] sext_ln30_13_fu_749_p1;
wire  signed [20:0] grp_fu_1011_p3;
wire  signed [19:0] grp_fu_1020_p3;
wire  signed [21:0] sext_ln30_15_fu_758_p1;
wire  signed [21:0] sext_ln30_16_fu_761_p1;
wire  signed [16:0] grp_fu_1028_p3;
wire  signed [18:0] sext_ln30_18_fu_770_p1;
wire  signed [18:0] grp_fu_1037_p3;
(* use_dsp48 = "no" *) wire   [18:0] add_ln30_24_fu_773_p2;
wire  signed [18:0] grp_fu_1045_p3;
wire  signed [18:0] sext_ln30_20_fu_782_p1;
(* use_dsp48 = "no" *) wire   [18:0] add_ln30_27_fu_785_p2;
wire  signed [19:0] sext_ln30_19_fu_778_p1;
wire  signed [19:0] sext_ln30_21_fu_790_p1;
wire  signed [23:0] sext_ln30_7_fu_803_p1;
wire  signed [23:0] sext_ln30_10_fu_806_p1;
wire  signed [23:0] sext_ln30_4_fu_800_p1;
wire   [23:0] add_ln30_13_fu_809_p2;
wire   [23:0] add_ln30_14_fu_815_p2;
wire  signed [23:0] sext_ln30_14_fu_825_p1;
wire  signed [23:0] sext_ln30_17_fu_828_p1;
wire   [23:0] add_ln30_21_fu_831_p2;
wire  signed [23:0] sext_ln30_22_fu_837_p1;
wire   [23:0] add_ln30_29_fu_840_p2;
wire  signed [24:0] sext_ln30_11_fu_821_p1;
wire  signed [24:0] sext_ln30_23_fu_846_p1;
wire   [24:0] add_ln30_30_fu_850_p2;
wire  signed [10:0] mul_ln1352_2_fu_861_p1;
wire  signed [10:0] mul_ln1352_4_fu_867_p1;
wire   [11:0] mul_ln1352_6_fu_873_p1;
wire   [13:0] mul_ln1352_9_fu_879_p1;
wire   [13:0] mul_ln1352_11_fu_885_p1;
wire   [13:0] mul_ln1352_13_fu_891_p1;
wire   [13:0] mul_ln1352_15_fu_897_p1;
wire   [11:0] mul_ln1352_17_fu_903_p1;
wire  signed [10:0] mul_ln1352_20_fu_909_p1;
wire  signed [10:0] mul_ln1352_21_fu_915_p1;
wire  signed [9:0] grp_fu_921_p1;
wire   [16:0] grp_fu_921_p2;
wire  signed [8:0] grp_fu_929_p1;
wire  signed [9:0] grp_fu_937_p1;
wire  signed [10:0] grp_fu_945_p1;
wire  signed [9:0] grp_fu_953_p1;
wire   [10:0] grp_fu_962_p1;
wire   [12:0] grp_fu_970_p1;
wire   [13:0] grp_fu_979_p1;
wire   [13:0] grp_fu_987_p1;
wire   [13:0] grp_fu_995_p1;
wire   [13:0] grp_fu_1003_p1;
wire   [12:0] grp_fu_1011_p1;
wire   [10:0] grp_fu_1020_p1;
wire  signed [9:0] grp_fu_1028_p1;
wire  signed [10:0] grp_fu_1037_p1;
wire  signed [9:0] grp_fu_1045_p1;
reg   [2:0] ap_NS_fsm;
wire    ap_CS_fsm_state6;
reg    ap_block_state6;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 x_V_0_sel_rd = 1'b0;
#0 x_V_0_sel_wr = 1'b0;
#0 x_V_0_state = 2'd0;
#0 y_1_sel_rd = 1'b0;
#0 y_1_sel_wr = 1'b0;
#0 y_1_state = 2'd0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

fir_hls_mul_mul_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
fir_hls_mul_mul_8bkb_U1(
    .din0(ap_phi_mux_shift_reg_3_V_phi_fu_464_p4),
    .din1(mul_ln1352_2_fu_861_p1),
    .dout(mul_ln1352_2_fu_861_p2)
);

fir_hls_mul_mul_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
fir_hls_mul_mul_8bkb_U2(
    .din0(ap_phi_mux_shift_reg_5_V_phi_fu_438_p4),
    .din1(mul_ln1352_4_fu_867_p1),
    .dout(mul_ln1352_4_fu_867_p2)
);

fir_hls_mul_mul_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
fir_hls_mul_mul_8cud_U3(
    .din0(ap_phi_mux_shift_reg_9_V_phi_fu_386_p4),
    .din1(mul_ln1352_6_fu_873_p1),
    .dout(mul_ln1352_6_fu_873_p2)
);

fir_hls_mul_mul_8dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
fir_hls_mul_mul_8dEe_U4(
    .din0(ap_phi_mux_shift_reg_13_V_phi_fu_334_p4),
    .din1(mul_ln1352_9_fu_879_p1),
    .dout(mul_ln1352_9_fu_879_p2)
);

fir_hls_mul_mul_8dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
fir_hls_mul_mul_8dEe_U5(
    .din0(ap_phi_mux_shift_reg_15_V_phi_fu_308_p4),
    .din1(mul_ln1352_11_fu_885_p1),
    .dout(mul_ln1352_11_fu_885_p2)
);

fir_hls_mul_mul_8dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
fir_hls_mul_mul_8dEe_U6(
    .din0(ap_phi_mux_shift_reg_17_V_phi_fu_282_p4),
    .din1(mul_ln1352_13_fu_891_p1),
    .dout(mul_ln1352_13_fu_891_p2)
);

fir_hls_mul_mul_8dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
fir_hls_mul_mul_8dEe_U7(
    .din0(ap_phi_mux_shift_reg_19_V_phi_fu_256_p4),
    .din1(mul_ln1352_15_fu_897_p1),
    .dout(mul_ln1352_15_fu_897_p2)
);

fir_hls_mul_mul_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
fir_hls_mul_mul_8cud_U8(
    .din0(ap_phi_mux_shift_reg_22_V_phi_fu_217_p4),
    .din1(mul_ln1352_17_fu_903_p1),
    .dout(mul_ln1352_17_fu_903_p2)
);

fir_hls_mul_mul_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
fir_hls_mul_mul_8bkb_U9(
    .din0(ap_phi_mux_shift_reg_27_V_phi_fu_152_p4),
    .din1(mul_ln1352_20_fu_909_p1),
    .dout(mul_ln1352_20_fu_909_p2)
);

fir_hls_mul_mul_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
fir_hls_mul_mul_8bkb_U10(
    .din0(ap_phi_mux_shift_reg_28_V_phi_fu_139_p4),
    .din1(mul_ln1352_21_fu_915_p1),
    .dout(mul_ln1352_21_fu_915_p2)
);

fir_hls_mac_muladeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
fir_hls_mac_muladeOg_U11(
    .din0(ap_phi_mux_shift_reg_30_V_phi_fu_113_p4),
    .din1(grp_fu_921_p1),
    .din2(grp_fu_921_p2),
    .dout(grp_fu_921_p3)
);

fir_hls_mac_muladfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
fir_hls_mac_muladfYi_U12(
    .din0(shift_reg_0_V_reg_1062),
    .din1(grp_fu_929_p1),
    .din2(mul_ln215_reg_1068),
    .dout(grp_fu_929_p3)
);

fir_hls_mac_muladg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
fir_hls_mac_muladg8j_U13(
    .din0(shift_reg_2_V_reg_472),
    .din1(grp_fu_937_p1),
    .din2(mul_ln1352_2_reg_1073),
    .dout(grp_fu_937_p3)
);

fir_hls_mac_muladhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
fir_hls_mac_muladhbi_U14(
    .din0(shift_reg_4_V_reg_446),
    .din1(grp_fu_945_p1),
    .din2(mul_ln1352_4_reg_1078),
    .dout(grp_fu_945_p3)
);

fir_hls_mac_muladibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
fir_hls_mac_muladibs_U15(
    .din0(shift_reg_6_V_reg_420),
    .din1(grp_fu_953_p1),
    .din2(shl_ln_fu_600_p3),
    .dout(grp_fu_953_p3)
);

fir_hls_mac_muladjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
fir_hls_mac_muladjbC_U16(
    .din0(shift_reg_8_V_reg_394),
    .din1(grp_fu_962_p1),
    .din2(mul_ln1352_6_reg_1083),
    .dout(grp_fu_962_p3)
);

fir_hls_mac_muladkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 21 ))
fir_hls_mac_muladkbM_U17(
    .din0(shift_reg_10_V_reg_368),
    .din1(grp_fu_970_p1),
    .din2(shl_ln1352_1_fu_620_p3),
    .dout(grp_fu_970_p3)
);

fir_hls_mac_muladlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
fir_hls_mac_muladlbW_U18(
    .din0(shift_reg_12_V_reg_342),
    .din1(grp_fu_979_p1),
    .din2(mul_ln1352_9_reg_1088),
    .dout(grp_fu_979_p3)
);

fir_hls_mac_muladlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
fir_hls_mac_muladlbW_U19(
    .din0(shift_reg_14_V_reg_316),
    .din1(grp_fu_987_p1),
    .din2(mul_ln1352_11_reg_1093),
    .dout(grp_fu_987_p3)
);

fir_hls_mac_muladlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
fir_hls_mac_muladlbW_U20(
    .din0(shift_reg_16_V_reg_290),
    .din1(grp_fu_995_p1),
    .din2(mul_ln1352_13_reg_1098),
    .dout(grp_fu_995_p3)
);

fir_hls_mac_muladlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
fir_hls_mac_muladlbW_U21(
    .din0(shift_reg_18_V_reg_264),
    .din1(grp_fu_1003_p1),
    .din2(mul_ln1352_15_reg_1103),
    .dout(grp_fu_1003_p3)
);

fir_hls_mac_muladkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 21 ))
fir_hls_mac_muladkbM_U22(
    .din0(shift_reg_21_V_reg_225),
    .din1(grp_fu_1011_p1),
    .din2(shl_ln1352_2_fu_648_p3),
    .dout(grp_fu_1011_p3)
);

fir_hls_mac_muladjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
fir_hls_mac_muladjbC_U23(
    .din0(shift_reg_23_V_reg_199),
    .din1(grp_fu_1020_p1),
    .din2(mul_ln1352_17_reg_1108),
    .dout(grp_fu_1020_p3)
);

fir_hls_mac_muladibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
fir_hls_mac_muladibs_U24(
    .din0(shift_reg_25_V_reg_173),
    .din1(grp_fu_1028_p1),
    .din2(shl_ln1352_3_fu_668_p3),
    .dout(grp_fu_1028_p3)
);

fir_hls_mac_muladhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
fir_hls_mac_muladhbi_U25(
    .din0(shift_reg_26_V_reg_160),
    .din1(grp_fu_1037_p1),
    .din2(mul_ln1352_20_reg_1113),
    .dout(grp_fu_1037_p3)
);

fir_hls_mac_muladg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
fir_hls_mac_muladg8j_U26(
    .din0(shift_reg_29_V_reg_121),
    .din1(grp_fu_1045_p1),
    .din2(mul_ln1352_21_reg_1118),
    .dout(grp_fu_1045_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        x_V_0_sel_rd <= 1'b0;
    end else begin
        if (((x_V_0_ack_out == 1'b1) & (x_V_0_vld_out == 1'b1))) begin
            x_V_0_sel_rd <= ~x_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        x_V_0_sel_wr <= 1'b0;
    end else begin
        if (((x_V_0_ack_in == 1'b1) & (x_V_0_vld_in == 1'b1))) begin
            x_V_0_sel_wr <= ~x_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        x_V_0_state <= 2'd0;
    end else begin
        if ((((x_V_0_vld_in == 1'b0) & (x_V_0_state == 2'd2)) | ((x_V_0_vld_in == 1'b0) & (x_V_0_state == 2'd3) & (x_V_0_ack_out == 1'b1)))) begin
            x_V_0_state <= 2'd2;
        end else if ((((x_V_0_ack_out == 1'b0) & (x_V_0_state == 2'd1)) | ((x_V_0_ack_out == 1'b0) & (x_V_0_state == 2'd3) & (x_V_0_vld_in == 1'b1)))) begin
            x_V_0_state <= 2'd1;
        end else if (((~((x_V_0_vld_in == 1'b0) & (x_V_0_ack_out == 1'b1)) & ~((x_V_0_ack_out == 1'b0) & (x_V_0_vld_in == 1'b1)) & (x_V_0_state == 2'd3)) | ((x_V_0_state == 2'd1) & (x_V_0_ack_out == 1'b1)) | ((x_V_0_state == 2'd2) & (x_V_0_vld_in == 1'b1)))) begin
            x_V_0_state <= 2'd3;
        end else begin
            x_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        y_1_sel_rd <= 1'b0;
    end else begin
        if (((y_1_ack_out == 1'b1) & (y_1_vld_out == 1'b1))) begin
            y_1_sel_rd <= ~y_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        y_1_sel_wr <= 1'b0;
    end else begin
        if (((y_1_ack_in == 1'b1) & (y_1_vld_in == 1'b1))) begin
            y_1_sel_wr <= ~y_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        y_1_state <= 2'd0;
    end else begin
        if ((((y_1_state == 2'd2) & (y_1_vld_in == 1'b0)) | ((y_1_state == 2'd3) & (y_1_vld_in == 1'b0) & (y_1_ack_out == 1'b1)))) begin
            y_1_state <= 2'd2;
        end else if ((((y_1_state == 2'd3) & (y_TREADY == 1'b0) & (y_1_vld_in == 1'b1)) | ((y_1_state == 2'd1) & (y_TREADY == 1'b0)))) begin
            y_1_state <= 2'd1;
        end else if ((((y_1_state == 2'd2) & (y_1_vld_in == 1'b1)) | (~((y_1_vld_in == 1'b0) & (y_1_ack_out == 1'b1)) & ~((y_TREADY == 1'b0) & (y_1_vld_in == 1'b1)) & (y_1_state == 2'd3)) | ((y_1_state == 2'd1) & (y_1_ack_out == 1'b1)))) begin
            y_1_state <= 2'd3;
        end else begin
            y_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_509_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_498 <= i_fu_515_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_0_reg_498 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_10_V_reg_368 <= shift_reg_9_V_reg_381;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_10_V_reg_368 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_11_V_reg_355 <= shift_reg_10_V_reg_368;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_11_V_reg_355 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_12_V_reg_342 <= shift_reg_11_V_reg_355;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_12_V_reg_342 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_13_V_reg_329 <= shift_reg_12_V_reg_342;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_13_V_reg_329 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_14_V_reg_316 <= shift_reg_13_V_reg_329;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_14_V_reg_316 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_15_V_reg_303 <= shift_reg_14_V_reg_316;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_15_V_reg_303 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_16_V_reg_290 <= shift_reg_15_V_reg_303;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_16_V_reg_290 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_17_V_reg_277 <= shift_reg_16_V_reg_290;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_17_V_reg_277 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_18_V_reg_264 <= shift_reg_17_V_reg_277;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_18_V_reg_264 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_19_V_reg_251 <= shift_reg_18_V_reg_264;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_19_V_reg_251 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_1_V_reg_485 <= shift_reg_0_V_reg_1062;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_1_V_reg_485 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_20_V_reg_238 <= shift_reg_19_V_reg_251;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_20_V_reg_238 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_21_V_reg_225 <= shift_reg_20_V_reg_238;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_21_V_reg_225 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_22_V_reg_212 <= shift_reg_21_V_reg_225;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_22_V_reg_212 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_23_V_reg_199 <= shift_reg_22_V_reg_212;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_23_V_reg_199 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_24_V_reg_186 <= shift_reg_23_V_reg_199;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_24_V_reg_186 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_25_V_reg_173 <= shift_reg_24_V_reg_186;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_25_V_reg_173 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_26_V_reg_160 <= shift_reg_25_V_reg_173;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_26_V_reg_160 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_27_V_reg_147 <= shift_reg_26_V_reg_160;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_27_V_reg_147 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_28_V_reg_134 <= shift_reg_27_V_reg_147;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_28_V_reg_134 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_29_V_reg_121 <= shift_reg_28_V_reg_134;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_29_V_reg_121 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_2_V_reg_472 <= shift_reg_1_V_reg_485;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_2_V_reg_472 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_30_V_reg_108 <= shift_reg_29_V_reg_121;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_30_V_reg_108 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_3_V_reg_459 <= shift_reg_2_V_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_3_V_reg_459 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_4_V_reg_446 <= shift_reg_3_V_reg_459;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_4_V_reg_446 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_5_V_reg_433 <= shift_reg_4_V_reg_446;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_5_V_reg_433 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_6_V_reg_420 <= shift_reg_5_V_reg_433;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_6_V_reg_420 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_7_V_reg_407 <= shift_reg_6_V_reg_420;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_7_V_reg_407 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_8_V_reg_394 <= shift_reg_7_V_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_8_V_reg_394 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_9_V_reg_381 <= shift_reg_8_V_reg_394;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_9_V_reg_381 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_V_30_0_reg_97 <= shift_reg_30_V_reg_108;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        shift_reg_V_30_0_reg_97 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln30_12_reg_1138 <= add_ln30_12_fu_740_p2;
        add_ln30_17_reg_1143 <= add_ln30_17_fu_752_p2;
        add_ln30_20_reg_1148 <= add_ln30_20_fu_764_p2;
        add_ln30_28_reg_1153 <= add_ln30_28_fu_794_p2;
        add_ln30_6_reg_1128 <= add_ln30_6_fu_716_p2;
        add_ln30_9_reg_1133 <= add_ln30_9_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_509_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln30_26_reg_1123 <= grp_fu_921_p3;
        shift_reg_0_V_reg_1062 <= x_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln17_reg_1053 <= icmp_ln17_fu_509_p2;
        icmp_ln17_reg_1053_pp0_iter1_reg <= icmp_ln17_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln17_reg_1053_pp0_iter2_reg <= icmp_ln17_reg_1053_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_509_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1352_11_reg_1093 <= mul_ln1352_11_fu_885_p2;
        mul_ln1352_13_reg_1098 <= mul_ln1352_13_fu_891_p2;
        mul_ln1352_15_reg_1103 <= mul_ln1352_15_fu_897_p2;
        mul_ln1352_17_reg_1108 <= mul_ln1352_17_fu_903_p2;
        mul_ln1352_20_reg_1113 <= mul_ln1352_20_fu_909_p2;
        mul_ln1352_21_reg_1118 <= mul_ln1352_21_fu_915_p2;
        mul_ln1352_2_reg_1073 <= mul_ln1352_2_fu_861_p2;
        mul_ln1352_4_reg_1078 <= mul_ln1352_4_fu_867_p2;
        mul_ln1352_6_reg_1083 <= mul_ln1352_6_fu_873_p2;
        mul_ln1352_9_reg_1088 <= mul_ln1352_9_fu_879_p2;
        mul_ln215_reg_1068[16 : 1] <= mul_ln215_fu_525_p2[16 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((x_V_0_load_A == 1'b1)) begin
        x_V_0_payload_A <= x_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((x_V_0_load_B == 1'b1)) begin
        x_V_0_payload_B <= x_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((y_1_load_A == 1'b1)) begin
        y_1_payload_A <= sext_ln30_24_fu_856_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((y_1_load_B == 1'b1)) begin
        y_1_payload_B <= sext_ln30_24_fu_856_p1;
    end
end

always @ (*) begin
    if ((icmp_ln17_fu_509_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_13_V_phi_fu_334_p4 = shift_reg_12_V_reg_342;
    end else begin
        ap_phi_mux_shift_reg_13_V_phi_fu_334_p4 = shift_reg_13_V_reg_329;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_15_V_phi_fu_308_p4 = shift_reg_14_V_reg_316;
    end else begin
        ap_phi_mux_shift_reg_15_V_phi_fu_308_p4 = shift_reg_15_V_reg_303;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_17_V_phi_fu_282_p4 = shift_reg_16_V_reg_290;
    end else begin
        ap_phi_mux_shift_reg_17_V_phi_fu_282_p4 = shift_reg_17_V_reg_277;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_19_V_phi_fu_256_p4 = shift_reg_18_V_reg_264;
    end else begin
        ap_phi_mux_shift_reg_19_V_phi_fu_256_p4 = shift_reg_19_V_reg_251;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_1_V_phi_fu_490_p4 = shift_reg_0_V_reg_1062;
    end else begin
        ap_phi_mux_shift_reg_1_V_phi_fu_490_p4 = shift_reg_1_V_reg_485;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_22_V_phi_fu_217_p4 = shift_reg_21_V_reg_225;
    end else begin
        ap_phi_mux_shift_reg_22_V_phi_fu_217_p4 = shift_reg_22_V_reg_212;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_27_V_phi_fu_152_p4 = shift_reg_26_V_reg_160;
    end else begin
        ap_phi_mux_shift_reg_27_V_phi_fu_152_p4 = shift_reg_27_V_reg_147;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_28_V_phi_fu_139_p4 = shift_reg_27_V_reg_147;
    end else begin
        ap_phi_mux_shift_reg_28_V_phi_fu_139_p4 = shift_reg_28_V_reg_134;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_30_V_phi_fu_113_p4 = shift_reg_29_V_reg_121;
    end else begin
        ap_phi_mux_shift_reg_30_V_phi_fu_113_p4 = shift_reg_30_V_reg_108;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_3_V_phi_fu_464_p4 = shift_reg_2_V_reg_472;
    end else begin
        ap_phi_mux_shift_reg_3_V_phi_fu_464_p4 = shift_reg_3_V_reg_459;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_5_V_phi_fu_438_p4 = shift_reg_4_V_reg_446;
    end else begin
        ap_phi_mux_shift_reg_5_V_phi_fu_438_p4 = shift_reg_5_V_reg_433;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_9_V_phi_fu_386_p4 = shift_reg_8_V_reg_394;
    end else begin
        ap_phi_mux_shift_reg_9_V_phi_fu_386_p4 = shift_reg_9_V_reg_381;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_shift_reg_V_30_0_phi_fu_101_p4 = shift_reg_30_V_reg_108;
    end else begin
        ap_phi_mux_shift_reg_V_30_0_phi_fu_101_p4 = shift_reg_V_30_0_reg_97;
    end
end

always @ (*) begin
    if (((icmp_ln17_fu_509_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_0_ack_out = 1'b1;
    end else begin
        x_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_0_sel == 1'b1)) begin
        x_V_0_data_out = x_V_0_payload_B;
    end else begin
        x_V_0_data_out = x_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln17_fu_509_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_V_TDATA_blk_n = x_V_0_state[1'd0];
    end else begin
        x_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((y_1_sel == 1'b1)) begin
        y_1_data_out = y_1_payload_B;
    end else begin
        y_1_data_out = y_1_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_1053_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_1_vld_in = 1'b1;
    end else begin
        y_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln17_reg_1053_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((icmp_ln17_reg_1053_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        y_TDATA_blk_n = y_1_state[1'd1];
    end else begin
        y_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln17_fu_509_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((icmp_ln17_fu_509_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((y_1_state == 2'd1) | ((y_1_state == 2'd3) & (y_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_12_fu_740_p2 = ($signed(sext_ln30_8_fu_734_p1) + $signed(sext_ln30_9_fu_737_p1));

assign add_ln30_13_fu_809_p2 = ($signed(sext_ln30_7_fu_803_p1) + $signed(sext_ln30_10_fu_806_p1));

assign add_ln30_14_fu_815_p2 = ($signed(sext_ln30_4_fu_800_p1) + $signed(add_ln30_13_fu_809_p2));

assign add_ln30_17_fu_752_p2 = ($signed(sext_ln30_12_fu_746_p1) + $signed(sext_ln30_13_fu_749_p1));

assign add_ln30_20_fu_764_p2 = ($signed(sext_ln30_15_fu_758_p1) + $signed(sext_ln30_16_fu_761_p1));

assign add_ln30_21_fu_831_p2 = ($signed(sext_ln30_14_fu_825_p1) + $signed(sext_ln30_17_fu_828_p1));

assign add_ln30_24_fu_773_p2 = ($signed(sext_ln30_18_fu_770_p1) + $signed(grp_fu_1037_p3));

assign add_ln30_27_fu_785_p2 = ($signed(grp_fu_1045_p3) + $signed(sext_ln30_20_fu_782_p1));

assign add_ln30_28_fu_794_p2 = ($signed(sext_ln30_19_fu_778_p1) + $signed(sext_ln30_21_fu_790_p1));

assign add_ln30_29_fu_840_p2 = ($signed(add_ln30_21_fu_831_p2) + $signed(sext_ln30_22_fu_837_p1));

assign add_ln30_2_fu_695_p2 = ($signed(sext_ln30_fu_692_p1) + $signed(grp_fu_937_p3));

assign add_ln30_30_fu_850_p2 = ($signed(sext_ln30_11_fu_821_p1) + $signed(sext_ln30_23_fu_846_p1));

assign add_ln30_5_fu_707_p2 = ($signed(grp_fu_945_p3) + $signed(sext_ln30_2_fu_704_p1));

assign add_ln30_6_fu_716_p2 = ($signed(sext_ln30_1_fu_700_p1) + $signed(sext_ln30_3_fu_712_p1));

assign add_ln30_9_fu_728_p2 = ($signed(sext_ln30_5_fu_722_p1) + $signed(sext_ln30_6_fu_725_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln17_fu_509_p2 == 1'd0) & (x_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln17_fu_509_p2 == 1'd0) & (x_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln17_fu_509_p2 == 1'd0) & (x_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln17_fu_509_p2 == 1'd0) & (x_V_0_vld_out == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln17_reg_1053_pp0_iter1_reg == 1'd0) & (y_1_ack_in == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln17_reg_1053_pp0_iter2_reg == 1'd0) & (y_1_ack_in == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((y_1_state == 2'd1) | ((y_1_state == 2'd3) & (y_TREADY == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_1003_p1 = 22'd6425;

assign grp_fu_1011_p1 = 21'd2837;

assign grp_fu_1020_p1 = 19'd720;

assign grp_fu_1028_p1 = 17'd130629;

assign grp_fu_1037_p1 = 19'd523629;

assign grp_fu_1045_p1 = 18'd261700;

assign grp_fu_921_p1 = 17'd130790;

assign grp_fu_921_p2 = ($signed(mul_ln1352_23_fu_579_p0) * $signed(-'hB2));

assign grp_fu_929_p1 = 17'd130894;

assign grp_fu_937_p1 = 18'd261700;

assign grp_fu_945_p1 = 19'd523599;

assign grp_fu_953_p1 = 17'd130629;

assign grp_fu_962_p1 = 19'd720;

assign grp_fu_970_p1 = 21'd2837;

assign grp_fu_979_p1 = 22'd5337;

assign grp_fu_987_p1 = 22'd7234;

assign grp_fu_995_p1 = 22'd7666;

assign i_fu_515_p2 = (i_0_reg_498 + 12'd1);

assign icmp_ln17_fu_509_p2 = ((i_0_reg_498 == 12'd4000) ? 1'b1 : 1'b0);

assign mul_ln1352_11_fu_885_p1 = 22'd7666;

assign mul_ln1352_13_fu_891_p1 = 22'd7234;

assign mul_ln1352_15_fu_897_p1 = 22'd5337;

assign mul_ln1352_17_fu_903_p1 = 20'd1680;

assign mul_ln1352_20_fu_909_p1 = 19'd523599;

assign mul_ln1352_21_fu_915_p1 = 19'd523691;

assign mul_ln1352_23_fu_579_p0 = ap_phi_mux_shift_reg_V_30_0_phi_fu_101_p4;

assign mul_ln1352_2_fu_861_p1 = 19'd523691;

assign mul_ln1352_4_fu_867_p1 = 19'd523629;

assign mul_ln1352_6_fu_873_p1 = 20'd1680;

assign mul_ln1352_9_fu_879_p1 = 22'd6425;

assign mul_ln215_fu_525_p0 = ap_phi_mux_shift_reg_1_V_phi_fu_490_p4;

assign mul_ln215_fu_525_p2 = ($signed(mul_ln215_fu_525_p0) * $signed(-'h11A));

assign sext_ln30_10_fu_806_p1 = $signed(add_ln30_12_reg_1138);

assign sext_ln30_11_fu_821_p1 = $signed(add_ln30_14_fu_815_p2);

assign sext_ln30_12_fu_746_p1 = grp_fu_995_p3;

assign sext_ln30_13_fu_749_p1 = grp_fu_1003_p3;

assign sext_ln30_14_fu_825_p1 = $signed(add_ln30_17_reg_1143);

assign sext_ln30_15_fu_758_p1 = grp_fu_1011_p3;

assign sext_ln30_16_fu_761_p1 = grp_fu_1020_p3;

assign sext_ln30_17_fu_828_p1 = $signed(add_ln30_20_reg_1148);

assign sext_ln30_18_fu_770_p1 = grp_fu_1028_p3;

assign sext_ln30_19_fu_778_p1 = $signed(add_ln30_24_fu_773_p2);

assign sext_ln30_1_fu_700_p1 = $signed(add_ln30_2_fu_695_p2);

assign sext_ln30_20_fu_782_p1 = add_ln30_26_reg_1123;

assign sext_ln30_21_fu_790_p1 = $signed(add_ln30_27_fu_785_p2);

assign sext_ln30_22_fu_837_p1 = $signed(add_ln30_28_reg_1153);

assign sext_ln30_23_fu_846_p1 = $signed(add_ln30_29_fu_840_p2);

assign sext_ln30_24_fu_856_p1 = $signed(add_ln30_30_fu_850_p2);

assign sext_ln30_2_fu_704_p1 = grp_fu_953_p3;

assign sext_ln30_3_fu_712_p1 = $signed(add_ln30_5_fu_707_p2);

assign sext_ln30_4_fu_800_p1 = $signed(add_ln30_6_reg_1128);

assign sext_ln30_5_fu_722_p1 = grp_fu_962_p3;

assign sext_ln30_6_fu_725_p1 = grp_fu_970_p3;

assign sext_ln30_7_fu_803_p1 = $signed(add_ln30_9_reg_1133);

assign sext_ln30_8_fu_734_p1 = grp_fu_979_p3;

assign sext_ln30_9_fu_737_p1 = grp_fu_987_p3;

assign sext_ln30_fu_692_p1 = grp_fu_929_p3;

assign shl_ln1352_1_fu_620_p3 = {{shift_reg_11_V_reg_355}, {12'd0}};

assign shl_ln1352_2_fu_648_p3 = {{shift_reg_20_V_reg_238}, {12'd0}};

assign shl_ln1352_3_fu_668_p3 = {{shift_reg_24_V_reg_186}, {3'd0}};

assign shl_ln_fu_600_p3 = {{shift_reg_7_V_reg_407}, {3'd0}};

assign x_V_0_ack_in = x_V_0_state[1'd1];

assign x_V_0_load_A = (x_V_0_state_cmp_full & ~x_V_0_sel_wr);

assign x_V_0_load_B = (x_V_0_state_cmp_full & x_V_0_sel_wr);

assign x_V_0_sel = x_V_0_sel_rd;

assign x_V_0_state_cmp_full = ((x_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign x_V_0_vld_in = x_V_TVALID;

assign x_V_0_vld_out = x_V_0_state[1'd0];

assign x_V_TREADY = x_V_0_state[1'd1];

assign y_1_ack_in = y_1_state[1'd1];

assign y_1_ack_out = y_TREADY;

assign y_1_load_A = (y_1_state_cmp_full & ~y_1_sel_wr);

assign y_1_load_B = (y_1_state_cmp_full & y_1_sel_wr);

assign y_1_sel = y_1_sel_rd;

assign y_1_state_cmp_full = ((y_1_state != 2'd1) ? 1'b1 : 1'b0);

assign y_1_vld_out = y_1_state[1'd0];

assign y_TDATA = y_1_data_out;

assign y_TVALID = y_1_state[1'd0];

always @ (posedge ap_clk) begin
    mul_ln215_reg_1068[0] <= 1'b0;
end

endmodule //fir_hls
