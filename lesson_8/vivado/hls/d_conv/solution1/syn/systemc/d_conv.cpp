// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "d_conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<32> d_conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic d_conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic d_conv::ap_const_logic_0 = sc_dt::Log_0;
const bool d_conv::ap_const_boolean_1 = true;

d_conv::d_conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    iq_mult_U0 = new iq_mult("iq_mult_U0");
    iq_mult_U0->ap_clk(ap_clk);
    iq_mult_U0->ap_rst(ap_rst);
    iq_mult_U0->ap_start(iq_mult_U0_ap_start);
    iq_mult_U0->ap_done(iq_mult_U0_ap_done);
    iq_mult_U0->ap_continue(iq_mult_U0_ap_continue);
    iq_mult_U0->ap_idle(iq_mult_U0_ap_idle);
    iq_mult_U0->ap_ready(iq_mult_U0_ap_ready);
    iq_mult_U0->x_V(x_V);
    iq_mult_U0->x_V_ap_vld(x_V_ap_vld);
    iq_mult_U0->ref_i_V(ref_i_V);
    iq_mult_U0->ref_i_V_ap_vld(ref_i_V_ap_vld);
    iq_mult_U0->ref_q_V(ref_q_V);
    iq_mult_U0->ref_q_V_ap_vld(ref_q_V_ap_vld);
    iq_mult_U0->ap_return_0(iq_mult_U0_ap_return_0);
    iq_mult_U0->ap_return_1(iq_mult_U0_ap_return_1);
    Block_proc_U0 = new Block_proc("Block_proc_U0");
    Block_proc_U0->ap_clk(ap_clk);
    Block_proc_U0->ap_rst(ap_rst);
    Block_proc_U0->ap_start(Block_proc_U0_ap_start);
    Block_proc_U0->ap_done(Block_proc_U0_ap_done);
    Block_proc_U0->ap_continue(Block_proc_U0_ap_continue);
    Block_proc_U0->ap_idle(Block_proc_U0_ap_idle);
    Block_proc_U0->ap_ready(Block_proc_U0_ap_ready);
    Block_proc_U0->p_read(x_i_V_dout);
    Block_proc_U0->ap_return(Block_proc_U0_ap_return);
    fir_filter_a_U0 = new fir_filter_a("fir_filter_a_U0");
    fir_filter_a_U0->ap_clk(ap_clk);
    fir_filter_a_U0->ap_rst(ap_rst);
    fir_filter_a_U0->ap_start(fir_filter_a_U0_ap_start);
    fir_filter_a_U0->ap_done(fir_filter_a_U0_ap_done);
    fir_filter_a_U0->ap_continue(fir_filter_a_U0_ap_continue);
    fir_filter_a_U0->ap_idle(fir_filter_a_U0_ap_idle);
    fir_filter_a_U0->ap_ready(fir_filter_a_U0_ap_ready);
    fir_filter_a_U0->extLd_loc_channel(extLd_loc_channel_dout);
    fir_filter_a_U0->y_V(fir_filter_a_U0_y_V);
    fir_filter_a_U0->y_V_ap_vld(fir_filter_a_U0_y_V_ap_vld);
    Block_proc33_U0 = new Block_proc33("Block_proc33_U0");
    Block_proc33_U0->ap_clk(ap_clk);
    Block_proc33_U0->ap_rst(ap_rst);
    Block_proc33_U0->ap_start(Block_proc33_U0_ap_start);
    Block_proc33_U0->ap_done(Block_proc33_U0_ap_done);
    Block_proc33_U0->ap_continue(Block_proc33_U0_ap_continue);
    Block_proc33_U0->ap_idle(Block_proc33_U0_ap_idle);
    Block_proc33_U0->ap_ready(Block_proc33_U0_ap_ready);
    Block_proc33_U0->p_read(x_q_V_dout);
    Block_proc33_U0->ap_return(Block_proc33_U0_ap_return);
    fir_filter_b_U0 = new fir_filter_b("fir_filter_b_U0");
    fir_filter_b_U0->ap_clk(ap_clk);
    fir_filter_b_U0->ap_rst(ap_rst);
    fir_filter_b_U0->ap_start(fir_filter_b_U0_ap_start);
    fir_filter_b_U0->ap_done(fir_filter_b_U0_ap_done);
    fir_filter_b_U0->ap_continue(fir_filter_b_U0_ap_continue);
    fir_filter_b_U0->ap_idle(fir_filter_b_U0_ap_idle);
    fir_filter_b_U0->ap_ready(fir_filter_b_U0_ap_ready);
    fir_filter_b_U0->extLd4_loc_channel(extLd4_loc_channel_dout);
    fir_filter_b_U0->y_V(fir_filter_b_U0_y_V);
    fir_filter_b_U0->y_V_ap_vld(fir_filter_b_U0_y_V_ap_vld);
    x_i_V_U = new fifo_w16_d2_A("x_i_V_U");
    x_i_V_U->clk(ap_clk);
    x_i_V_U->reset(ap_rst);
    x_i_V_U->if_read_ce(ap_var_for_const0);
    x_i_V_U->if_write_ce(ap_var_for_const0);
    x_i_V_U->if_din(iq_mult_U0_ap_return_0);
    x_i_V_U->if_full_n(x_i_V_full_n);
    x_i_V_U->if_write(ap_channel_done_x_i_V);
    x_i_V_U->if_dout(x_i_V_dout);
    x_i_V_U->if_empty_n(x_i_V_empty_n);
    x_i_V_U->if_read(Block_proc_U0_ap_ready);
    x_q_V_U = new fifo_w16_d2_A("x_q_V_U");
    x_q_V_U->clk(ap_clk);
    x_q_V_U->reset(ap_rst);
    x_q_V_U->if_read_ce(ap_var_for_const0);
    x_q_V_U->if_write_ce(ap_var_for_const0);
    x_q_V_U->if_din(iq_mult_U0_ap_return_1);
    x_q_V_U->if_full_n(x_q_V_full_n);
    x_q_V_U->if_write(ap_channel_done_x_q_V);
    x_q_V_U->if_dout(x_q_V_dout);
    x_q_V_U->if_empty_n(x_q_V_empty_n);
    x_q_V_U->if_read(Block_proc33_U0_ap_ready);
    extLd_loc_channel_U = new fifo_w16_d2_A("extLd_loc_channel_U");
    extLd_loc_channel_U->clk(ap_clk);
    extLd_loc_channel_U->reset(ap_rst);
    extLd_loc_channel_U->if_read_ce(ap_var_for_const0);
    extLd_loc_channel_U->if_write_ce(ap_var_for_const0);
    extLd_loc_channel_U->if_din(Block_proc_U0_ap_return);
    extLd_loc_channel_U->if_full_n(extLd_loc_channel_full_n);
    extLd_loc_channel_U->if_write(Block_proc_U0_ap_done);
    extLd_loc_channel_U->if_dout(extLd_loc_channel_dout);
    extLd_loc_channel_U->if_empty_n(extLd_loc_channel_empty_n);
    extLd_loc_channel_U->if_read(fir_filter_a_U0_ap_ready);
    extLd4_loc_channel_U = new fifo_w16_d2_A("extLd4_loc_channel_U");
    extLd4_loc_channel_U->clk(ap_clk);
    extLd4_loc_channel_U->reset(ap_rst);
    extLd4_loc_channel_U->if_read_ce(ap_var_for_const0);
    extLd4_loc_channel_U->if_write_ce(ap_var_for_const0);
    extLd4_loc_channel_U->if_din(Block_proc33_U0_ap_return);
    extLd4_loc_channel_U->if_full_n(extLd4_loc_channel_full_n);
    extLd4_loc_channel_U->if_write(Block_proc33_U0_ap_done);
    extLd4_loc_channel_U->if_dout(extLd4_loc_channel_dout);
    extLd4_loc_channel_U->if_empty_n(extLd4_loc_channel_empty_n);
    extLd4_loc_channel_U->if_read(fir_filter_b_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Block_proc33_U0_ap_continue);
    sensitive << ( extLd4_loc_channel_full_n );

    SC_METHOD(thread_Block_proc33_U0_ap_start);
    sensitive << ( x_q_V_empty_n );

    SC_METHOD(thread_Block_proc33_U0_start_full_n);

    SC_METHOD(thread_Block_proc33_U0_start_write);

    SC_METHOD(thread_Block_proc_U0_ap_continue);
    sensitive << ( extLd_loc_channel_full_n );

    SC_METHOD(thread_Block_proc_U0_ap_start);
    sensitive << ( x_i_V_empty_n );

    SC_METHOD(thread_Block_proc_U0_start_full_n);

    SC_METHOD(thread_Block_proc_U0_start_write);

    SC_METHOD(thread_ap_channel_done_extLd4_loc_channel);
    sensitive << ( Block_proc33_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_extLd_loc_channel);
    sensitive << ( Block_proc_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_x_i_V);
    sensitive << ( iq_mult_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_x_i_V );

    SC_METHOD(thread_ap_channel_done_x_q_V);
    sensitive << ( iq_mult_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_x_q_V );

    SC_METHOD(thread_ap_sync_channel_write_x_i_V);
    sensitive << ( ap_channel_done_x_i_V );
    sensitive << ( x_i_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_x_i_V );

    SC_METHOD(thread_ap_sync_channel_write_x_q_V);
    sensitive << ( ap_channel_done_x_q_V );
    sensitive << ( x_q_V_full_n );
    sensitive << ( ap_sync_reg_channel_write_x_q_V );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_fir_filter_a_U0_ap_continue);

    SC_METHOD(thread_fir_filter_a_U0_ap_start);
    sensitive << ( extLd_loc_channel_empty_n );

    SC_METHOD(thread_fir_filter_a_U0_start_full_n);

    SC_METHOD(thread_fir_filter_a_U0_start_write);

    SC_METHOD(thread_fir_filter_b_U0_ap_continue);

    SC_METHOD(thread_fir_filter_b_U0_ap_start);
    sensitive << ( extLd4_loc_channel_empty_n );

    SC_METHOD(thread_fir_filter_b_U0_start_full_n);

    SC_METHOD(thread_fir_filter_b_U0_start_write);

    SC_METHOD(thread_iq_mult_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_x_q_V );
    sensitive << ( ap_sync_channel_write_x_i_V );

    SC_METHOD(thread_iq_mult_U0_ap_start);

    SC_METHOD(thread_iq_mult_U0_start_full_n);

    SC_METHOD(thread_iq_mult_U0_start_write);

    SC_METHOD(thread_y_i_V);
    sensitive << ( fir_filter_a_U0_y_V );

    SC_METHOD(thread_y_i_V_ap_vld);
    sensitive << ( fir_filter_a_U0_y_V_ap_vld );

    SC_METHOD(thread_y_q_V);
    sensitive << ( fir_filter_b_U0_y_V );

    SC_METHOD(thread_y_q_V_ap_vld);
    sensitive << ( fir_filter_b_U0_y_V_ap_vld );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_channel_write_x_q_V = SC_LOGIC_0;
    ap_sync_reg_channel_write_x_i_V = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "d_conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, ref_i_V, "(port)ref_i_V");
    sc_trace(mVcdFile, ref_q_V, "(port)ref_q_V");
    sc_trace(mVcdFile, y_i_V, "(port)y_i_V");
    sc_trace(mVcdFile, y_q_V, "(port)y_q_V");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, x_V_ap_vld, "(port)x_V_ap_vld");
    sc_trace(mVcdFile, ref_i_V_ap_vld, "(port)ref_i_V_ap_vld");
    sc_trace(mVcdFile, ref_q_V_ap_vld, "(port)ref_q_V_ap_vld");
    sc_trace(mVcdFile, y_i_V_ap_vld, "(port)y_i_V_ap_vld");
    sc_trace(mVcdFile, y_q_V_ap_vld, "(port)y_q_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, iq_mult_U0_ap_start, "iq_mult_U0_ap_start");
    sc_trace(mVcdFile, iq_mult_U0_ap_done, "iq_mult_U0_ap_done");
    sc_trace(mVcdFile, iq_mult_U0_ap_continue, "iq_mult_U0_ap_continue");
    sc_trace(mVcdFile, iq_mult_U0_ap_idle, "iq_mult_U0_ap_idle");
    sc_trace(mVcdFile, iq_mult_U0_ap_ready, "iq_mult_U0_ap_ready");
    sc_trace(mVcdFile, iq_mult_U0_ap_return_0, "iq_mult_U0_ap_return_0");
    sc_trace(mVcdFile, iq_mult_U0_ap_return_1, "iq_mult_U0_ap_return_1");
    sc_trace(mVcdFile, ap_channel_done_x_q_V, "ap_channel_done_x_q_V");
    sc_trace(mVcdFile, x_q_V_full_n, "x_q_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_x_q_V, "ap_sync_reg_channel_write_x_q_V");
    sc_trace(mVcdFile, ap_sync_channel_write_x_q_V, "ap_sync_channel_write_x_q_V");
    sc_trace(mVcdFile, ap_channel_done_x_i_V, "ap_channel_done_x_i_V");
    sc_trace(mVcdFile, x_i_V_full_n, "x_i_V_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_x_i_V, "ap_sync_reg_channel_write_x_i_V");
    sc_trace(mVcdFile, ap_sync_channel_write_x_i_V, "ap_sync_channel_write_x_i_V");
    sc_trace(mVcdFile, Block_proc_U0_ap_start, "Block_proc_U0_ap_start");
    sc_trace(mVcdFile, Block_proc_U0_ap_done, "Block_proc_U0_ap_done");
    sc_trace(mVcdFile, Block_proc_U0_ap_continue, "Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc_U0_ap_idle, "Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready, "Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_ap_return, "Block_proc_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_extLd_loc_channel, "ap_channel_done_extLd_loc_channel");
    sc_trace(mVcdFile, extLd_loc_channel_full_n, "extLd_loc_channel_full_n");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_start, "fir_filter_a_U0_ap_start");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_done, "fir_filter_a_U0_ap_done");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_continue, "fir_filter_a_U0_ap_continue");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_idle, "fir_filter_a_U0_ap_idle");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_ready, "fir_filter_a_U0_ap_ready");
    sc_trace(mVcdFile, fir_filter_a_U0_y_V, "fir_filter_a_U0_y_V");
    sc_trace(mVcdFile, fir_filter_a_U0_y_V_ap_vld, "fir_filter_a_U0_y_V_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, Block_proc33_U0_ap_start, "Block_proc33_U0_ap_start");
    sc_trace(mVcdFile, Block_proc33_U0_ap_done, "Block_proc33_U0_ap_done");
    sc_trace(mVcdFile, Block_proc33_U0_ap_continue, "Block_proc33_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc33_U0_ap_idle, "Block_proc33_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc33_U0_ap_ready, "Block_proc33_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc33_U0_ap_return, "Block_proc33_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_extLd4_loc_channel, "ap_channel_done_extLd4_loc_channel");
    sc_trace(mVcdFile, extLd4_loc_channel_full_n, "extLd4_loc_channel_full_n");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_start, "fir_filter_b_U0_ap_start");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_done, "fir_filter_b_U0_ap_done");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_continue, "fir_filter_b_U0_ap_continue");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_idle, "fir_filter_b_U0_ap_idle");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_ready, "fir_filter_b_U0_ap_ready");
    sc_trace(mVcdFile, fir_filter_b_U0_y_V, "fir_filter_b_U0_y_V");
    sc_trace(mVcdFile, fir_filter_b_U0_y_V_ap_vld, "fir_filter_b_U0_y_V_ap_vld");
    sc_trace(mVcdFile, x_i_V_dout, "x_i_V_dout");
    sc_trace(mVcdFile, x_i_V_empty_n, "x_i_V_empty_n");
    sc_trace(mVcdFile, x_q_V_dout, "x_q_V_dout");
    sc_trace(mVcdFile, x_q_V_empty_n, "x_q_V_empty_n");
    sc_trace(mVcdFile, extLd_loc_channel_dout, "extLd_loc_channel_dout");
    sc_trace(mVcdFile, extLd_loc_channel_empty_n, "extLd_loc_channel_empty_n");
    sc_trace(mVcdFile, extLd4_loc_channel_dout, "extLd4_loc_channel_dout");
    sc_trace(mVcdFile, extLd4_loc_channel_empty_n, "extLd4_loc_channel_empty_n");
    sc_trace(mVcdFile, iq_mult_U0_start_full_n, "iq_mult_U0_start_full_n");
    sc_trace(mVcdFile, iq_mult_U0_start_write, "iq_mult_U0_start_write");
    sc_trace(mVcdFile, Block_proc_U0_start_full_n, "Block_proc_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc_U0_start_write, "Block_proc_U0_start_write");
    sc_trace(mVcdFile, fir_filter_a_U0_start_full_n, "fir_filter_a_U0_start_full_n");
    sc_trace(mVcdFile, fir_filter_a_U0_start_write, "fir_filter_a_U0_start_write");
    sc_trace(mVcdFile, Block_proc33_U0_start_full_n, "Block_proc33_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc33_U0_start_write, "Block_proc33_U0_start_write");
    sc_trace(mVcdFile, fir_filter_b_U0_start_full_n, "fir_filter_b_U0_start_full_n");
    sc_trace(mVcdFile, fir_filter_b_U0_start_write, "fir_filter_b_U0_start_write");
#endif

    }
    mHdltvinHandle.open("d_conv.hdltvin.dat");
    mHdltvoutHandle.open("d_conv.hdltvout.dat");
}

d_conv::~d_conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete iq_mult_U0;
    delete Block_proc_U0;
    delete fir_filter_a_U0;
    delete Block_proc33_U0;
    delete fir_filter_b_U0;
    delete x_i_V_U;
    delete x_q_V_U;
    delete extLd_loc_channel_U;
    delete extLd4_loc_channel_U;
}

void d_conv::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void d_conv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_x_i_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (iq_mult_U0_ap_done.read() & 
             iq_mult_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_x_i_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_x_i_V = ap_sync_channel_write_x_i_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_x_q_V = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (iq_mult_U0_ap_done.read() & 
             iq_mult_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_x_q_V = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_x_q_V = ap_sync_channel_write_x_q_V.read();
        }
    }
}

void d_conv::thread_Block_proc33_U0_ap_continue() {
    Block_proc33_U0_ap_continue = extLd4_loc_channel_full_n.read();
}

void d_conv::thread_Block_proc33_U0_ap_start() {
    Block_proc33_U0_ap_start = x_q_V_empty_n.read();
}

void d_conv::thread_Block_proc33_U0_start_full_n() {
    Block_proc33_U0_start_full_n = ap_const_logic_1;
}

void d_conv::thread_Block_proc33_U0_start_write() {
    Block_proc33_U0_start_write = ap_const_logic_0;
}

void d_conv::thread_Block_proc_U0_ap_continue() {
    Block_proc_U0_ap_continue = extLd_loc_channel_full_n.read();
}

void d_conv::thread_Block_proc_U0_ap_start() {
    Block_proc_U0_ap_start = x_i_V_empty_n.read();
}

void d_conv::thread_Block_proc_U0_start_full_n() {
    Block_proc_U0_start_full_n = ap_const_logic_1;
}

void d_conv::thread_Block_proc_U0_start_write() {
    Block_proc_U0_start_write = ap_const_logic_0;
}

void d_conv::thread_ap_channel_done_extLd4_loc_channel() {
    ap_channel_done_extLd4_loc_channel = Block_proc33_U0_ap_done.read();
}

void d_conv::thread_ap_channel_done_extLd_loc_channel() {
    ap_channel_done_extLd_loc_channel = Block_proc_U0_ap_done.read();
}

void d_conv::thread_ap_channel_done_x_i_V() {
    ap_channel_done_x_i_V = (iq_mult_U0_ap_done.read() & (ap_sync_reg_channel_write_x_i_V.read() ^ 
  ap_const_logic_1));
}

void d_conv::thread_ap_channel_done_x_q_V() {
    ap_channel_done_x_q_V = (iq_mult_U0_ap_done.read() & (ap_sync_reg_channel_write_x_q_V.read() ^ 
  ap_const_logic_1));
}

void d_conv::thread_ap_sync_channel_write_x_i_V() {
    ap_sync_channel_write_x_i_V = ((ap_channel_done_x_i_V.read() & 
  x_i_V_full_n.read()) | ap_sync_reg_channel_write_x_i_V.read());
}

void d_conv::thread_ap_sync_channel_write_x_q_V() {
    ap_sync_channel_write_x_q_V = ((ap_channel_done_x_q_V.read() & 
  x_q_V_full_n.read()) | ap_sync_reg_channel_write_x_q_V.read());
}

void d_conv::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void d_conv::thread_fir_filter_a_U0_ap_continue() {
    fir_filter_a_U0_ap_continue = ap_const_logic_1;
}

void d_conv::thread_fir_filter_a_U0_ap_start() {
    fir_filter_a_U0_ap_start = extLd_loc_channel_empty_n.read();
}

void d_conv::thread_fir_filter_a_U0_start_full_n() {
    fir_filter_a_U0_start_full_n = ap_const_logic_1;
}

void d_conv::thread_fir_filter_a_U0_start_write() {
    fir_filter_a_U0_start_write = ap_const_logic_0;
}

void d_conv::thread_fir_filter_b_U0_ap_continue() {
    fir_filter_b_U0_ap_continue = ap_const_logic_1;
}

void d_conv::thread_fir_filter_b_U0_ap_start() {
    fir_filter_b_U0_ap_start = extLd4_loc_channel_empty_n.read();
}

void d_conv::thread_fir_filter_b_U0_start_full_n() {
    fir_filter_b_U0_start_full_n = ap_const_logic_1;
}

void d_conv::thread_fir_filter_b_U0_start_write() {
    fir_filter_b_U0_start_write = ap_const_logic_0;
}

void d_conv::thread_iq_mult_U0_ap_continue() {
    iq_mult_U0_ap_continue = (ap_sync_channel_write_x_q_V.read() & ap_sync_channel_write_x_i_V.read());
}

void d_conv::thread_iq_mult_U0_ap_start() {
    iq_mult_U0_ap_start = ap_const_logic_1;
}

void d_conv::thread_iq_mult_U0_start_full_n() {
    iq_mult_U0_start_full_n = ap_const_logic_1;
}

void d_conv::thread_iq_mult_U0_start_write() {
    iq_mult_U0_start_write = ap_const_logic_0;
}

void d_conv::thread_y_i_V() {
    y_i_V = fir_filter_a_U0_y_V.read();
}

void d_conv::thread_y_i_V_ap_vld() {
    y_i_V_ap_vld = fir_filter_a_U0_y_V_ap_vld.read();
}

void d_conv::thread_y_q_V() {
    y_q_V = fir_filter_b_U0_y_V.read();
}

void d_conv::thread_y_q_V_ap_vld() {
    y_q_V_ap_vld = fir_filter_b_U0_y_V_ap_vld.read();
}

void d_conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"x_V\" :  \"" << x_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_i_V\" :  \"" << ref_i_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_q_V\" :  \"" << ref_q_V.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"y_i_V\" :  \"" << y_i_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_q_V\" :  \"" << y_q_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V_ap_vld\" :  \"" << x_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_i_V_ap_vld\" :  \"" << ref_i_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_q_V_ap_vld\" :  \"" << ref_q_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_i_V_ap_vld\" :  \"" << y_i_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_q_V_ap_vld\" :  \"" << y_q_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

