// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fir_filter_a (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x_dout,
        x_empty_n,
        x_read,
        y_din,
        y_full_n,
        y_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] x_dout;
input   x_empty_n;
output   x_read;
output  [31:0] y_din;
input   y_full_n;
output   y_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x_read;
reg y_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] shift_reg_1_62;
reg   [31:0] shift_reg_1_61;
reg   [31:0] shift_reg_1_60;
reg   [31:0] shift_reg_1_59;
reg   [31:0] shift_reg_1_58;
reg   [31:0] shift_reg_1_57;
reg   [31:0] shift_reg_1_56;
reg   [31:0] shift_reg_1_55;
reg   [31:0] shift_reg_1_54;
reg   [31:0] shift_reg_1_53;
reg   [31:0] shift_reg_1_52;
reg   [31:0] shift_reg_1_51;
reg   [31:0] shift_reg_1_50;
reg   [31:0] shift_reg_1_49;
reg   [31:0] shift_reg_1_48;
reg   [31:0] shift_reg_1_47;
reg   [31:0] shift_reg_1_46;
reg   [31:0] shift_reg_1_45;
reg   [31:0] shift_reg_1_44;
reg   [31:0] shift_reg_1_43;
reg   [31:0] shift_reg_1_42;
reg   [31:0] shift_reg_1_41;
reg   [31:0] shift_reg_1_40;
reg   [31:0] shift_reg_1_39;
reg   [31:0] shift_reg_1_38;
reg   [31:0] shift_reg_1_37;
reg   [31:0] shift_reg_1_36;
reg   [31:0] shift_reg_1_35;
reg   [31:0] shift_reg_1_34;
reg   [31:0] shift_reg_1_33;
reg   [31:0] shift_reg_1_32;
reg   [31:0] shift_reg_1_31;
reg   [31:0] shift_reg_1_30;
reg   [31:0] shift_reg_1_29;
reg   [31:0] shift_reg_1_28;
reg   [31:0] shift_reg_1_27;
reg   [31:0] shift_reg_1_26;
reg   [31:0] shift_reg_1_25;
reg   [31:0] shift_reg_1_24;
reg   [31:0] shift_reg_1_23;
reg   [31:0] shift_reg_1_22;
reg   [31:0] shift_reg_1_21;
reg   [31:0] shift_reg_1_20;
reg   [31:0] shift_reg_1_19;
reg   [31:0] shift_reg_1_18;
reg   [31:0] shift_reg_1_17;
reg   [31:0] shift_reg_1_16;
reg   [31:0] shift_reg_1_15;
reg   [31:0] shift_reg_1_14;
reg   [31:0] shift_reg_1_13;
reg   [31:0] shift_reg_1_12;
reg   [31:0] shift_reg_1_11;
reg   [31:0] shift_reg_1_10;
reg   [31:0] shift_reg_1_9;
reg   [31:0] shift_reg_1_8;
reg   [31:0] shift_reg_1_7;
reg   [31:0] shift_reg_1_6;
reg   [31:0] shift_reg_1_5;
reg   [31:0] shift_reg_1_4;
reg   [31:0] shift_reg_1_3;
reg   [31:0] shift_reg_1_2;
reg   [31:0] shift_reg_1_1;
reg   [31:0] shift_reg_1_0;
reg    x_blk_n;
wire    ap_block_pp0_stage0;
reg    y_blk_n;
reg  signed [31:0] data_reg_1610;
reg  signed [31:0] shift_reg_1_2_load_reg_1616;
wire   [31:0] mul_ln55_55_fu_255_p2;
reg   [31:0] mul_ln55_55_reg_1621;
wire   [31:0] mul_ln55_56_fu_271_p2;
reg   [31:0] mul_ln55_56_reg_1626;
reg   [31:0] shift_reg_1_0_load_reg_1631;
reg   [31:0] shift_reg_1_0_load_reg_1631_pp0_iter2_reg;
wire   [31:0] mul_ln55_57_fu_292_p2;
reg   [31:0] mul_ln55_57_reg_1637;
wire   [31:0] mul_ln55_fu_301_p2;
reg   [31:0] mul_ln55_reg_1642;
reg   [31:0] shift_reg_1_61_load_reg_1647;
wire   [31:0] mul_ln55_1_fu_327_p2;
reg   [31:0] mul_ln55_1_reg_1653;
wire   [31:0] mul_ln55_2_fu_343_p2;
reg   [31:0] mul_ln55_2_reg_1658;
wire   [31:0] mul_ln55_3_fu_359_p2;
reg   [31:0] mul_ln55_3_reg_1663;
wire   [31:0] mul_ln55_4_fu_375_p2;
reg   [31:0] mul_ln55_4_reg_1668;
reg   [31:0] shift_reg_1_56_load_reg_1673;
wire   [31:0] mul_ln55_5_fu_401_p2;
reg   [31:0] mul_ln55_5_reg_1678;
reg   [31:0] shift_reg_1_54_load_reg_1683;
wire   [31:0] mul_ln55_6_fu_427_p2;
reg   [31:0] mul_ln55_6_reg_1689;
wire   [31:0] mul_ln55_7_fu_443_p2;
reg   [31:0] mul_ln55_7_reg_1694;
wire   [31:0] mul_ln55_8_fu_459_p2;
reg   [31:0] mul_ln55_8_reg_1699;
wire   [31:0] mul_ln55_9_fu_475_p2;
reg   [31:0] mul_ln55_9_reg_1704;
wire   [31:0] mul_ln55_10_fu_491_p2;
reg   [31:0] mul_ln55_10_reg_1709;
wire   [31:0] mul_ln55_11_fu_507_p2;
reg   [31:0] mul_ln55_11_reg_1714;
wire   [31:0] mul_ln55_12_fu_523_p2;
reg   [31:0] mul_ln55_12_reg_1719;
wire   [31:0] mul_ln55_13_fu_539_p2;
reg   [31:0] mul_ln55_13_reg_1724;
wire   [31:0] mul_ln55_14_fu_555_p2;
reg   [31:0] mul_ln55_14_reg_1729;
wire   [31:0] mul_ln55_15_fu_571_p2;
reg   [31:0] mul_ln55_15_reg_1734;
wire   [31:0] mul_ln55_16_fu_587_p2;
reg   [31:0] mul_ln55_16_reg_1739;
wire   [31:0] mul_ln55_17_fu_603_p2;
reg   [31:0] mul_ln55_17_reg_1744;
wire   [31:0] mul_ln55_18_fu_619_p2;
reg   [31:0] mul_ln55_18_reg_1749;
wire   [31:0] mul_ln55_19_fu_635_p2;
reg   [31:0] mul_ln55_19_reg_1754;
wire   [31:0] mul_ln55_20_fu_651_p2;
reg   [31:0] mul_ln55_20_reg_1759;
wire   [31:0] mul_ln55_21_fu_667_p2;
reg   [31:0] mul_ln55_21_reg_1764;
wire   [31:0] mul_ln55_22_fu_683_p2;
reg   [31:0] mul_ln55_22_reg_1769;
wire   [31:0] mul_ln55_23_fu_699_p2;
reg   [31:0] mul_ln55_23_reg_1774;
wire   [31:0] mul_ln55_24_fu_715_p2;
reg   [31:0] mul_ln55_24_reg_1779;
wire   [31:0] mul_ln55_25_fu_731_p2;
reg   [31:0] mul_ln55_25_reg_1784;
wire   [31:0] mul_ln55_26_fu_747_p2;
reg   [31:0] mul_ln55_26_reg_1789;
wire   [31:0] mul_ln55_27_fu_763_p2;
reg   [31:0] mul_ln55_27_reg_1794;
wire   [31:0] mul_ln55_28_fu_779_p2;
reg   [31:0] mul_ln55_28_reg_1799;
wire   [31:0] mul_ln55_29_fu_795_p2;
reg   [31:0] mul_ln55_29_reg_1804;
wire   [31:0] mul_ln55_30_fu_811_p2;
reg   [31:0] mul_ln55_30_reg_1809;
wire   [31:0] mul_ln55_31_fu_827_p2;
reg   [31:0] mul_ln55_31_reg_1814;
wire   [31:0] mul_ln55_32_fu_843_p2;
reg   [31:0] mul_ln55_32_reg_1819;
wire   [31:0] mul_ln55_33_fu_859_p2;
reg   [31:0] mul_ln55_33_reg_1824;
wire   [31:0] mul_ln55_34_fu_875_p2;
reg   [31:0] mul_ln55_34_reg_1829;
wire   [31:0] mul_ln55_35_fu_891_p2;
reg   [31:0] mul_ln55_35_reg_1834;
wire   [31:0] mul_ln55_36_fu_907_p2;
reg   [31:0] mul_ln55_36_reg_1839;
wire   [31:0] mul_ln55_37_fu_923_p2;
reg   [31:0] mul_ln55_37_reg_1844;
wire   [31:0] mul_ln55_38_fu_939_p2;
reg   [31:0] mul_ln55_38_reg_1849;
wire   [31:0] mul_ln55_39_fu_955_p2;
reg   [31:0] mul_ln55_39_reg_1854;
wire   [31:0] mul_ln55_40_fu_971_p2;
reg   [31:0] mul_ln55_40_reg_1859;
wire   [31:0] mul_ln55_41_fu_987_p2;
reg   [31:0] mul_ln55_41_reg_1864;
wire   [31:0] mul_ln55_42_fu_1003_p2;
reg   [31:0] mul_ln55_42_reg_1869;
wire   [31:0] mul_ln55_43_fu_1019_p2;
reg   [31:0] mul_ln55_43_reg_1874;
wire   [31:0] mul_ln55_44_fu_1035_p2;
reg   [31:0] mul_ln55_44_reg_1879;
wire   [31:0] mul_ln55_45_fu_1051_p2;
reg   [31:0] mul_ln55_45_reg_1884;
wire   [31:0] mul_ln55_46_fu_1067_p2;
reg   [31:0] mul_ln55_46_reg_1889;
wire   [31:0] mul_ln55_47_fu_1083_p2;
reg   [31:0] mul_ln55_47_reg_1894;
wire   [31:0] mul_ln55_48_fu_1099_p2;
reg   [31:0] mul_ln55_48_reg_1899;
wire   [31:0] mul_ln55_49_fu_1115_p2;
reg   [31:0] mul_ln55_49_reg_1904;
wire   [31:0] mul_ln55_50_fu_1131_p2;
reg   [31:0] mul_ln55_50_reg_1909;
wire   [31:0] mul_ln55_51_fu_1147_p2;
reg   [31:0] mul_ln55_51_reg_1914;
reg   [31:0] shift_reg_1_7_load_reg_1919;
wire   [31:0] sub_ln55_2_fu_1169_p2;
reg   [31:0] sub_ln55_2_reg_1924;
wire   [31:0] mul_ln55_52_fu_1185_p2;
reg   [31:0] mul_ln55_52_reg_1929;
reg   [31:0] shift_reg_1_5_load_reg_1934;
wire   [31:0] mul_ln55_53_fu_1211_p2;
reg   [31:0] mul_ln55_53_reg_1939;
wire   [31:0] mul_ln55_54_fu_1227_p2;
reg   [31:0] mul_ln55_54_reg_1944;
wire   [31:0] add_ln55_59_fu_1242_p2;
reg   [31:0] add_ln55_59_reg_1949;
wire   [31:0] add_ln55_2_fu_1320_p2;
reg   [31:0] add_ln55_2_reg_1954;
wire   [31:0] add_ln55_5_fu_1335_p2;
reg   [31:0] add_ln55_5_reg_1959;
wire   [31:0] add_ln55_7_fu_1341_p2;
reg   [31:0] add_ln55_7_reg_1964;
wire   [31:0] add_ln55_8_fu_1346_p2;
reg   [31:0] add_ln55_8_reg_1969;
wire   [31:0] add_ln55_12_fu_1359_p2;
reg   [31:0] add_ln55_12_reg_1974;
wire   [31:0] add_ln55_17_fu_1373_p2;
reg   [31:0] add_ln55_17_reg_1979;
wire   [31:0] add_ln55_20_fu_1387_p2;
reg   [31:0] add_ln55_20_reg_1984;
wire   [31:0] add_ln55_22_fu_1393_p2;
reg   [31:0] add_ln55_22_reg_1989;
wire   [31:0] add_ln55_23_fu_1397_p2;
reg   [31:0] add_ln55_23_reg_1994;
wire   [31:0] add_ln55_28_fu_1414_p2;
reg   [31:0] add_ln55_28_reg_1999;
wire   [31:0] add_ln55_32_fu_1420_p2;
reg   [31:0] add_ln55_32_reg_2004;
wire   [31:0] add_ln55_33_fu_1424_p2;
reg   [31:0] add_ln55_33_reg_2009;
wire   [31:0] add_ln55_37_fu_1436_p2;
reg   [31:0] add_ln55_37_reg_2014;
wire   [31:0] add_ln55_39_fu_1442_p2;
reg   [31:0] add_ln55_39_reg_2019;
wire   [31:0] add_ln55_40_fu_1446_p2;
reg   [31:0] add_ln55_40_reg_2024;
wire   [31:0] add_ln55_44_fu_1458_p2;
reg   [31:0] add_ln55_44_reg_2029;
wire   [31:0] add_ln55_49_fu_1472_p2;
reg   [31:0] add_ln55_49_reg_2034;
wire   [31:0] add_ln55_52_fu_1486_p2;
reg   [31:0] add_ln55_52_reg_2039;
wire   [31:0] add_ln55_61_fu_1517_p2;
reg   [31:0] add_ln55_61_reg_2044;
wire   [31:0] add_ln55_14_fu_1536_p2;
reg   [31:0] add_ln55_14_reg_2049;
wire   [31:0] add_ln55_30_fu_1555_p2;
reg   [31:0] add_ln55_30_reg_2054;
wire   [31:0] add_ln55_63_fu_1594_p2;
reg   [31:0] add_ln55_63_reg_2059;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] mul_ln55_55_fu_255_p1;
wire  signed [31:0] mul_ln55_56_fu_271_p1;
wire  signed [31:0] mul_ln55_fu_301_p1;
wire  signed [31:0] mul_ln55_1_fu_327_p1;
wire  signed [31:0] mul_ln55_2_fu_343_p1;
wire  signed [31:0] mul_ln55_3_fu_359_p1;
wire  signed [31:0] mul_ln55_4_fu_375_p1;
wire  signed [31:0] mul_ln55_5_fu_401_p1;
wire  signed [31:0] mul_ln55_6_fu_427_p1;
wire  signed [31:0] mul_ln55_7_fu_443_p1;
wire  signed [31:0] mul_ln55_8_fu_459_p1;
wire  signed [31:0] mul_ln55_9_fu_475_p1;
wire  signed [31:0] mul_ln55_10_fu_491_p1;
wire  signed [31:0] mul_ln55_11_fu_507_p1;
wire  signed [31:0] mul_ln55_12_fu_523_p1;
wire  signed [31:0] mul_ln55_13_fu_539_p1;
wire  signed [31:0] mul_ln55_14_fu_555_p1;
wire  signed [31:0] mul_ln55_15_fu_571_p1;
wire  signed [31:0] mul_ln55_16_fu_587_p1;
wire  signed [31:0] mul_ln55_17_fu_603_p1;
wire  signed [31:0] mul_ln55_18_fu_619_p1;
wire  signed [31:0] mul_ln55_19_fu_635_p1;
wire  signed [31:0] mul_ln55_20_fu_651_p1;
wire  signed [31:0] mul_ln55_21_fu_667_p1;
wire  signed [31:0] mul_ln55_22_fu_683_p1;
wire  signed [31:0] mul_ln55_23_fu_699_p1;
wire  signed [31:0] mul_ln55_24_fu_715_p1;
wire  signed [31:0] mul_ln55_25_fu_731_p1;
wire  signed [31:0] mul_ln55_26_fu_747_p1;
wire  signed [31:0] mul_ln55_27_fu_763_p1;
wire  signed [31:0] mul_ln55_28_fu_779_p1;
wire  signed [31:0] mul_ln55_29_fu_795_p1;
wire  signed [31:0] mul_ln55_30_fu_811_p1;
wire  signed [31:0] mul_ln55_31_fu_827_p1;
wire  signed [31:0] mul_ln55_32_fu_843_p1;
wire  signed [31:0] mul_ln55_33_fu_859_p1;
wire  signed [31:0] mul_ln55_34_fu_875_p1;
wire  signed [31:0] mul_ln55_35_fu_891_p1;
wire  signed [31:0] mul_ln55_36_fu_907_p1;
wire  signed [31:0] mul_ln55_37_fu_923_p1;
wire  signed [31:0] mul_ln55_38_fu_939_p1;
wire  signed [31:0] mul_ln55_39_fu_955_p1;
wire  signed [31:0] mul_ln55_40_fu_971_p1;
wire  signed [31:0] mul_ln55_41_fu_987_p1;
wire  signed [31:0] mul_ln55_42_fu_1003_p1;
wire  signed [31:0] mul_ln55_43_fu_1019_p1;
wire  signed [31:0] mul_ln55_44_fu_1035_p1;
wire  signed [31:0] mul_ln55_45_fu_1051_p1;
wire  signed [31:0] mul_ln55_46_fu_1067_p1;
wire  signed [31:0] mul_ln55_47_fu_1083_p1;
wire  signed [31:0] mul_ln55_48_fu_1099_p1;
wire  signed [31:0] mul_ln55_49_fu_1115_p1;
wire  signed [31:0] mul_ln55_50_fu_1131_p1;
wire  signed [31:0] mul_ln55_51_fu_1147_p1;
wire   [31:0] shl_ln55_5_fu_1163_p2;
wire  signed [31:0] mul_ln55_52_fu_1185_p1;
wire  signed [31:0] mul_ln55_53_fu_1211_p1;
wire  signed [31:0] mul_ln55_54_fu_1227_p1;
wire   [31:0] add_ln55_58_fu_1238_p2;
wire   [31:0] shl_ln55_3_fu_1262_p2;
wire   [31:0] sub_ln55_fu_1267_p2;
wire   [31:0] shl_ln55_4_fu_1273_p2;
wire   [31:0] shl_ln55_6_fu_1284_p2;
wire   [31:0] shl_ln55_9_fu_1304_p2;
wire   [31:0] shl_ln55_8_fu_1299_p2;
wire   [31:0] shl_ln55_fu_1247_p2;
wire   [31:0] add_ln55_1_fu_1315_p2;
wire   [31:0] add_ln55_fu_1309_p2;
wire   [31:0] shl_ln55_1_fu_1252_p2;
wire   [31:0] add_ln55_4_fu_1331_p2;
wire   [31:0] add_ln55_3_fu_1326_p2;
wire   [31:0] shl_ln55_2_fu_1257_p2;
wire   [31:0] sub_ln55_1_fu_1278_p2;
wire   [31:0] add_ln55_11_fu_1355_p2;
wire   [31:0] add_ln55_10_fu_1351_p2;
wire   [31:0] add_ln55_16_fu_1369_p2;
wire   [31:0] add_ln55_15_fu_1365_p2;
wire   [31:0] add_ln55_19_fu_1383_p2;
wire   [31:0] add_ln55_18_fu_1379_p2;
wire   [31:0] add_ln55_26_fu_1405_p2;
wire   [31:0] add_ln55_27_fu_1409_p2;
wire   [31:0] add_ln55_25_fu_1401_p2;
wire   [31:0] add_ln55_36_fu_1432_p2;
wire   [31:0] add_ln55_35_fu_1428_p2;
wire   [31:0] add_ln55_43_fu_1454_p2;
wire   [31:0] add_ln55_42_fu_1450_p2;
wire   [31:0] add_ln55_48_fu_1468_p2;
wire   [31:0] add_ln55_47_fu_1464_p2;
wire   [31:0] add_ln55_51_fu_1482_p2;
wire   [31:0] add_ln55_50_fu_1478_p2;
wire   [31:0] sub_ln55_3_fu_1289_p2;
wire   [31:0] shl_ln55_7_fu_1294_p2;
wire   [31:0] add_ln55_55_fu_1497_p2;
wire   [31:0] add_ln55_54_fu_1492_p2;
wire   [31:0] add_ln55_57_fu_1508_p2;
wire   [31:0] add_ln55_60_fu_1512_p2;
wire   [31:0] add_ln55_56_fu_1502_p2;
wire   [31:0] add_ln55_9_fu_1527_p2;
wire   [31:0] add_ln55_13_fu_1531_p2;
wire   [31:0] add_ln55_6_fu_1523_p2;
wire   [31:0] add_ln55_24_fu_1546_p2;
wire   [31:0] add_ln55_29_fu_1550_p2;
wire   [31:0] add_ln55_21_fu_1542_p2;
wire   [31:0] add_ln55_34_fu_1561_p2;
wire   [31:0] add_ln55_41_fu_1570_p2;
wire   [31:0] add_ln55_45_fu_1574_p2;
wire   [31:0] add_ln55_38_fu_1565_p2;
wire   [31:0] add_ln55_53_fu_1585_p2;
wire   [31:0] add_ln55_62_fu_1589_p2;
wire   [31:0] add_ln55_46_fu_1579_p2;
wire   [31:0] add_ln55_31_fu_1600_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 shift_reg_1_62 = 32'd0;
#0 shift_reg_1_61 = 32'd0;
#0 shift_reg_1_60 = 32'd0;
#0 shift_reg_1_59 = 32'd0;
#0 shift_reg_1_58 = 32'd0;
#0 shift_reg_1_57 = 32'd0;
#0 shift_reg_1_56 = 32'd0;
#0 shift_reg_1_55 = 32'd0;
#0 shift_reg_1_54 = 32'd0;
#0 shift_reg_1_53 = 32'd0;
#0 shift_reg_1_52 = 32'd0;
#0 shift_reg_1_51 = 32'd0;
#0 shift_reg_1_50 = 32'd0;
#0 shift_reg_1_49 = 32'd0;
#0 shift_reg_1_48 = 32'd0;
#0 shift_reg_1_47 = 32'd0;
#0 shift_reg_1_46 = 32'd0;
#0 shift_reg_1_45 = 32'd0;
#0 shift_reg_1_44 = 32'd0;
#0 shift_reg_1_43 = 32'd0;
#0 shift_reg_1_42 = 32'd0;
#0 shift_reg_1_41 = 32'd0;
#0 shift_reg_1_40 = 32'd0;
#0 shift_reg_1_39 = 32'd0;
#0 shift_reg_1_38 = 32'd0;
#0 shift_reg_1_37 = 32'd0;
#0 shift_reg_1_36 = 32'd0;
#0 shift_reg_1_35 = 32'd0;
#0 shift_reg_1_34 = 32'd0;
#0 shift_reg_1_33 = 32'd0;
#0 shift_reg_1_32 = 32'd0;
#0 shift_reg_1_31 = 32'd0;
#0 shift_reg_1_30 = 32'd0;
#0 shift_reg_1_29 = 32'd0;
#0 shift_reg_1_28 = 32'd0;
#0 shift_reg_1_27 = 32'd0;
#0 shift_reg_1_26 = 32'd0;
#0 shift_reg_1_25 = 32'd0;
#0 shift_reg_1_24 = 32'd0;
#0 shift_reg_1_23 = 32'd0;
#0 shift_reg_1_22 = 32'd0;
#0 shift_reg_1_21 = 32'd0;
#0 shift_reg_1_20 = 32'd0;
#0 shift_reg_1_19 = 32'd0;
#0 shift_reg_1_18 = 32'd0;
#0 shift_reg_1_17 = 32'd0;
#0 shift_reg_1_16 = 32'd0;
#0 shift_reg_1_15 = 32'd0;
#0 shift_reg_1_14 = 32'd0;
#0 shift_reg_1_13 = 32'd0;
#0 shift_reg_1_12 = 32'd0;
#0 shift_reg_1_11 = 32'd0;
#0 shift_reg_1_10 = 32'd0;
#0 shift_reg_1_9 = 32'd0;
#0 shift_reg_1_8 = 32'd0;
#0 shift_reg_1_7 = 32'd0;
#0 shift_reg_1_6 = 32'd0;
#0 shift_reg_1_5 = 32'd0;
#0 shift_reg_1_4 = 32'd0;
#0 shift_reg_1_3 = 32'd0;
#0 shift_reg_1_2 = 32'd0;
#0 shift_reg_1_1 = 32'd0;
#0 shift_reg_1_0 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln55_12_reg_1974 <= add_ln55_12_fu_1359_p2;
        add_ln55_14_reg_2049 <= add_ln55_14_fu_1536_p2;
        add_ln55_17_reg_1979 <= add_ln55_17_fu_1373_p2;
        add_ln55_20_reg_1984 <= add_ln55_20_fu_1387_p2;
        add_ln55_22_reg_1989 <= add_ln55_22_fu_1393_p2;
        add_ln55_23_reg_1994 <= add_ln55_23_fu_1397_p2;
        add_ln55_28_reg_1999 <= add_ln55_28_fu_1414_p2;
        add_ln55_2_reg_1954 <= add_ln55_2_fu_1320_p2;
        add_ln55_30_reg_2054 <= add_ln55_30_fu_1555_p2;
        add_ln55_32_reg_2004 <= add_ln55_32_fu_1420_p2;
        add_ln55_33_reg_2009 <= add_ln55_33_fu_1424_p2;
        add_ln55_37_reg_2014 <= add_ln55_37_fu_1436_p2;
        add_ln55_39_reg_2019 <= add_ln55_39_fu_1442_p2;
        add_ln55_40_reg_2024 <= add_ln55_40_fu_1446_p2;
        add_ln55_44_reg_2029 <= add_ln55_44_fu_1458_p2;
        add_ln55_49_reg_2034 <= add_ln55_49_fu_1472_p2;
        add_ln55_52_reg_2039 <= add_ln55_52_fu_1486_p2;
        add_ln55_59_reg_1949 <= add_ln55_59_fu_1242_p2;
        add_ln55_5_reg_1959 <= add_ln55_5_fu_1335_p2;
        add_ln55_61_reg_2044 <= add_ln55_61_fu_1517_p2;
        add_ln55_63_reg_2059 <= add_ln55_63_fu_1594_p2;
        add_ln55_7_reg_1964 <= add_ln55_7_fu_1341_p2;
        add_ln55_8_reg_1969 <= add_ln55_8_fu_1346_p2;
        mul_ln55_10_reg_1709 <= mul_ln55_10_fu_491_p2;
        mul_ln55_11_reg_1714 <= mul_ln55_11_fu_507_p2;
        mul_ln55_12_reg_1719 <= mul_ln55_12_fu_523_p2;
        mul_ln55_13_reg_1724 <= mul_ln55_13_fu_539_p2;
        mul_ln55_14_reg_1729 <= mul_ln55_14_fu_555_p2;
        mul_ln55_15_reg_1734 <= mul_ln55_15_fu_571_p2;
        mul_ln55_16_reg_1739 <= mul_ln55_16_fu_587_p2;
        mul_ln55_17_reg_1744 <= mul_ln55_17_fu_603_p2;
        mul_ln55_18_reg_1749 <= mul_ln55_18_fu_619_p2;
        mul_ln55_19_reg_1754 <= mul_ln55_19_fu_635_p2;
        mul_ln55_1_reg_1653 <= mul_ln55_1_fu_327_p2;
        mul_ln55_20_reg_1759 <= mul_ln55_20_fu_651_p2;
        mul_ln55_21_reg_1764 <= mul_ln55_21_fu_667_p2;
        mul_ln55_22_reg_1769 <= mul_ln55_22_fu_683_p2;
        mul_ln55_23_reg_1774 <= mul_ln55_23_fu_699_p2;
        mul_ln55_24_reg_1779 <= mul_ln55_24_fu_715_p2;
        mul_ln55_25_reg_1784 <= mul_ln55_25_fu_731_p2;
        mul_ln55_26_reg_1789 <= mul_ln55_26_fu_747_p2;
        mul_ln55_27_reg_1794 <= mul_ln55_27_fu_763_p2;
        mul_ln55_28_reg_1799 <= mul_ln55_28_fu_779_p2;
        mul_ln55_29_reg_1804 <= mul_ln55_29_fu_795_p2;
        mul_ln55_2_reg_1658 <= mul_ln55_2_fu_343_p2;
        mul_ln55_30_reg_1809 <= mul_ln55_30_fu_811_p2;
        mul_ln55_31_reg_1814 <= mul_ln55_31_fu_827_p2;
        mul_ln55_32_reg_1819 <= mul_ln55_32_fu_843_p2;
        mul_ln55_33_reg_1824 <= mul_ln55_33_fu_859_p2;
        mul_ln55_34_reg_1829 <= mul_ln55_34_fu_875_p2;
        mul_ln55_35_reg_1834 <= mul_ln55_35_fu_891_p2;
        mul_ln55_36_reg_1839 <= mul_ln55_36_fu_907_p2;
        mul_ln55_37_reg_1844 <= mul_ln55_37_fu_923_p2;
        mul_ln55_38_reg_1849 <= mul_ln55_38_fu_939_p2;
        mul_ln55_39_reg_1854 <= mul_ln55_39_fu_955_p2;
        mul_ln55_3_reg_1663 <= mul_ln55_3_fu_359_p2;
        mul_ln55_40_reg_1859 <= mul_ln55_40_fu_971_p2;
        mul_ln55_41_reg_1864 <= mul_ln55_41_fu_987_p2;
        mul_ln55_42_reg_1869 <= mul_ln55_42_fu_1003_p2;
        mul_ln55_43_reg_1874 <= mul_ln55_43_fu_1019_p2;
        mul_ln55_44_reg_1879 <= mul_ln55_44_fu_1035_p2;
        mul_ln55_45_reg_1884 <= mul_ln55_45_fu_1051_p2;
        mul_ln55_46_reg_1889 <= mul_ln55_46_fu_1067_p2;
        mul_ln55_47_reg_1894 <= mul_ln55_47_fu_1083_p2;
        mul_ln55_48_reg_1899 <= mul_ln55_48_fu_1099_p2;
        mul_ln55_49_reg_1904 <= mul_ln55_49_fu_1115_p2;
        mul_ln55_4_reg_1668 <= mul_ln55_4_fu_375_p2;
        mul_ln55_50_reg_1909 <= mul_ln55_50_fu_1131_p2;
        mul_ln55_51_reg_1914 <= mul_ln55_51_fu_1147_p2;
        mul_ln55_52_reg_1929 <= mul_ln55_52_fu_1185_p2;
        mul_ln55_53_reg_1939 <= mul_ln55_53_fu_1211_p2;
        mul_ln55_54_reg_1944 <= mul_ln55_54_fu_1227_p2;
        mul_ln55_5_reg_1678 <= mul_ln55_5_fu_401_p2;
        mul_ln55_6_reg_1689 <= mul_ln55_6_fu_427_p2;
        mul_ln55_7_reg_1694 <= mul_ln55_7_fu_443_p2;
        mul_ln55_8_reg_1699 <= mul_ln55_8_fu_459_p2;
        mul_ln55_9_reg_1704 <= mul_ln55_9_fu_475_p2;
        mul_ln55_reg_1642 <= mul_ln55_fu_301_p2;
        shift_reg_1_0_load_reg_1631_pp0_iter2_reg <= shift_reg_1_0_load_reg_1631;
        shift_reg_1_54_load_reg_1683 <= shift_reg_1_54;
        shift_reg_1_56_load_reg_1673 <= shift_reg_1_56;
        shift_reg_1_5_load_reg_1934 <= shift_reg_1_5;
        shift_reg_1_61_load_reg_1647 <= shift_reg_1_61;
        shift_reg_1_7_load_reg_1919 <= shift_reg_1_7;
        sub_ln55_2_reg_1924[31 : 5] <= sub_ln55_2_fu_1169_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_reg_1610 <= x_dout;
        mul_ln55_55_reg_1621 <= mul_ln55_55_fu_255_p2;
        mul_ln55_56_reg_1626 <= mul_ln55_56_fu_271_p2;
        mul_ln55_57_reg_1637 <= mul_ln55_57_fu_292_p2;
        shift_reg_1_0_load_reg_1631 <= shift_reg_1_0;
        shift_reg_1_2_load_reg_1616 <= shift_reg_1_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_1_0 <= data_reg_1610;
        shift_reg_1_1 <= shift_reg_1_0;
        shift_reg_1_2 <= shift_reg_1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        shift_reg_1_10 <= shift_reg_1_9;
        shift_reg_1_11 <= shift_reg_1_10;
        shift_reg_1_12 <= shift_reg_1_11;
        shift_reg_1_13 <= shift_reg_1_12;
        shift_reg_1_14 <= shift_reg_1_13;
        shift_reg_1_15 <= shift_reg_1_14;
        shift_reg_1_16 <= shift_reg_1_15;
        shift_reg_1_17 <= shift_reg_1_16;
        shift_reg_1_18 <= shift_reg_1_17;
        shift_reg_1_19 <= shift_reg_1_18;
        shift_reg_1_20 <= shift_reg_1_19;
        shift_reg_1_21 <= shift_reg_1_20;
        shift_reg_1_22 <= shift_reg_1_21;
        shift_reg_1_23 <= shift_reg_1_22;
        shift_reg_1_24 <= shift_reg_1_23;
        shift_reg_1_25 <= shift_reg_1_24;
        shift_reg_1_26 <= shift_reg_1_25;
        shift_reg_1_27 <= shift_reg_1_26;
        shift_reg_1_28 <= shift_reg_1_27;
        shift_reg_1_29 <= shift_reg_1_28;
        shift_reg_1_3 <= shift_reg_1_2_load_reg_1616;
        shift_reg_1_30 <= shift_reg_1_29;
        shift_reg_1_31 <= shift_reg_1_30;
        shift_reg_1_32 <= shift_reg_1_31;
        shift_reg_1_33 <= shift_reg_1_32;
        shift_reg_1_34 <= shift_reg_1_33;
        shift_reg_1_35 <= shift_reg_1_34;
        shift_reg_1_36 <= shift_reg_1_35;
        shift_reg_1_37 <= shift_reg_1_36;
        shift_reg_1_38 <= shift_reg_1_37;
        shift_reg_1_39 <= shift_reg_1_38;
        shift_reg_1_4 <= shift_reg_1_3;
        shift_reg_1_40 <= shift_reg_1_39;
        shift_reg_1_41 <= shift_reg_1_40;
        shift_reg_1_42 <= shift_reg_1_41;
        shift_reg_1_43 <= shift_reg_1_42;
        shift_reg_1_44 <= shift_reg_1_43;
        shift_reg_1_45 <= shift_reg_1_44;
        shift_reg_1_46 <= shift_reg_1_45;
        shift_reg_1_47 <= shift_reg_1_46;
        shift_reg_1_48 <= shift_reg_1_47;
        shift_reg_1_49 <= shift_reg_1_48;
        shift_reg_1_5 <= shift_reg_1_4;
        shift_reg_1_50 <= shift_reg_1_49;
        shift_reg_1_51 <= shift_reg_1_50;
        shift_reg_1_52 <= shift_reg_1_51;
        shift_reg_1_53 <= shift_reg_1_52;
        shift_reg_1_54 <= shift_reg_1_53;
        shift_reg_1_55 <= shift_reg_1_54;
        shift_reg_1_56 <= shift_reg_1_55;
        shift_reg_1_57 <= shift_reg_1_56;
        shift_reg_1_58 <= shift_reg_1_57;
        shift_reg_1_59 <= shift_reg_1_58;
        shift_reg_1_6 <= shift_reg_1_5;
        shift_reg_1_60 <= shift_reg_1_59;
        shift_reg_1_61 <= shift_reg_1_60;
        shift_reg_1_62 <= shift_reg_1_61;
        shift_reg_1_7 <= shift_reg_1_6;
        shift_reg_1_8 <= shift_reg_1_7;
        shift_reg_1_9 <= shift_reg_1_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_blk_n = x_empty_n;
    end else begin
        x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_read = 1'b1;
    end else begin
        x_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        y_blk_n = y_full_n;
    end else begin
        y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        y_write = 1'b1;
    end else begin
        y_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_10_fu_1351_p2 = (mul_ln55_6_reg_1689 + mul_ln55_7_reg_1694);

assign add_ln55_11_fu_1355_p2 = (mul_ln55_8_reg_1699 + mul_ln55_9_reg_1704);

assign add_ln55_12_fu_1359_p2 = (add_ln55_11_fu_1355_p2 + add_ln55_10_fu_1351_p2);

assign add_ln55_13_fu_1531_p2 = (add_ln55_12_reg_1974 + add_ln55_9_fu_1527_p2);

assign add_ln55_14_fu_1536_p2 = (add_ln55_13_fu_1531_p2 + add_ln55_6_fu_1523_p2);

assign add_ln55_15_fu_1365_p2 = (mul_ln55_10_reg_1709 + mul_ln55_11_reg_1714);

assign add_ln55_16_fu_1369_p2 = (mul_ln55_12_reg_1719 + mul_ln55_13_reg_1724);

assign add_ln55_17_fu_1373_p2 = (add_ln55_16_fu_1369_p2 + add_ln55_15_fu_1365_p2);

assign add_ln55_18_fu_1379_p2 = (mul_ln55_14_reg_1729 + mul_ln55_15_reg_1734);

assign add_ln55_19_fu_1383_p2 = (mul_ln55_16_reg_1739 + mul_ln55_17_reg_1744);

assign add_ln55_1_fu_1315_p2 = (mul_ln55_reg_1642 + shl_ln55_fu_1247_p2);

assign add_ln55_20_fu_1387_p2 = (add_ln55_19_fu_1383_p2 + add_ln55_18_fu_1379_p2);

assign add_ln55_21_fu_1542_p2 = (add_ln55_20_reg_1984 + add_ln55_17_reg_1979);

assign add_ln55_22_fu_1393_p2 = (mul_ln55_18_reg_1749 + mul_ln55_19_reg_1754);

assign add_ln55_23_fu_1397_p2 = (mul_ln55_20_reg_1759 + mul_ln55_21_reg_1764);

assign add_ln55_24_fu_1546_p2 = (add_ln55_23_reg_1994 + add_ln55_22_reg_1989);

assign add_ln55_25_fu_1401_p2 = (mul_ln55_22_reg_1769 + mul_ln55_23_reg_1774);

assign add_ln55_26_fu_1405_p2 = (mul_ln55_25_reg_1784 + mul_ln55_26_reg_1789);

assign add_ln55_27_fu_1409_p2 = (add_ln55_26_fu_1405_p2 + mul_ln55_24_reg_1779);

assign add_ln55_28_fu_1414_p2 = (add_ln55_27_fu_1409_p2 + add_ln55_25_fu_1401_p2);

assign add_ln55_29_fu_1550_p2 = (add_ln55_28_reg_1999 + add_ln55_24_fu_1546_p2);

assign add_ln55_2_fu_1320_p2 = (add_ln55_1_fu_1315_p2 + add_ln55_fu_1309_p2);

assign add_ln55_30_fu_1555_p2 = (add_ln55_29_fu_1550_p2 + add_ln55_21_fu_1542_p2);

assign add_ln55_31_fu_1600_p2 = (add_ln55_30_reg_2054 + add_ln55_14_reg_2049);

assign add_ln55_32_fu_1420_p2 = (mul_ln55_27_reg_1794 + mul_ln55_28_reg_1799);

assign add_ln55_33_fu_1424_p2 = (mul_ln55_29_reg_1804 + mul_ln55_30_reg_1809);

assign add_ln55_34_fu_1561_p2 = (add_ln55_33_reg_2009 + add_ln55_32_reg_2004);

assign add_ln55_35_fu_1428_p2 = (mul_ln55_31_reg_1814 + mul_ln55_32_reg_1819);

assign add_ln55_36_fu_1432_p2 = (mul_ln55_33_reg_1824 + mul_ln55_34_reg_1829);

assign add_ln55_37_fu_1436_p2 = (add_ln55_36_fu_1432_p2 + add_ln55_35_fu_1428_p2);

assign add_ln55_38_fu_1565_p2 = (add_ln55_37_reg_2014 + add_ln55_34_fu_1561_p2);

assign add_ln55_39_fu_1442_p2 = (mul_ln55_35_reg_1834 + mul_ln55_36_reg_1839);

assign add_ln55_3_fu_1326_p2 = (shl_ln55_1_fu_1252_p2 + mul_ln55_1_reg_1653);

assign add_ln55_40_fu_1446_p2 = (mul_ln55_37_reg_1844 + mul_ln55_38_reg_1849);

assign add_ln55_41_fu_1570_p2 = (add_ln55_40_reg_2024 + add_ln55_39_reg_2019);

assign add_ln55_42_fu_1450_p2 = (mul_ln55_39_reg_1854 + mul_ln55_40_reg_1859);

assign add_ln55_43_fu_1454_p2 = (mul_ln55_41_reg_1864 + mul_ln55_42_reg_1869);

assign add_ln55_44_fu_1458_p2 = (add_ln55_43_fu_1454_p2 + add_ln55_42_fu_1450_p2);

assign add_ln55_45_fu_1574_p2 = (add_ln55_44_reg_2029 + add_ln55_41_fu_1570_p2);

assign add_ln55_46_fu_1579_p2 = (add_ln55_45_fu_1574_p2 + add_ln55_38_fu_1565_p2);

assign add_ln55_47_fu_1464_p2 = (mul_ln55_43_reg_1874 + mul_ln55_44_reg_1879);

assign add_ln55_48_fu_1468_p2 = (mul_ln55_45_reg_1884 + mul_ln55_46_reg_1889);

assign add_ln55_49_fu_1472_p2 = (add_ln55_48_fu_1468_p2 + add_ln55_47_fu_1464_p2);

assign add_ln55_4_fu_1331_p2 = (mul_ln55_2_reg_1658 + mul_ln55_3_reg_1663);

assign add_ln55_50_fu_1478_p2 = (mul_ln55_47_reg_1894 + mul_ln55_48_reg_1899);

assign add_ln55_51_fu_1482_p2 = (mul_ln55_49_reg_1904 + mul_ln55_50_reg_1909);

assign add_ln55_52_fu_1486_p2 = (add_ln55_51_fu_1482_p2 + add_ln55_50_fu_1478_p2);

assign add_ln55_53_fu_1585_p2 = (add_ln55_52_reg_2039 + add_ln55_49_reg_2034);

assign add_ln55_54_fu_1492_p2 = (mul_ln55_51_reg_1914 + sub_ln55_3_fu_1289_p2);

assign add_ln55_55_fu_1497_p2 = (mul_ln55_52_reg_1929 + shl_ln55_7_fu_1294_p2);

assign add_ln55_56_fu_1502_p2 = (add_ln55_55_fu_1497_p2 + add_ln55_54_fu_1492_p2);

assign add_ln55_57_fu_1508_p2 = (mul_ln55_53_reg_1939 + mul_ln55_54_reg_1944);

assign add_ln55_58_fu_1238_p2 = (mul_ln55_56_reg_1626 + mul_ln55_57_reg_1637);

assign add_ln55_59_fu_1242_p2 = (add_ln55_58_fu_1238_p2 + mul_ln55_55_reg_1621);

assign add_ln55_5_fu_1335_p2 = (add_ln55_4_fu_1331_p2 + add_ln55_3_fu_1326_p2);

assign add_ln55_60_fu_1512_p2 = (add_ln55_59_reg_1949 + add_ln55_57_fu_1508_p2);

assign add_ln55_61_fu_1517_p2 = (add_ln55_60_fu_1512_p2 + add_ln55_56_fu_1502_p2);

assign add_ln55_62_fu_1589_p2 = (add_ln55_61_reg_2044 + add_ln55_53_fu_1585_p2);

assign add_ln55_63_fu_1594_p2 = (add_ln55_62_fu_1589_p2 + add_ln55_46_fu_1579_p2);

assign add_ln55_6_fu_1523_p2 = (add_ln55_5_reg_1959 + add_ln55_2_reg_1954);

assign add_ln55_7_fu_1341_p2 = (mul_ln55_4_reg_1668 + shl_ln55_2_fu_1257_p2);

assign add_ln55_8_fu_1346_p2 = (mul_ln55_5_reg_1678 + sub_ln55_1_fu_1278_p2);

assign add_ln55_9_fu_1527_p2 = (add_ln55_8_reg_1969 + add_ln55_7_reg_1964);

assign add_ln55_fu_1309_p2 = (shl_ln55_9_fu_1304_p2 + shl_ln55_8_fu_1299_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((y_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((y_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((y_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = (y_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign mul_ln55_10_fu_491_p1 = shift_reg_1_49;

assign mul_ln55_10_fu_491_p2 = ($signed(32'd4294966606) * $signed(mul_ln55_10_fu_491_p1));

assign mul_ln55_11_fu_507_p1 = shift_reg_1_48;

assign mul_ln55_11_fu_507_p2 = ($signed(32'd4294966519) * $signed(mul_ln55_11_fu_507_p1));

assign mul_ln55_12_fu_523_p1 = shift_reg_1_47;

assign mul_ln55_12_fu_523_p2 = ($signed(32'd4294966480) * $signed(mul_ln55_12_fu_523_p1));

assign mul_ln55_13_fu_539_p1 = shift_reg_1_46;

assign mul_ln55_13_fu_539_p2 = ($signed(32'd4294966506) * $signed(mul_ln55_13_fu_539_p1));

assign mul_ln55_14_fu_555_p1 = shift_reg_1_45;

assign mul_ln55_14_fu_555_p2 = ($signed(32'd4294966609) * $signed(mul_ln55_14_fu_555_p1));

assign mul_ln55_15_fu_571_p1 = shift_reg_1_44;

assign mul_ln55_15_fu_571_p2 = ($signed(32'd4294966798) * $signed(mul_ln55_15_fu_571_p1));

assign mul_ln55_16_fu_587_p1 = shift_reg_1_43;

assign mul_ln55_16_fu_587_p2 = ($signed(32'd4294967079) * $signed(mul_ln55_16_fu_587_p1));

assign mul_ln55_17_fu_603_p1 = shift_reg_1_42;

assign mul_ln55_17_fu_603_p2 = ($signed({{1'b0}, {32'd156}}) * $signed(mul_ln55_17_fu_603_p1));

assign mul_ln55_18_fu_619_p1 = shift_reg_1_41;

assign mul_ln55_18_fu_619_p2 = ($signed({{1'b0}, {32'd614}}) * $signed(mul_ln55_18_fu_619_p1));

assign mul_ln55_19_fu_635_p1 = shift_reg_1_40;

assign mul_ln55_19_fu_635_p2 = ($signed({{1'b0}, {32'd1147}}) * $signed(mul_ln55_19_fu_635_p1));

assign mul_ln55_1_fu_327_p1 = shift_reg_1_60;

assign mul_ln55_1_fu_327_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln55_1_fu_327_p1));

assign mul_ln55_20_fu_651_p1 = shift_reg_1_39;

assign mul_ln55_20_fu_651_p2 = ($signed({{1'b0}, {32'd1737}}) * $signed(mul_ln55_20_fu_651_p1));

assign mul_ln55_21_fu_667_p1 = shift_reg_1_38;

assign mul_ln55_21_fu_667_p2 = ($signed({{1'b0}, {32'd2362}}) * $signed(mul_ln55_21_fu_667_p1));

assign mul_ln55_22_fu_683_p1 = shift_reg_1_37;

assign mul_ln55_22_fu_683_p2 = ($signed({{1'b0}, {32'd2997}}) * $signed(mul_ln55_22_fu_683_p1));

assign mul_ln55_23_fu_699_p1 = shift_reg_1_36;

assign mul_ln55_23_fu_699_p2 = ($signed({{1'b0}, {32'd3613}}) * $signed(mul_ln55_23_fu_699_p1));

assign mul_ln55_24_fu_715_p1 = shift_reg_1_35;

assign mul_ln55_24_fu_715_p2 = ($signed({{1'b0}, {32'd4181}}) * $signed(mul_ln55_24_fu_715_p1));

assign mul_ln55_25_fu_731_p1 = shift_reg_1_34;

assign mul_ln55_25_fu_731_p2 = ($signed({{1'b0}, {32'd4675}}) * $signed(mul_ln55_25_fu_731_p1));

assign mul_ln55_26_fu_747_p1 = shift_reg_1_33;

assign mul_ln55_26_fu_747_p2 = ($signed({{1'b0}, {32'd5069}}) * $signed(mul_ln55_26_fu_747_p1));

assign mul_ln55_27_fu_763_p1 = shift_reg_1_32;

assign mul_ln55_27_fu_763_p2 = ($signed({{1'b0}, {32'd5344}}) * $signed(mul_ln55_27_fu_763_p1));

assign mul_ln55_28_fu_779_p1 = shift_reg_1_31;

assign mul_ln55_28_fu_779_p2 = ($signed({{1'b0}, {32'd5485}}) * $signed(mul_ln55_28_fu_779_p1));

assign mul_ln55_29_fu_795_p1 = shift_reg_1_30;

assign mul_ln55_29_fu_795_p2 = ($signed({{1'b0}, {32'd5485}}) * $signed(mul_ln55_29_fu_795_p1));

assign mul_ln55_2_fu_343_p1 = shift_reg_1_59;

assign mul_ln55_2_fu_343_p2 = ($signed({{1'b0}, {32'd189}}) * $signed(mul_ln55_2_fu_343_p1));

assign mul_ln55_30_fu_811_p1 = shift_reg_1_29;

assign mul_ln55_30_fu_811_p2 = ($signed({{1'b0}, {32'd5344}}) * $signed(mul_ln55_30_fu_811_p1));

assign mul_ln55_31_fu_827_p1 = shift_reg_1_28;

assign mul_ln55_31_fu_827_p2 = ($signed({{1'b0}, {32'd5069}}) * $signed(mul_ln55_31_fu_827_p1));

assign mul_ln55_32_fu_843_p1 = shift_reg_1_27;

assign mul_ln55_32_fu_843_p2 = ($signed({{1'b0}, {32'd4675}}) * $signed(mul_ln55_32_fu_843_p1));

assign mul_ln55_33_fu_859_p1 = shift_reg_1_26;

assign mul_ln55_33_fu_859_p2 = ($signed({{1'b0}, {32'd4181}}) * $signed(mul_ln55_33_fu_859_p1));

assign mul_ln55_34_fu_875_p1 = shift_reg_1_25;

assign mul_ln55_34_fu_875_p2 = ($signed({{1'b0}, {32'd3613}}) * $signed(mul_ln55_34_fu_875_p1));

assign mul_ln55_35_fu_891_p1 = shift_reg_1_24;

assign mul_ln55_35_fu_891_p2 = ($signed({{1'b0}, {32'd2997}}) * $signed(mul_ln55_35_fu_891_p1));

assign mul_ln55_36_fu_907_p1 = shift_reg_1_23;

assign mul_ln55_36_fu_907_p2 = ($signed({{1'b0}, {32'd2362}}) * $signed(mul_ln55_36_fu_907_p1));

assign mul_ln55_37_fu_923_p1 = shift_reg_1_22;

assign mul_ln55_37_fu_923_p2 = ($signed({{1'b0}, {32'd1737}}) * $signed(mul_ln55_37_fu_923_p1));

assign mul_ln55_38_fu_939_p1 = shift_reg_1_21;

assign mul_ln55_38_fu_939_p2 = ($signed({{1'b0}, {32'd1147}}) * $signed(mul_ln55_38_fu_939_p1));

assign mul_ln55_39_fu_955_p1 = shift_reg_1_20;

assign mul_ln55_39_fu_955_p2 = ($signed({{1'b0}, {32'd614}}) * $signed(mul_ln55_39_fu_955_p1));

assign mul_ln55_3_fu_359_p1 = shift_reg_1_58;

assign mul_ln55_3_fu_359_p2 = ($signed({{1'b0}, {32'd191}}) * $signed(mul_ln55_3_fu_359_p1));

assign mul_ln55_40_fu_971_p1 = shift_reg_1_19;

assign mul_ln55_40_fu_971_p2 = ($signed({{1'b0}, {32'd156}}) * $signed(mul_ln55_40_fu_971_p1));

assign mul_ln55_41_fu_987_p1 = shift_reg_1_18;

assign mul_ln55_41_fu_987_p2 = ($signed(32'd4294967079) * $signed(mul_ln55_41_fu_987_p1));

assign mul_ln55_42_fu_1003_p1 = shift_reg_1_17;

assign mul_ln55_42_fu_1003_p2 = ($signed(32'd4294966798) * $signed(mul_ln55_42_fu_1003_p1));

assign mul_ln55_43_fu_1019_p1 = shift_reg_1_16;

assign mul_ln55_43_fu_1019_p2 = ($signed(32'd4294966609) * $signed(mul_ln55_43_fu_1019_p1));

assign mul_ln55_44_fu_1035_p1 = shift_reg_1_15;

assign mul_ln55_44_fu_1035_p2 = ($signed(32'd4294966506) * $signed(mul_ln55_44_fu_1035_p1));

assign mul_ln55_45_fu_1051_p1 = shift_reg_1_14;

assign mul_ln55_45_fu_1051_p2 = ($signed(32'd4294966480) * $signed(mul_ln55_45_fu_1051_p1));

assign mul_ln55_46_fu_1067_p1 = shift_reg_1_13;

assign mul_ln55_46_fu_1067_p2 = ($signed(32'd4294966519) * $signed(mul_ln55_46_fu_1067_p1));

assign mul_ln55_47_fu_1083_p1 = shift_reg_1_12;

assign mul_ln55_47_fu_1083_p2 = ($signed(32'd4294966606) * $signed(mul_ln55_47_fu_1083_p1));

assign mul_ln55_48_fu_1099_p1 = shift_reg_1_11;

assign mul_ln55_48_fu_1099_p2 = ($signed(32'd4294966726) * $signed(mul_ln55_48_fu_1099_p1));

assign mul_ln55_49_fu_1115_p1 = shift_reg_1_10;

assign mul_ln55_49_fu_1115_p2 = ($signed(32'd4294966864) * $signed(mul_ln55_49_fu_1115_p1));

assign mul_ln55_4_fu_375_p1 = shift_reg_1_57;

assign mul_ln55_4_fu_375_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln55_4_fu_375_p1));

assign mul_ln55_50_fu_1131_p1 = shift_reg_1_9;

assign mul_ln55_50_fu_1131_p2 = ($signed(32'd4294967007) * $signed(mul_ln55_50_fu_1131_p1));

assign mul_ln55_51_fu_1147_p1 = shift_reg_1_8;

assign mul_ln55_51_fu_1147_p2 = ($signed(32'd4294967141) * $signed(mul_ln55_51_fu_1147_p1));

assign mul_ln55_52_fu_1185_p1 = shift_reg_1_6;

assign mul_ln55_52_fu_1185_p2 = ($signed({{1'b0}, {32'd59}}) * $signed(mul_ln55_52_fu_1185_p1));

assign mul_ln55_53_fu_1211_p1 = shift_reg_1_4;

assign mul_ln55_53_fu_1211_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln55_53_fu_1211_p1));

assign mul_ln55_54_fu_1227_p1 = shift_reg_1_3;

assign mul_ln55_54_fu_1227_p2 = ($signed({{1'b0}, {32'd191}}) * $signed(mul_ln55_54_fu_1227_p1));

assign mul_ln55_55_fu_255_p1 = shift_reg_1_2;

assign mul_ln55_55_fu_255_p2 = ($signed({{1'b0}, {32'd189}}) * $signed(mul_ln55_55_fu_255_p1));

assign mul_ln55_56_fu_271_p1 = shift_reg_1_1;

assign mul_ln55_56_fu_271_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln55_56_fu_271_p1));

assign mul_ln55_57_fu_292_p2 = ($signed({{1'b0}, {32'd231}}) * $signed(data_reg_1610));

assign mul_ln55_5_fu_401_p1 = shift_reg_1_55;

assign mul_ln55_5_fu_401_p2 = ($signed({{1'b0}, {32'd59}}) * $signed(mul_ln55_5_fu_401_p1));

assign mul_ln55_6_fu_427_p1 = shift_reg_1_53;

assign mul_ln55_6_fu_427_p2 = ($signed(32'd4294967141) * $signed(mul_ln55_6_fu_427_p1));

assign mul_ln55_7_fu_443_p1 = shift_reg_1_52;

assign mul_ln55_7_fu_443_p2 = ($signed(32'd4294967007) * $signed(mul_ln55_7_fu_443_p1));

assign mul_ln55_8_fu_459_p1 = shift_reg_1_51;

assign mul_ln55_8_fu_459_p2 = ($signed(32'd4294966864) * $signed(mul_ln55_8_fu_459_p1));

assign mul_ln55_9_fu_475_p1 = shift_reg_1_50;

assign mul_ln55_9_fu_475_p2 = ($signed(32'd4294966726) * $signed(mul_ln55_9_fu_475_p1));

assign mul_ln55_fu_301_p1 = shift_reg_1_62;

assign mul_ln55_fu_301_p2 = ($signed({{1'b0}, {32'd231}}) * $signed(mul_ln55_fu_301_p1));

assign shl_ln55_1_fu_1252_p2 = shift_reg_1_61_load_reg_1647 << 32'd4;

assign shl_ln55_2_fu_1257_p2 = shift_reg_1_56_load_reg_1673 << 32'd7;

assign shl_ln55_3_fu_1262_p2 = shift_reg_1_54_load_reg_1683 << 32'd5;

assign shl_ln55_4_fu_1273_p2 = shift_reg_1_54_load_reg_1683 << 32'd2;

assign shl_ln55_5_fu_1163_p2 = shift_reg_1_7 << 32'd5;

assign shl_ln55_6_fu_1284_p2 = shift_reg_1_7_load_reg_1919 << 32'd2;

assign shl_ln55_7_fu_1294_p2 = shift_reg_1_5_load_reg_1934 << 32'd7;

assign shl_ln55_8_fu_1299_p2 = shift_reg_1_0_load_reg_1631_pp0_iter2_reg << 32'd7;

assign shl_ln55_9_fu_1304_p2 = shift_reg_1_0_load_reg_1631_pp0_iter2_reg << 32'd4;

assign shl_ln55_fu_1247_p2 = shift_reg_1_61_load_reg_1647 << 32'd7;

assign sub_ln55_1_fu_1278_p2 = (sub_ln55_fu_1267_p2 - shl_ln55_4_fu_1273_p2);

assign sub_ln55_2_fu_1169_p2 = (32'd0 - shl_ln55_5_fu_1163_p2);

assign sub_ln55_3_fu_1289_p2 = (sub_ln55_2_reg_1924 - shl_ln55_6_fu_1284_p2);

assign sub_ln55_fu_1267_p2 = (32'd0 - shl_ln55_3_fu_1262_p2);

assign y_din = (add_ln55_63_reg_2059 + add_ln55_31_fu_1600_p2);

always @ (posedge ap_clk) begin
    sub_ln55_2_reg_1924[4:0] <= 5'b00000;
end

endmodule //fir_filter_a
