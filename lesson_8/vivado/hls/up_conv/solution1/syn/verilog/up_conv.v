// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="up_conv,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.172000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=236,HLS_SYN_FF=10113,HLS_SYN_LUT=7214,HLS_VERSION=2019_1_3}" *)

module up_conv (
        x_i,
        x_q,
        ref_i_V,
        ref_q_V,
        y,
        ap_clk,
        ap_rst,
        x_i_ap_vld,
        x_q_ap_vld,
        ref_i_V_ap_vld,
        ref_q_V_ap_vld,
        y_ap_vld
);


input  [31:0] x_i;
input  [31:0] x_q;
input  [7:0] ref_i_V;
input  [7:0] ref_q_V;
output  [31:0] y;
input   ap_clk;
input   ap_rst;
input   x_i_ap_vld;
input   x_q_ap_vld;
input   ref_i_V_ap_vld;
input   ref_q_V_ap_vld;
output   y_ap_vld;

wire    up_conv_entry14_U0_ap_start;
wire    up_conv_entry14_U0_start_full_n;
wire    up_conv_entry14_U0_ap_done;
wire    up_conv_entry14_U0_ap_continue;
wire    up_conv_entry14_U0_ap_idle;
wire    up_conv_entry14_U0_ap_ready;
wire    up_conv_entry14_U0_start_out;
wire    up_conv_entry14_U0_start_write;
wire   [31:0] up_conv_entry14_U0_x_i_out_din;
wire    up_conv_entry14_U0_x_i_out_write;
wire   [31:0] up_conv_entry14_U0_x_q_out_din;
wire    up_conv_entry14_U0_x_q_out_write;
wire   [7:0] up_conv_entry14_U0_ref_i_V_out_din;
wire    up_conv_entry14_U0_ref_i_V_out_write;
wire   [7:0] up_conv_entry14_U0_ref_q_V_out_din;
wire    up_conv_entry14_U0_ref_q_V_out_write;
wire    fir_filter_a_U0_ap_start;
wire    fir_filter_a_U0_ap_done;
wire    fir_filter_a_U0_ap_continue;
wire    fir_filter_a_U0_ap_idle;
wire    fir_filter_a_U0_ap_ready;
wire    fir_filter_a_U0_x_read;
wire   [31:0] fir_filter_a_U0_ap_return;
wire    ap_channel_done_i_tmp;
wire    i_tmp_full_n;
wire    fir_filter_b_U0_ap_start;
wire    fir_filter_b_U0_ap_done;
wire    fir_filter_b_U0_ap_continue;
wire    fir_filter_b_U0_ap_idle;
wire    fir_filter_b_U0_ap_ready;
wire    fir_filter_b_U0_x_read;
wire   [31:0] fir_filter_b_U0_ap_return;
wire    ap_channel_done_q_tmp;
wire    q_tmp_full_n;
wire    iq_mult_U0_ap_start;
wire    iq_mult_U0_ap_done;
wire    iq_mult_U0_ap_continue;
wire    iq_mult_U0_ap_idle;
wire    iq_mult_U0_ap_ready;
wire    iq_mult_U0_ref_i_V_read;
wire    iq_mult_U0_ref_q_V_read;
wire   [31:0] iq_mult_U0_y;
wire    iq_mult_U0_y_ap_vld;
wire    ap_sync_continue;
wire    x_i_c_full_n;
wire   [31:0] x_i_c_dout;
wire    x_i_c_empty_n;
wire    x_q_c_full_n;
wire   [31:0] x_q_c_dout;
wire    x_q_c_empty_n;
wire    ref_i_V_c_full_n;
wire   [7:0] ref_i_V_c_dout;
wire    ref_i_V_c_empty_n;
wire    ref_q_V_c_full_n;
wire   [7:0] ref_q_V_c_dout;
wire    ref_q_V_c_empty_n;
wire   [31:0] i_tmp_dout;
wire    i_tmp_empty_n;
wire   [31:0] q_tmp_dout;
wire    q_tmp_empty_n;
wire   [0:0] start_for_fir_filter_a_U0_din;
wire    start_for_fir_filter_a_U0_full_n;
wire   [0:0] start_for_fir_filter_a_U0_dout;
wire    start_for_fir_filter_a_U0_empty_n;
wire   [0:0] start_for_fir_filter_b_U0_din;
wire    start_for_fir_filter_b_U0_full_n;
wire   [0:0] start_for_fir_filter_b_U0_dout;
wire    start_for_fir_filter_b_U0_empty_n;
wire    fir_filter_a_U0_start_full_n;
wire    fir_filter_a_U0_start_write;
wire    fir_filter_b_U0_start_full_n;
wire    fir_filter_b_U0_start_write;
wire    iq_mult_U0_start_full_n;
wire    iq_mult_U0_start_write;

up_conv_entry14 up_conv_entry14_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(up_conv_entry14_U0_ap_start),
    .start_full_n(up_conv_entry14_U0_start_full_n),
    .ap_done(up_conv_entry14_U0_ap_done),
    .ap_continue(up_conv_entry14_U0_ap_continue),
    .ap_idle(up_conv_entry14_U0_ap_idle),
    .ap_ready(up_conv_entry14_U0_ap_ready),
    .start_out(up_conv_entry14_U0_start_out),
    .start_write(up_conv_entry14_U0_start_write),
    .x_i(x_i),
    .x_i_ap_vld(x_i_ap_vld),
    .x_q(x_q),
    .x_q_ap_vld(x_q_ap_vld),
    .ref_i_V(ref_i_V),
    .ref_i_V_ap_vld(ref_i_V_ap_vld),
    .ref_q_V(ref_q_V),
    .ref_q_V_ap_vld(ref_q_V_ap_vld),
    .x_i_out_din(up_conv_entry14_U0_x_i_out_din),
    .x_i_out_full_n(x_i_c_full_n),
    .x_i_out_write(up_conv_entry14_U0_x_i_out_write),
    .x_q_out_din(up_conv_entry14_U0_x_q_out_din),
    .x_q_out_full_n(x_q_c_full_n),
    .x_q_out_write(up_conv_entry14_U0_x_q_out_write),
    .ref_i_V_out_din(up_conv_entry14_U0_ref_i_V_out_din),
    .ref_i_V_out_full_n(ref_i_V_c_full_n),
    .ref_i_V_out_write(up_conv_entry14_U0_ref_i_V_out_write),
    .ref_q_V_out_din(up_conv_entry14_U0_ref_q_V_out_din),
    .ref_q_V_out_full_n(ref_q_V_c_full_n),
    .ref_q_V_out_write(up_conv_entry14_U0_ref_q_V_out_write)
);

fir_filter_a fir_filter_a_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fir_filter_a_U0_ap_start),
    .ap_done(fir_filter_a_U0_ap_done),
    .ap_continue(fir_filter_a_U0_ap_continue),
    .ap_idle(fir_filter_a_U0_ap_idle),
    .ap_ready(fir_filter_a_U0_ap_ready),
    .x_dout(x_i_c_dout),
    .x_empty_n(x_i_c_empty_n),
    .x_read(fir_filter_a_U0_x_read),
    .ap_return(fir_filter_a_U0_ap_return)
);

fir_filter_b fir_filter_b_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(fir_filter_b_U0_ap_start),
    .ap_done(fir_filter_b_U0_ap_done),
    .ap_continue(fir_filter_b_U0_ap_continue),
    .ap_idle(fir_filter_b_U0_ap_idle),
    .ap_ready(fir_filter_b_U0_ap_ready),
    .x_dout(x_q_c_dout),
    .x_empty_n(x_q_c_empty_n),
    .x_read(fir_filter_b_U0_x_read),
    .ap_return(fir_filter_b_U0_ap_return)
);

iq_mult iq_mult_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(iq_mult_U0_ap_start),
    .ap_done(iq_mult_U0_ap_done),
    .ap_continue(iq_mult_U0_ap_continue),
    .ap_idle(iq_mult_U0_ap_idle),
    .ap_ready(iq_mult_U0_ap_ready),
    .ref_i_V_dout(ref_i_V_c_dout),
    .ref_i_V_empty_n(ref_i_V_c_empty_n),
    .ref_i_V_read(iq_mult_U0_ref_i_V_read),
    .ref_q_V_dout(ref_q_V_c_dout),
    .ref_q_V_empty_n(ref_q_V_c_empty_n),
    .ref_q_V_read(iq_mult_U0_ref_q_V_read),
    .x_i(i_tmp_dout),
    .x_q(q_tmp_dout),
    .y(iq_mult_U0_y),
    .y_ap_vld(iq_mult_U0_y_ap_vld)
);

fifo_w32_d2_A x_i_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(up_conv_entry14_U0_x_i_out_din),
    .if_full_n(x_i_c_full_n),
    .if_write(up_conv_entry14_U0_x_i_out_write),
    .if_dout(x_i_c_dout),
    .if_empty_n(x_i_c_empty_n),
    .if_read(fir_filter_a_U0_x_read)
);

fifo_w32_d2_A x_q_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(up_conv_entry14_U0_x_q_out_din),
    .if_full_n(x_q_c_full_n),
    .if_write(up_conv_entry14_U0_x_q_out_write),
    .if_dout(x_q_c_dout),
    .if_empty_n(x_q_c_empty_n),
    .if_read(fir_filter_b_U0_x_read)
);

fifo_w8_d3_A ref_i_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(up_conv_entry14_U0_ref_i_V_out_din),
    .if_full_n(ref_i_V_c_full_n),
    .if_write(up_conv_entry14_U0_ref_i_V_out_write),
    .if_dout(ref_i_V_c_dout),
    .if_empty_n(ref_i_V_c_empty_n),
    .if_read(iq_mult_U0_ref_i_V_read)
);

fifo_w8_d3_A ref_q_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(up_conv_entry14_U0_ref_q_V_out_din),
    .if_full_n(ref_q_V_c_full_n),
    .if_write(up_conv_entry14_U0_ref_q_V_out_write),
    .if_dout(ref_q_V_c_dout),
    .if_empty_n(ref_q_V_c_empty_n),
    .if_read(iq_mult_U0_ref_q_V_read)
);

fifo_w32_d2_A i_tmp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fir_filter_a_U0_ap_return),
    .if_full_n(i_tmp_full_n),
    .if_write(fir_filter_a_U0_ap_done),
    .if_dout(i_tmp_dout),
    .if_empty_n(i_tmp_empty_n),
    .if_read(iq_mult_U0_ap_ready)
);

fifo_w32_d2_A q_tmp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(fir_filter_b_U0_ap_return),
    .if_full_n(q_tmp_full_n),
    .if_write(fir_filter_b_U0_ap_done),
    .if_dout(q_tmp_dout),
    .if_empty_n(q_tmp_empty_n),
    .if_read(iq_mult_U0_ap_ready)
);

start_for_fir_filbkb start_for_fir_filbkb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_fir_filter_a_U0_din),
    .if_full_n(start_for_fir_filter_a_U0_full_n),
    .if_write(up_conv_entry14_U0_start_write),
    .if_dout(start_for_fir_filter_a_U0_dout),
    .if_empty_n(start_for_fir_filter_a_U0_empty_n),
    .if_read(fir_filter_a_U0_ap_ready)
);

start_for_fir_filcud start_for_fir_filcud_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_fir_filter_b_U0_din),
    .if_full_n(start_for_fir_filter_b_U0_full_n),
    .if_write(up_conv_entry14_U0_start_write),
    .if_dout(start_for_fir_filter_b_U0_dout),
    .if_empty_n(start_for_fir_filter_b_U0_empty_n),
    .if_read(fir_filter_b_U0_ap_ready)
);

assign ap_channel_done_i_tmp = fir_filter_a_U0_ap_done;

assign ap_channel_done_q_tmp = fir_filter_b_U0_ap_done;

assign ap_sync_continue = 1'b0;

assign fir_filter_a_U0_ap_continue = i_tmp_full_n;

assign fir_filter_a_U0_ap_start = start_for_fir_filter_a_U0_empty_n;

assign fir_filter_a_U0_start_full_n = 1'b1;

assign fir_filter_a_U0_start_write = 1'b0;

assign fir_filter_b_U0_ap_continue = q_tmp_full_n;

assign fir_filter_b_U0_ap_start = start_for_fir_filter_b_U0_empty_n;

assign fir_filter_b_U0_start_full_n = 1'b1;

assign fir_filter_b_U0_start_write = 1'b0;

assign iq_mult_U0_ap_continue = 1'b1;

assign iq_mult_U0_ap_start = (q_tmp_empty_n & i_tmp_empty_n);

assign iq_mult_U0_start_full_n = 1'b1;

assign iq_mult_U0_start_write = 1'b0;

assign start_for_fir_filter_a_U0_din = 1'b1;

assign start_for_fir_filter_b_U0_din = 1'b1;

assign up_conv_entry14_U0_ap_continue = 1'b1;

assign up_conv_entry14_U0_ap_start = 1'b1;

assign up_conv_entry14_U0_start_full_n = (start_for_fir_filter_b_U0_full_n & start_for_fir_filter_a_U0_full_n);

assign y = iq_mult_U0_y;

assign y_ap_vld = iq_mult_U0_y_ap_vld;

endmodule //up_conv
