// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "up_conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<32> up_conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic up_conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic up_conv::ap_const_logic_0 = sc_dt::Log_0;

up_conv::up_conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    up_conv_entry14_U0 = new up_conv_entry14("up_conv_entry14_U0");
    up_conv_entry14_U0->ap_clk(ap_clk);
    up_conv_entry14_U0->ap_rst(ap_rst);
    up_conv_entry14_U0->ap_start(up_conv_entry14_U0_ap_start);
    up_conv_entry14_U0->start_full_n(up_conv_entry14_U0_start_full_n);
    up_conv_entry14_U0->ap_done(up_conv_entry14_U0_ap_done);
    up_conv_entry14_U0->ap_continue(up_conv_entry14_U0_ap_continue);
    up_conv_entry14_U0->ap_idle(up_conv_entry14_U0_ap_idle);
    up_conv_entry14_U0->ap_ready(up_conv_entry14_U0_ap_ready);
    up_conv_entry14_U0->start_out(up_conv_entry14_U0_start_out);
    up_conv_entry14_U0->start_write(up_conv_entry14_U0_start_write);
    up_conv_entry14_U0->x_i(x_i);
    up_conv_entry14_U0->x_i_ap_vld(x_i_ap_vld);
    up_conv_entry14_U0->x_q(x_q);
    up_conv_entry14_U0->x_q_ap_vld(x_q_ap_vld);
    up_conv_entry14_U0->ref_i_V(ref_i_V);
    up_conv_entry14_U0->ref_i_V_ap_vld(ref_i_V_ap_vld);
    up_conv_entry14_U0->ref_q_V(ref_q_V);
    up_conv_entry14_U0->ref_q_V_ap_vld(ref_q_V_ap_vld);
    up_conv_entry14_U0->x_i_out_din(up_conv_entry14_U0_x_i_out_din);
    up_conv_entry14_U0->x_i_out_full_n(x_i_c_full_n);
    up_conv_entry14_U0->x_i_out_write(up_conv_entry14_U0_x_i_out_write);
    up_conv_entry14_U0->x_q_out_din(up_conv_entry14_U0_x_q_out_din);
    up_conv_entry14_U0->x_q_out_full_n(x_q_c_full_n);
    up_conv_entry14_U0->x_q_out_write(up_conv_entry14_U0_x_q_out_write);
    up_conv_entry14_U0->ref_i_V_out_din(up_conv_entry14_U0_ref_i_V_out_din);
    up_conv_entry14_U0->ref_i_V_out_full_n(ref_i_V_c_full_n);
    up_conv_entry14_U0->ref_i_V_out_write(up_conv_entry14_U0_ref_i_V_out_write);
    up_conv_entry14_U0->ref_q_V_out_din(up_conv_entry14_U0_ref_q_V_out_din);
    up_conv_entry14_U0->ref_q_V_out_full_n(ref_q_V_c_full_n);
    up_conv_entry14_U0->ref_q_V_out_write(up_conv_entry14_U0_ref_q_V_out_write);
    fir_filter_a_U0 = new fir_filter_a("fir_filter_a_U0");
    fir_filter_a_U0->ap_clk(ap_clk);
    fir_filter_a_U0->ap_rst(ap_rst);
    fir_filter_a_U0->ap_start(fir_filter_a_U0_ap_start);
    fir_filter_a_U0->ap_done(fir_filter_a_U0_ap_done);
    fir_filter_a_U0->ap_continue(fir_filter_a_U0_ap_continue);
    fir_filter_a_U0->ap_idle(fir_filter_a_U0_ap_idle);
    fir_filter_a_U0->ap_ready(fir_filter_a_U0_ap_ready);
    fir_filter_a_U0->x_dout(x_i_c_dout);
    fir_filter_a_U0->x_empty_n(x_i_c_empty_n);
    fir_filter_a_U0->x_read(fir_filter_a_U0_x_read);
    fir_filter_a_U0->ap_return(fir_filter_a_U0_ap_return);
    fir_filter_b_U0 = new fir_filter_b("fir_filter_b_U0");
    fir_filter_b_U0->ap_clk(ap_clk);
    fir_filter_b_U0->ap_rst(ap_rst);
    fir_filter_b_U0->ap_start(fir_filter_b_U0_ap_start);
    fir_filter_b_U0->ap_done(fir_filter_b_U0_ap_done);
    fir_filter_b_U0->ap_continue(fir_filter_b_U0_ap_continue);
    fir_filter_b_U0->ap_idle(fir_filter_b_U0_ap_idle);
    fir_filter_b_U0->ap_ready(fir_filter_b_U0_ap_ready);
    fir_filter_b_U0->x_dout(x_q_c_dout);
    fir_filter_b_U0->x_empty_n(x_q_c_empty_n);
    fir_filter_b_U0->x_read(fir_filter_b_U0_x_read);
    fir_filter_b_U0->ap_return(fir_filter_b_U0_ap_return);
    iq_mult_U0 = new iq_mult("iq_mult_U0");
    iq_mult_U0->ap_clk(ap_clk);
    iq_mult_U0->ap_rst(ap_rst);
    iq_mult_U0->ap_start(iq_mult_U0_ap_start);
    iq_mult_U0->ap_done(iq_mult_U0_ap_done);
    iq_mult_U0->ap_continue(iq_mult_U0_ap_continue);
    iq_mult_U0->ap_idle(iq_mult_U0_ap_idle);
    iq_mult_U0->ap_ready(iq_mult_U0_ap_ready);
    iq_mult_U0->ref_i_V_dout(ref_i_V_c_dout);
    iq_mult_U0->ref_i_V_empty_n(ref_i_V_c_empty_n);
    iq_mult_U0->ref_i_V_read(iq_mult_U0_ref_i_V_read);
    iq_mult_U0->ref_q_V_dout(ref_q_V_c_dout);
    iq_mult_U0->ref_q_V_empty_n(ref_q_V_c_empty_n);
    iq_mult_U0->ref_q_V_read(iq_mult_U0_ref_q_V_read);
    iq_mult_U0->x_i(i_tmp_dout);
    iq_mult_U0->x_q(q_tmp_dout);
    iq_mult_U0->y(iq_mult_U0_y);
    iq_mult_U0->y_ap_vld(iq_mult_U0_y_ap_vld);
    x_i_c_U = new fifo_w32_d2_A("x_i_c_U");
    x_i_c_U->clk(ap_clk);
    x_i_c_U->reset(ap_rst);
    x_i_c_U->if_read_ce(ap_var_for_const0);
    x_i_c_U->if_write_ce(ap_var_for_const0);
    x_i_c_U->if_din(up_conv_entry14_U0_x_i_out_din);
    x_i_c_U->if_full_n(x_i_c_full_n);
    x_i_c_U->if_write(up_conv_entry14_U0_x_i_out_write);
    x_i_c_U->if_dout(x_i_c_dout);
    x_i_c_U->if_empty_n(x_i_c_empty_n);
    x_i_c_U->if_read(fir_filter_a_U0_x_read);
    x_q_c_U = new fifo_w32_d2_A("x_q_c_U");
    x_q_c_U->clk(ap_clk);
    x_q_c_U->reset(ap_rst);
    x_q_c_U->if_read_ce(ap_var_for_const0);
    x_q_c_U->if_write_ce(ap_var_for_const0);
    x_q_c_U->if_din(up_conv_entry14_U0_x_q_out_din);
    x_q_c_U->if_full_n(x_q_c_full_n);
    x_q_c_U->if_write(up_conv_entry14_U0_x_q_out_write);
    x_q_c_U->if_dout(x_q_c_dout);
    x_q_c_U->if_empty_n(x_q_c_empty_n);
    x_q_c_U->if_read(fir_filter_b_U0_x_read);
    ref_i_V_c_U = new fifo_w8_d3_A("ref_i_V_c_U");
    ref_i_V_c_U->clk(ap_clk);
    ref_i_V_c_U->reset(ap_rst);
    ref_i_V_c_U->if_read_ce(ap_var_for_const0);
    ref_i_V_c_U->if_write_ce(ap_var_for_const0);
    ref_i_V_c_U->if_din(up_conv_entry14_U0_ref_i_V_out_din);
    ref_i_V_c_U->if_full_n(ref_i_V_c_full_n);
    ref_i_V_c_U->if_write(up_conv_entry14_U0_ref_i_V_out_write);
    ref_i_V_c_U->if_dout(ref_i_V_c_dout);
    ref_i_V_c_U->if_empty_n(ref_i_V_c_empty_n);
    ref_i_V_c_U->if_read(iq_mult_U0_ref_i_V_read);
    ref_q_V_c_U = new fifo_w8_d3_A("ref_q_V_c_U");
    ref_q_V_c_U->clk(ap_clk);
    ref_q_V_c_U->reset(ap_rst);
    ref_q_V_c_U->if_read_ce(ap_var_for_const0);
    ref_q_V_c_U->if_write_ce(ap_var_for_const0);
    ref_q_V_c_U->if_din(up_conv_entry14_U0_ref_q_V_out_din);
    ref_q_V_c_U->if_full_n(ref_q_V_c_full_n);
    ref_q_V_c_U->if_write(up_conv_entry14_U0_ref_q_V_out_write);
    ref_q_V_c_U->if_dout(ref_q_V_c_dout);
    ref_q_V_c_U->if_empty_n(ref_q_V_c_empty_n);
    ref_q_V_c_U->if_read(iq_mult_U0_ref_q_V_read);
    i_tmp_U = new fifo_w32_d2_A("i_tmp_U");
    i_tmp_U->clk(ap_clk);
    i_tmp_U->reset(ap_rst);
    i_tmp_U->if_read_ce(ap_var_for_const0);
    i_tmp_U->if_write_ce(ap_var_for_const0);
    i_tmp_U->if_din(fir_filter_a_U0_ap_return);
    i_tmp_U->if_full_n(i_tmp_full_n);
    i_tmp_U->if_write(fir_filter_a_U0_ap_done);
    i_tmp_U->if_dout(i_tmp_dout);
    i_tmp_U->if_empty_n(i_tmp_empty_n);
    i_tmp_U->if_read(iq_mult_U0_ap_ready);
    q_tmp_U = new fifo_w32_d2_A("q_tmp_U");
    q_tmp_U->clk(ap_clk);
    q_tmp_U->reset(ap_rst);
    q_tmp_U->if_read_ce(ap_var_for_const0);
    q_tmp_U->if_write_ce(ap_var_for_const0);
    q_tmp_U->if_din(fir_filter_b_U0_ap_return);
    q_tmp_U->if_full_n(q_tmp_full_n);
    q_tmp_U->if_write(fir_filter_b_U0_ap_done);
    q_tmp_U->if_dout(q_tmp_dout);
    q_tmp_U->if_empty_n(q_tmp_empty_n);
    q_tmp_U->if_read(iq_mult_U0_ap_ready);
    start_for_fir_filbkb_U = new start_for_fir_filbkb("start_for_fir_filbkb_U");
    start_for_fir_filbkb_U->clk(ap_clk);
    start_for_fir_filbkb_U->reset(ap_rst);
    start_for_fir_filbkb_U->if_read_ce(ap_var_for_const0);
    start_for_fir_filbkb_U->if_write_ce(ap_var_for_const0);
    start_for_fir_filbkb_U->if_din(start_for_fir_filter_a_U0_din);
    start_for_fir_filbkb_U->if_full_n(start_for_fir_filter_a_U0_full_n);
    start_for_fir_filbkb_U->if_write(up_conv_entry14_U0_start_write);
    start_for_fir_filbkb_U->if_dout(start_for_fir_filter_a_U0_dout);
    start_for_fir_filbkb_U->if_empty_n(start_for_fir_filter_a_U0_empty_n);
    start_for_fir_filbkb_U->if_read(fir_filter_a_U0_ap_ready);
    start_for_fir_filcud_U = new start_for_fir_filcud("start_for_fir_filcud_U");
    start_for_fir_filcud_U->clk(ap_clk);
    start_for_fir_filcud_U->reset(ap_rst);
    start_for_fir_filcud_U->if_read_ce(ap_var_for_const0);
    start_for_fir_filcud_U->if_write_ce(ap_var_for_const0);
    start_for_fir_filcud_U->if_din(start_for_fir_filter_b_U0_din);
    start_for_fir_filcud_U->if_full_n(start_for_fir_filter_b_U0_full_n);
    start_for_fir_filcud_U->if_write(up_conv_entry14_U0_start_write);
    start_for_fir_filcud_U->if_dout(start_for_fir_filter_b_U0_dout);
    start_for_fir_filcud_U->if_empty_n(start_for_fir_filter_b_U0_empty_n);
    start_for_fir_filcud_U->if_read(fir_filter_b_U0_ap_ready);

    SC_METHOD(thread_ap_channel_done_i_tmp);
    sensitive << ( fir_filter_a_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_q_tmp);
    sensitive << ( fir_filter_b_U0_ap_done );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_fir_filter_a_U0_ap_continue);
    sensitive << ( i_tmp_full_n );

    SC_METHOD(thread_fir_filter_a_U0_ap_start);
    sensitive << ( start_for_fir_filter_a_U0_empty_n );

    SC_METHOD(thread_fir_filter_a_U0_start_full_n);

    SC_METHOD(thread_fir_filter_a_U0_start_write);

    SC_METHOD(thread_fir_filter_b_U0_ap_continue);
    sensitive << ( q_tmp_full_n );

    SC_METHOD(thread_fir_filter_b_U0_ap_start);
    sensitive << ( start_for_fir_filter_b_U0_empty_n );

    SC_METHOD(thread_fir_filter_b_U0_start_full_n);

    SC_METHOD(thread_fir_filter_b_U0_start_write);

    SC_METHOD(thread_iq_mult_U0_ap_continue);

    SC_METHOD(thread_iq_mult_U0_ap_start);
    sensitive << ( i_tmp_empty_n );
    sensitive << ( q_tmp_empty_n );

    SC_METHOD(thread_iq_mult_U0_start_full_n);

    SC_METHOD(thread_iq_mult_U0_start_write);

    SC_METHOD(thread_start_for_fir_filter_a_U0_din);

    SC_METHOD(thread_start_for_fir_filter_b_U0_din);

    SC_METHOD(thread_up_conv_entry14_U0_ap_continue);

    SC_METHOD(thread_up_conv_entry14_U0_ap_start);

    SC_METHOD(thread_up_conv_entry14_U0_start_full_n);
    sensitive << ( start_for_fir_filter_a_U0_full_n );
    sensitive << ( start_for_fir_filter_b_U0_full_n );

    SC_METHOD(thread_y);
    sensitive << ( iq_mult_U0_y );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( iq_mult_U0_y_ap_vld );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "up_conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, x_i, "(port)x_i");
    sc_trace(mVcdFile, x_q, "(port)x_q");
    sc_trace(mVcdFile, ref_i_V, "(port)ref_i_V");
    sc_trace(mVcdFile, ref_q_V, "(port)ref_q_V");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, x_i_ap_vld, "(port)x_i_ap_vld");
    sc_trace(mVcdFile, x_q_ap_vld, "(port)x_q_ap_vld");
    sc_trace(mVcdFile, ref_i_V_ap_vld, "(port)ref_i_V_ap_vld");
    sc_trace(mVcdFile, ref_q_V_ap_vld, "(port)ref_q_V_ap_vld");
    sc_trace(mVcdFile, y_ap_vld, "(port)y_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, up_conv_entry14_U0_ap_start, "up_conv_entry14_U0_ap_start");
    sc_trace(mVcdFile, up_conv_entry14_U0_start_full_n, "up_conv_entry14_U0_start_full_n");
    sc_trace(mVcdFile, up_conv_entry14_U0_ap_done, "up_conv_entry14_U0_ap_done");
    sc_trace(mVcdFile, up_conv_entry14_U0_ap_continue, "up_conv_entry14_U0_ap_continue");
    sc_trace(mVcdFile, up_conv_entry14_U0_ap_idle, "up_conv_entry14_U0_ap_idle");
    sc_trace(mVcdFile, up_conv_entry14_U0_ap_ready, "up_conv_entry14_U0_ap_ready");
    sc_trace(mVcdFile, up_conv_entry14_U0_start_out, "up_conv_entry14_U0_start_out");
    sc_trace(mVcdFile, up_conv_entry14_U0_start_write, "up_conv_entry14_U0_start_write");
    sc_trace(mVcdFile, up_conv_entry14_U0_x_i_out_din, "up_conv_entry14_U0_x_i_out_din");
    sc_trace(mVcdFile, up_conv_entry14_U0_x_i_out_write, "up_conv_entry14_U0_x_i_out_write");
    sc_trace(mVcdFile, up_conv_entry14_U0_x_q_out_din, "up_conv_entry14_U0_x_q_out_din");
    sc_trace(mVcdFile, up_conv_entry14_U0_x_q_out_write, "up_conv_entry14_U0_x_q_out_write");
    sc_trace(mVcdFile, up_conv_entry14_U0_ref_i_V_out_din, "up_conv_entry14_U0_ref_i_V_out_din");
    sc_trace(mVcdFile, up_conv_entry14_U0_ref_i_V_out_write, "up_conv_entry14_U0_ref_i_V_out_write");
    sc_trace(mVcdFile, up_conv_entry14_U0_ref_q_V_out_din, "up_conv_entry14_U0_ref_q_V_out_din");
    sc_trace(mVcdFile, up_conv_entry14_U0_ref_q_V_out_write, "up_conv_entry14_U0_ref_q_V_out_write");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_start, "fir_filter_a_U0_ap_start");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_done, "fir_filter_a_U0_ap_done");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_continue, "fir_filter_a_U0_ap_continue");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_idle, "fir_filter_a_U0_ap_idle");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_ready, "fir_filter_a_U0_ap_ready");
    sc_trace(mVcdFile, fir_filter_a_U0_x_read, "fir_filter_a_U0_x_read");
    sc_trace(mVcdFile, fir_filter_a_U0_ap_return, "fir_filter_a_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_i_tmp, "ap_channel_done_i_tmp");
    sc_trace(mVcdFile, i_tmp_full_n, "i_tmp_full_n");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_start, "fir_filter_b_U0_ap_start");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_done, "fir_filter_b_U0_ap_done");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_continue, "fir_filter_b_U0_ap_continue");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_idle, "fir_filter_b_U0_ap_idle");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_ready, "fir_filter_b_U0_ap_ready");
    sc_trace(mVcdFile, fir_filter_b_U0_x_read, "fir_filter_b_U0_x_read");
    sc_trace(mVcdFile, fir_filter_b_U0_ap_return, "fir_filter_b_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_q_tmp, "ap_channel_done_q_tmp");
    sc_trace(mVcdFile, q_tmp_full_n, "q_tmp_full_n");
    sc_trace(mVcdFile, iq_mult_U0_ap_start, "iq_mult_U0_ap_start");
    sc_trace(mVcdFile, iq_mult_U0_ap_done, "iq_mult_U0_ap_done");
    sc_trace(mVcdFile, iq_mult_U0_ap_continue, "iq_mult_U0_ap_continue");
    sc_trace(mVcdFile, iq_mult_U0_ap_idle, "iq_mult_U0_ap_idle");
    sc_trace(mVcdFile, iq_mult_U0_ap_ready, "iq_mult_U0_ap_ready");
    sc_trace(mVcdFile, iq_mult_U0_ref_i_V_read, "iq_mult_U0_ref_i_V_read");
    sc_trace(mVcdFile, iq_mult_U0_ref_q_V_read, "iq_mult_U0_ref_q_V_read");
    sc_trace(mVcdFile, iq_mult_U0_y, "iq_mult_U0_y");
    sc_trace(mVcdFile, iq_mult_U0_y_ap_vld, "iq_mult_U0_y_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, x_i_c_full_n, "x_i_c_full_n");
    sc_trace(mVcdFile, x_i_c_dout, "x_i_c_dout");
    sc_trace(mVcdFile, x_i_c_empty_n, "x_i_c_empty_n");
    sc_trace(mVcdFile, x_q_c_full_n, "x_q_c_full_n");
    sc_trace(mVcdFile, x_q_c_dout, "x_q_c_dout");
    sc_trace(mVcdFile, x_q_c_empty_n, "x_q_c_empty_n");
    sc_trace(mVcdFile, ref_i_V_c_full_n, "ref_i_V_c_full_n");
    sc_trace(mVcdFile, ref_i_V_c_dout, "ref_i_V_c_dout");
    sc_trace(mVcdFile, ref_i_V_c_empty_n, "ref_i_V_c_empty_n");
    sc_trace(mVcdFile, ref_q_V_c_full_n, "ref_q_V_c_full_n");
    sc_trace(mVcdFile, ref_q_V_c_dout, "ref_q_V_c_dout");
    sc_trace(mVcdFile, ref_q_V_c_empty_n, "ref_q_V_c_empty_n");
    sc_trace(mVcdFile, i_tmp_dout, "i_tmp_dout");
    sc_trace(mVcdFile, i_tmp_empty_n, "i_tmp_empty_n");
    sc_trace(mVcdFile, q_tmp_dout, "q_tmp_dout");
    sc_trace(mVcdFile, q_tmp_empty_n, "q_tmp_empty_n");
    sc_trace(mVcdFile, start_for_fir_filter_a_U0_din, "start_for_fir_filter_a_U0_din");
    sc_trace(mVcdFile, start_for_fir_filter_a_U0_full_n, "start_for_fir_filter_a_U0_full_n");
    sc_trace(mVcdFile, start_for_fir_filter_a_U0_dout, "start_for_fir_filter_a_U0_dout");
    sc_trace(mVcdFile, start_for_fir_filter_a_U0_empty_n, "start_for_fir_filter_a_U0_empty_n");
    sc_trace(mVcdFile, start_for_fir_filter_b_U0_din, "start_for_fir_filter_b_U0_din");
    sc_trace(mVcdFile, start_for_fir_filter_b_U0_full_n, "start_for_fir_filter_b_U0_full_n");
    sc_trace(mVcdFile, start_for_fir_filter_b_U0_dout, "start_for_fir_filter_b_U0_dout");
    sc_trace(mVcdFile, start_for_fir_filter_b_U0_empty_n, "start_for_fir_filter_b_U0_empty_n");
    sc_trace(mVcdFile, fir_filter_a_U0_start_full_n, "fir_filter_a_U0_start_full_n");
    sc_trace(mVcdFile, fir_filter_a_U0_start_write, "fir_filter_a_U0_start_write");
    sc_trace(mVcdFile, fir_filter_b_U0_start_full_n, "fir_filter_b_U0_start_full_n");
    sc_trace(mVcdFile, fir_filter_b_U0_start_write, "fir_filter_b_U0_start_write");
    sc_trace(mVcdFile, iq_mult_U0_start_full_n, "iq_mult_U0_start_full_n");
    sc_trace(mVcdFile, iq_mult_U0_start_write, "iq_mult_U0_start_write");
#endif

    }
    mHdltvinHandle.open("up_conv.hdltvin.dat");
    mHdltvoutHandle.open("up_conv.hdltvout.dat");
}

up_conv::~up_conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete up_conv_entry14_U0;
    delete fir_filter_a_U0;
    delete fir_filter_b_U0;
    delete iq_mult_U0;
    delete x_i_c_U;
    delete x_q_c_U;
    delete ref_i_V_c_U;
    delete ref_q_V_c_U;
    delete i_tmp_U;
    delete q_tmp_U;
    delete start_for_fir_filbkb_U;
    delete start_for_fir_filcud_U;
}

void up_conv::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void up_conv::thread_ap_channel_done_i_tmp() {
    ap_channel_done_i_tmp = fir_filter_a_U0_ap_done.read();
}

void up_conv::thread_ap_channel_done_q_tmp() {
    ap_channel_done_q_tmp = fir_filter_b_U0_ap_done.read();
}

void up_conv::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void up_conv::thread_fir_filter_a_U0_ap_continue() {
    fir_filter_a_U0_ap_continue = i_tmp_full_n.read();
}

void up_conv::thread_fir_filter_a_U0_ap_start() {
    fir_filter_a_U0_ap_start = start_for_fir_filter_a_U0_empty_n.read();
}

void up_conv::thread_fir_filter_a_U0_start_full_n() {
    fir_filter_a_U0_start_full_n = ap_const_logic_1;
}

void up_conv::thread_fir_filter_a_U0_start_write() {
    fir_filter_a_U0_start_write = ap_const_logic_0;
}

void up_conv::thread_fir_filter_b_U0_ap_continue() {
    fir_filter_b_U0_ap_continue = q_tmp_full_n.read();
}

void up_conv::thread_fir_filter_b_U0_ap_start() {
    fir_filter_b_U0_ap_start = start_for_fir_filter_b_U0_empty_n.read();
}

void up_conv::thread_fir_filter_b_U0_start_full_n() {
    fir_filter_b_U0_start_full_n = ap_const_logic_1;
}

void up_conv::thread_fir_filter_b_U0_start_write() {
    fir_filter_b_U0_start_write = ap_const_logic_0;
}

void up_conv::thread_iq_mult_U0_ap_continue() {
    iq_mult_U0_ap_continue = ap_const_logic_1;
}

void up_conv::thread_iq_mult_U0_ap_start() {
    iq_mult_U0_ap_start = (i_tmp_empty_n.read() & q_tmp_empty_n.read());
}

void up_conv::thread_iq_mult_U0_start_full_n() {
    iq_mult_U0_start_full_n = ap_const_logic_1;
}

void up_conv::thread_iq_mult_U0_start_write() {
    iq_mult_U0_start_write = ap_const_logic_0;
}

void up_conv::thread_start_for_fir_filter_a_U0_din() {
    start_for_fir_filter_a_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void up_conv::thread_start_for_fir_filter_b_U0_din() {
    start_for_fir_filter_b_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void up_conv::thread_up_conv_entry14_U0_ap_continue() {
    up_conv_entry14_U0_ap_continue = ap_const_logic_1;
}

void up_conv::thread_up_conv_entry14_U0_ap_start() {
    up_conv_entry14_U0_ap_start = ap_const_logic_1;
}

void up_conv::thread_up_conv_entry14_U0_start_full_n() {
    up_conv_entry14_U0_start_full_n = (start_for_fir_filter_a_U0_full_n.read() & start_for_fir_filter_b_U0_full_n.read());
}

void up_conv::thread_y() {
    y = iq_mult_U0_y.read();
}

void up_conv::thread_y_ap_vld() {
    y_ap_vld = iq_mult_U0_y_ap_vld.read();
}

void up_conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"x_i\" :  \"" << x_i.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_q\" :  \"" << x_q.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_i_V\" :  \"" << ref_i_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_q_V\" :  \"" << ref_q_V.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_i_ap_vld\" :  \"" << x_i_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_q_ap_vld\" :  \"" << x_q_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_i_V_ap_vld\" :  \"" << ref_i_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ref_q_V_ap_vld\" :  \"" << ref_q_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_ap_vld\" :  \"" << y_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

