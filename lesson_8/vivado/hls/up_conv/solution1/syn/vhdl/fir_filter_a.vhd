-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_filter_a is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    x_empty_n : IN STD_LOGIC;
    x_read : OUT STD_LOGIC;
    y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_full_n : IN STD_LOGIC;
    y_write : OUT STD_LOGIC );
end;


architecture behav of fir_filter_a is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_BD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111101";
    constant ap_const_lv32_AC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101100";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_FFFFFF65 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111101100101";
    constant ap_const_lv32_FFFFFEDF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111011011111";
    constant ap_const_lv32_FFFFFE50 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111001010000";
    constant ap_const_lv32_FFFFFDC6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110111000110";
    constant ap_const_lv32_FFFFFD4E : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110101001110";
    constant ap_const_lv32_FFFFFCF7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110011110111";
    constant ap_const_lv32_FFFFFCD0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110011010000";
    constant ap_const_lv32_FFFFFCEA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110011101010";
    constant ap_const_lv32_FFFFFD51 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110101010001";
    constant ap_const_lv32_FFFFFE0E : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111000001110";
    constant ap_const_lv32_FFFFFF27 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111100100111";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_266 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100110";
    constant ap_const_lv32_47B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010001111011";
    constant ap_const_lv32_6C9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011011001001";
    constant ap_const_lv32_93A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100100111010";
    constant ap_const_lv32_BB5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000101110110101";
    constant ap_const_lv32_E1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000111000011101";
    constant ap_const_lv32_1055 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000001010101";
    constant ap_const_lv32_1243 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001001001000011";
    constant ap_const_lv32_13CD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001001111001101";
    constant ap_const_lv32_14E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001010011100000";
    constant ap_const_lv32_156D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001010101101101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal shift_reg_1_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal shift_reg_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal x_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal y_blk_n : STD_LOGIC;
    signal data_reg_1610 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_2_load_reg_1616 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_55_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_55_reg_1621 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_56_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_56_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_0_load_reg_1631 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_0_load_reg_1631_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_57_fu_292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_57_reg_1637 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_reg_1642 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_61_load_reg_1647 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_1_fu_327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_1_reg_1653 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_2_fu_343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_2_reg_1658 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_3_fu_359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_3_reg_1663 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_4_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_4_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_56_load_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_5_fu_401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_5_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_54_load_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_6_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_6_reg_1689 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_7_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_7_reg_1694 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_8_fu_459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_8_reg_1699 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_9_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_9_reg_1704 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_10_fu_491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_10_reg_1709 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_11_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_11_reg_1714 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_12_fu_523_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_12_reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_13_fu_539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_13_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_14_fu_555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_14_reg_1729 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_15_fu_571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_15_reg_1734 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_16_fu_587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_16_reg_1739 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_17_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_17_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_18_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_18_reg_1749 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_19_fu_635_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_19_reg_1754 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_20_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_20_reg_1759 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_21_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_21_reg_1764 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_22_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_22_reg_1769 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_23_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_23_reg_1774 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_24_fu_715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_24_reg_1779 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_25_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_25_reg_1784 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_26_fu_747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_26_reg_1789 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_27_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_27_reg_1794 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_28_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_28_reg_1799 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_29_fu_795_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_29_reg_1804 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_30_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_30_reg_1809 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_31_fu_827_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_31_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_32_fu_843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_32_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_33_fu_859_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_33_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_34_fu_875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_34_reg_1829 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_35_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_35_reg_1834 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_36_fu_907_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_36_reg_1839 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_37_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_37_reg_1844 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_38_fu_939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_38_reg_1849 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_39_fu_955_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_39_reg_1854 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_40_fu_971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_40_reg_1859 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_41_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_41_reg_1864 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_42_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_42_reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_43_fu_1019_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_43_reg_1874 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_44_fu_1035_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_44_reg_1879 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_45_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_45_reg_1884 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_46_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_46_reg_1889 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_47_fu_1083_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_47_reg_1894 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_48_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_48_reg_1899 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_49_fu_1115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_49_reg_1904 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_50_fu_1131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_50_reg_1909 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_51_fu_1147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_51_reg_1914 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_7_load_reg_1919 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln55_2_fu_1169_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln55_2_reg_1924 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_52_fu_1185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_52_reg_1929 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_reg_1_5_load_reg_1934 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_53_fu_1211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_53_reg_1939 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_54_fu_1227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_54_reg_1944 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_59_fu_1242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_59_reg_1949 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_2_fu_1320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_2_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_5_fu_1335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_5_reg_1959 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_7_fu_1341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_7_reg_1964 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_8_fu_1346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_8_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_12_fu_1359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_12_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_17_fu_1373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_17_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_20_fu_1387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_20_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_22_fu_1393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_22_reg_1989 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_23_fu_1397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_23_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_28_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_28_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_32_fu_1420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_32_reg_2004 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_33_fu_1424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_33_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_37_fu_1436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_37_reg_2014 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_39_fu_1442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_39_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_40_fu_1446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_40_reg_2024 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_44_fu_1458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_44_reg_2029 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_49_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_49_reg_2034 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_52_fu_1486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_52_reg_2039 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_61_fu_1517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_61_reg_2044 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_14_fu_1536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_14_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_30_fu_1555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_30_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_63_fu_1594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_63_reg_2059 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln55_55_fu_255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_56_fu_271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_1_fu_327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_2_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_3_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_4_fu_375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_5_fu_401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_6_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_7_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_8_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_9_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_10_fu_491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_11_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_12_fu_523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_13_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_14_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_15_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_16_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_17_fu_603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_18_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_19_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_20_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_21_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_22_fu_683_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_23_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_24_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_25_fu_731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_26_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_27_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_28_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_29_fu_795_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_30_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_31_fu_827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_32_fu_843_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_33_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_34_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_35_fu_891_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_36_fu_907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_37_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_38_fu_939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_39_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_40_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_41_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_42_fu_1003_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_43_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_44_fu_1035_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_45_fu_1051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_46_fu_1067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_47_fu_1083_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_48_fu_1099_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_49_fu_1115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_50_fu_1131_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_51_fu_1147_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_5_fu_1163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_52_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_53_fu_1211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln55_54_fu_1227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_58_fu_1238_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_3_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln55_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_4_fu_1273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_6_fu_1284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_9_fu_1304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_8_fu_1299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_fu_1247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_1_fu_1315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_fu_1309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_1_fu_1252_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_4_fu_1331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_3_fu_1326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_2_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln55_1_fu_1278_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_11_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_10_fu_1351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_16_fu_1369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_15_fu_1365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_19_fu_1383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_18_fu_1379_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_26_fu_1405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_27_fu_1409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_25_fu_1401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_36_fu_1432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_35_fu_1428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_43_fu_1454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_42_fu_1450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_48_fu_1468_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_47_fu_1464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_51_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_50_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln55_3_fu_1289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln55_7_fu_1294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_55_fu_1497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_54_fu_1492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_57_fu_1508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_60_fu_1512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_56_fu_1502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_9_fu_1527_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_13_fu_1531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_6_fu_1523_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_24_fu_1546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_29_fu_1550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_21_fu_1542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_34_fu_1561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_41_fu_1570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_45_fu_1574_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_38_fu_1565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_53_fu_1585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_62_fu_1589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_46_fu_1579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln55_31_fu_1600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln55_12_reg_1974 <= add_ln55_12_fu_1359_p2;
                add_ln55_14_reg_2049 <= add_ln55_14_fu_1536_p2;
                add_ln55_17_reg_1979 <= add_ln55_17_fu_1373_p2;
                add_ln55_20_reg_1984 <= add_ln55_20_fu_1387_p2;
                add_ln55_22_reg_1989 <= add_ln55_22_fu_1393_p2;
                add_ln55_23_reg_1994 <= add_ln55_23_fu_1397_p2;
                add_ln55_28_reg_1999 <= add_ln55_28_fu_1414_p2;
                add_ln55_2_reg_1954 <= add_ln55_2_fu_1320_p2;
                add_ln55_30_reg_2054 <= add_ln55_30_fu_1555_p2;
                add_ln55_32_reg_2004 <= add_ln55_32_fu_1420_p2;
                add_ln55_33_reg_2009 <= add_ln55_33_fu_1424_p2;
                add_ln55_37_reg_2014 <= add_ln55_37_fu_1436_p2;
                add_ln55_39_reg_2019 <= add_ln55_39_fu_1442_p2;
                add_ln55_40_reg_2024 <= add_ln55_40_fu_1446_p2;
                add_ln55_44_reg_2029 <= add_ln55_44_fu_1458_p2;
                add_ln55_49_reg_2034 <= add_ln55_49_fu_1472_p2;
                add_ln55_52_reg_2039 <= add_ln55_52_fu_1486_p2;
                add_ln55_59_reg_1949 <= add_ln55_59_fu_1242_p2;
                add_ln55_5_reg_1959 <= add_ln55_5_fu_1335_p2;
                add_ln55_61_reg_2044 <= add_ln55_61_fu_1517_p2;
                add_ln55_63_reg_2059 <= add_ln55_63_fu_1594_p2;
                add_ln55_7_reg_1964 <= add_ln55_7_fu_1341_p2;
                add_ln55_8_reg_1969 <= add_ln55_8_fu_1346_p2;
                mul_ln55_10_reg_1709 <= mul_ln55_10_fu_491_p2;
                mul_ln55_11_reg_1714 <= mul_ln55_11_fu_507_p2;
                mul_ln55_12_reg_1719 <= mul_ln55_12_fu_523_p2;
                mul_ln55_13_reg_1724 <= mul_ln55_13_fu_539_p2;
                mul_ln55_14_reg_1729 <= mul_ln55_14_fu_555_p2;
                mul_ln55_15_reg_1734 <= mul_ln55_15_fu_571_p2;
                mul_ln55_16_reg_1739 <= mul_ln55_16_fu_587_p2;
                mul_ln55_17_reg_1744 <= mul_ln55_17_fu_603_p2;
                mul_ln55_18_reg_1749 <= mul_ln55_18_fu_619_p2;
                mul_ln55_19_reg_1754 <= mul_ln55_19_fu_635_p2;
                mul_ln55_1_reg_1653 <= mul_ln55_1_fu_327_p2;
                mul_ln55_20_reg_1759 <= mul_ln55_20_fu_651_p2;
                mul_ln55_21_reg_1764 <= mul_ln55_21_fu_667_p2;
                mul_ln55_22_reg_1769 <= mul_ln55_22_fu_683_p2;
                mul_ln55_23_reg_1774 <= mul_ln55_23_fu_699_p2;
                mul_ln55_24_reg_1779 <= mul_ln55_24_fu_715_p2;
                mul_ln55_25_reg_1784 <= mul_ln55_25_fu_731_p2;
                mul_ln55_26_reg_1789 <= mul_ln55_26_fu_747_p2;
                mul_ln55_27_reg_1794 <= mul_ln55_27_fu_763_p2;
                mul_ln55_28_reg_1799 <= mul_ln55_28_fu_779_p2;
                mul_ln55_29_reg_1804 <= mul_ln55_29_fu_795_p2;
                mul_ln55_2_reg_1658 <= mul_ln55_2_fu_343_p2;
                mul_ln55_30_reg_1809 <= mul_ln55_30_fu_811_p2;
                mul_ln55_31_reg_1814 <= mul_ln55_31_fu_827_p2;
                mul_ln55_32_reg_1819 <= mul_ln55_32_fu_843_p2;
                mul_ln55_33_reg_1824 <= mul_ln55_33_fu_859_p2;
                mul_ln55_34_reg_1829 <= mul_ln55_34_fu_875_p2;
                mul_ln55_35_reg_1834 <= mul_ln55_35_fu_891_p2;
                mul_ln55_36_reg_1839 <= mul_ln55_36_fu_907_p2;
                mul_ln55_37_reg_1844 <= mul_ln55_37_fu_923_p2;
                mul_ln55_38_reg_1849 <= mul_ln55_38_fu_939_p2;
                mul_ln55_39_reg_1854 <= mul_ln55_39_fu_955_p2;
                mul_ln55_3_reg_1663 <= mul_ln55_3_fu_359_p2;
                mul_ln55_40_reg_1859 <= mul_ln55_40_fu_971_p2;
                mul_ln55_41_reg_1864 <= mul_ln55_41_fu_987_p2;
                mul_ln55_42_reg_1869 <= mul_ln55_42_fu_1003_p2;
                mul_ln55_43_reg_1874 <= mul_ln55_43_fu_1019_p2;
                mul_ln55_44_reg_1879 <= mul_ln55_44_fu_1035_p2;
                mul_ln55_45_reg_1884 <= mul_ln55_45_fu_1051_p2;
                mul_ln55_46_reg_1889 <= mul_ln55_46_fu_1067_p2;
                mul_ln55_47_reg_1894 <= mul_ln55_47_fu_1083_p2;
                mul_ln55_48_reg_1899 <= mul_ln55_48_fu_1099_p2;
                mul_ln55_49_reg_1904 <= mul_ln55_49_fu_1115_p2;
                mul_ln55_4_reg_1668 <= mul_ln55_4_fu_375_p2;
                mul_ln55_50_reg_1909 <= mul_ln55_50_fu_1131_p2;
                mul_ln55_51_reg_1914 <= mul_ln55_51_fu_1147_p2;
                mul_ln55_52_reg_1929 <= mul_ln55_52_fu_1185_p2;
                mul_ln55_53_reg_1939 <= mul_ln55_53_fu_1211_p2;
                mul_ln55_54_reg_1944 <= mul_ln55_54_fu_1227_p2;
                mul_ln55_5_reg_1678 <= mul_ln55_5_fu_401_p2;
                mul_ln55_6_reg_1689 <= mul_ln55_6_fu_427_p2;
                mul_ln55_7_reg_1694 <= mul_ln55_7_fu_443_p2;
                mul_ln55_8_reg_1699 <= mul_ln55_8_fu_459_p2;
                mul_ln55_9_reg_1704 <= mul_ln55_9_fu_475_p2;
                mul_ln55_reg_1642 <= mul_ln55_fu_301_p2;
                shift_reg_1_0_load_reg_1631_pp0_iter2_reg <= shift_reg_1_0_load_reg_1631;
                shift_reg_1_54_load_reg_1683 <= shift_reg_1_54;
                shift_reg_1_56_load_reg_1673 <= shift_reg_1_56;
                shift_reg_1_5_load_reg_1934 <= shift_reg_1_5;
                shift_reg_1_61_load_reg_1647 <= shift_reg_1_61;
                shift_reg_1_7_load_reg_1919 <= shift_reg_1_7;
                    sub_ln55_2_reg_1924(31 downto 5) <= sub_ln55_2_fu_1169_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_reg_1610 <= x_dout;
                mul_ln55_55_reg_1621 <= mul_ln55_55_fu_255_p2;
                mul_ln55_56_reg_1626 <= mul_ln55_56_fu_271_p2;
                mul_ln55_57_reg_1637 <= mul_ln55_57_fu_292_p2;
                shift_reg_1_0_load_reg_1631 <= shift_reg_1_0;
                shift_reg_1_2_load_reg_1616 <= shift_reg_1_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                shift_reg_1_0 <= data_reg_1610;
                shift_reg_1_1 <= shift_reg_1_0;
                shift_reg_1_2 <= shift_reg_1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                shift_reg_1_10 <= shift_reg_1_9;
                shift_reg_1_11 <= shift_reg_1_10;
                shift_reg_1_12 <= shift_reg_1_11;
                shift_reg_1_13 <= shift_reg_1_12;
                shift_reg_1_14 <= shift_reg_1_13;
                shift_reg_1_15 <= shift_reg_1_14;
                shift_reg_1_16 <= shift_reg_1_15;
                shift_reg_1_17 <= shift_reg_1_16;
                shift_reg_1_18 <= shift_reg_1_17;
                shift_reg_1_19 <= shift_reg_1_18;
                shift_reg_1_20 <= shift_reg_1_19;
                shift_reg_1_21 <= shift_reg_1_20;
                shift_reg_1_22 <= shift_reg_1_21;
                shift_reg_1_23 <= shift_reg_1_22;
                shift_reg_1_24 <= shift_reg_1_23;
                shift_reg_1_25 <= shift_reg_1_24;
                shift_reg_1_26 <= shift_reg_1_25;
                shift_reg_1_27 <= shift_reg_1_26;
                shift_reg_1_28 <= shift_reg_1_27;
                shift_reg_1_29 <= shift_reg_1_28;
                shift_reg_1_3 <= shift_reg_1_2_load_reg_1616;
                shift_reg_1_30 <= shift_reg_1_29;
                shift_reg_1_31 <= shift_reg_1_30;
                shift_reg_1_32 <= shift_reg_1_31;
                shift_reg_1_33 <= shift_reg_1_32;
                shift_reg_1_34 <= shift_reg_1_33;
                shift_reg_1_35 <= shift_reg_1_34;
                shift_reg_1_36 <= shift_reg_1_35;
                shift_reg_1_37 <= shift_reg_1_36;
                shift_reg_1_38 <= shift_reg_1_37;
                shift_reg_1_39 <= shift_reg_1_38;
                shift_reg_1_4 <= shift_reg_1_3;
                shift_reg_1_40 <= shift_reg_1_39;
                shift_reg_1_41 <= shift_reg_1_40;
                shift_reg_1_42 <= shift_reg_1_41;
                shift_reg_1_43 <= shift_reg_1_42;
                shift_reg_1_44 <= shift_reg_1_43;
                shift_reg_1_45 <= shift_reg_1_44;
                shift_reg_1_46 <= shift_reg_1_45;
                shift_reg_1_47 <= shift_reg_1_46;
                shift_reg_1_48 <= shift_reg_1_47;
                shift_reg_1_49 <= shift_reg_1_48;
                shift_reg_1_5 <= shift_reg_1_4;
                shift_reg_1_50 <= shift_reg_1_49;
                shift_reg_1_51 <= shift_reg_1_50;
                shift_reg_1_52 <= shift_reg_1_51;
                shift_reg_1_53 <= shift_reg_1_52;
                shift_reg_1_54 <= shift_reg_1_53;
                shift_reg_1_55 <= shift_reg_1_54;
                shift_reg_1_56 <= shift_reg_1_55;
                shift_reg_1_57 <= shift_reg_1_56;
                shift_reg_1_58 <= shift_reg_1_57;
                shift_reg_1_59 <= shift_reg_1_58;
                shift_reg_1_6 <= shift_reg_1_5;
                shift_reg_1_60 <= shift_reg_1_59;
                shift_reg_1_61 <= shift_reg_1_60;
                shift_reg_1_62 <= shift_reg_1_61;
                shift_reg_1_7 <= shift_reg_1_6;
                shift_reg_1_8 <= shift_reg_1_7;
                shift_reg_1_9 <= shift_reg_1_8;
            end if;
        end if;
    end process;
    sub_ln55_2_reg_1924(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln55_10_fu_1351_p2 <= std_logic_vector(unsigned(mul_ln55_6_reg_1689) + unsigned(mul_ln55_7_reg_1694));
    add_ln55_11_fu_1355_p2 <= std_logic_vector(unsigned(mul_ln55_8_reg_1699) + unsigned(mul_ln55_9_reg_1704));
    add_ln55_12_fu_1359_p2 <= std_logic_vector(unsigned(add_ln55_11_fu_1355_p2) + unsigned(add_ln55_10_fu_1351_p2));
    add_ln55_13_fu_1531_p2 <= std_logic_vector(unsigned(add_ln55_12_reg_1974) + unsigned(add_ln55_9_fu_1527_p2));
    add_ln55_14_fu_1536_p2 <= std_logic_vector(unsigned(add_ln55_13_fu_1531_p2) + unsigned(add_ln55_6_fu_1523_p2));
    add_ln55_15_fu_1365_p2 <= std_logic_vector(unsigned(mul_ln55_10_reg_1709) + unsigned(mul_ln55_11_reg_1714));
    add_ln55_16_fu_1369_p2 <= std_logic_vector(unsigned(mul_ln55_12_reg_1719) + unsigned(mul_ln55_13_reg_1724));
    add_ln55_17_fu_1373_p2 <= std_logic_vector(unsigned(add_ln55_16_fu_1369_p2) + unsigned(add_ln55_15_fu_1365_p2));
    add_ln55_18_fu_1379_p2 <= std_logic_vector(unsigned(mul_ln55_14_reg_1729) + unsigned(mul_ln55_15_reg_1734));
    add_ln55_19_fu_1383_p2 <= std_logic_vector(unsigned(mul_ln55_16_reg_1739) + unsigned(mul_ln55_17_reg_1744));
    add_ln55_1_fu_1315_p2 <= std_logic_vector(unsigned(mul_ln55_reg_1642) + unsigned(shl_ln55_fu_1247_p2));
    add_ln55_20_fu_1387_p2 <= std_logic_vector(unsigned(add_ln55_19_fu_1383_p2) + unsigned(add_ln55_18_fu_1379_p2));
    add_ln55_21_fu_1542_p2 <= std_logic_vector(unsigned(add_ln55_20_reg_1984) + unsigned(add_ln55_17_reg_1979));
    add_ln55_22_fu_1393_p2 <= std_logic_vector(unsigned(mul_ln55_18_reg_1749) + unsigned(mul_ln55_19_reg_1754));
    add_ln55_23_fu_1397_p2 <= std_logic_vector(unsigned(mul_ln55_20_reg_1759) + unsigned(mul_ln55_21_reg_1764));
    add_ln55_24_fu_1546_p2 <= std_logic_vector(unsigned(add_ln55_23_reg_1994) + unsigned(add_ln55_22_reg_1989));
    add_ln55_25_fu_1401_p2 <= std_logic_vector(unsigned(mul_ln55_22_reg_1769) + unsigned(mul_ln55_23_reg_1774));
    add_ln55_26_fu_1405_p2 <= std_logic_vector(unsigned(mul_ln55_25_reg_1784) + unsigned(mul_ln55_26_reg_1789));
    add_ln55_27_fu_1409_p2 <= std_logic_vector(unsigned(add_ln55_26_fu_1405_p2) + unsigned(mul_ln55_24_reg_1779));
    add_ln55_28_fu_1414_p2 <= std_logic_vector(unsigned(add_ln55_27_fu_1409_p2) + unsigned(add_ln55_25_fu_1401_p2));
    add_ln55_29_fu_1550_p2 <= std_logic_vector(unsigned(add_ln55_28_reg_1999) + unsigned(add_ln55_24_fu_1546_p2));
    add_ln55_2_fu_1320_p2 <= std_logic_vector(unsigned(add_ln55_1_fu_1315_p2) + unsigned(add_ln55_fu_1309_p2));
    add_ln55_30_fu_1555_p2 <= std_logic_vector(unsigned(add_ln55_29_fu_1550_p2) + unsigned(add_ln55_21_fu_1542_p2));
    add_ln55_31_fu_1600_p2 <= std_logic_vector(unsigned(add_ln55_30_reg_2054) + unsigned(add_ln55_14_reg_2049));
    add_ln55_32_fu_1420_p2 <= std_logic_vector(unsigned(mul_ln55_27_reg_1794) + unsigned(mul_ln55_28_reg_1799));
    add_ln55_33_fu_1424_p2 <= std_logic_vector(unsigned(mul_ln55_29_reg_1804) + unsigned(mul_ln55_30_reg_1809));
    add_ln55_34_fu_1561_p2 <= std_logic_vector(unsigned(add_ln55_33_reg_2009) + unsigned(add_ln55_32_reg_2004));
    add_ln55_35_fu_1428_p2 <= std_logic_vector(unsigned(mul_ln55_31_reg_1814) + unsigned(mul_ln55_32_reg_1819));
    add_ln55_36_fu_1432_p2 <= std_logic_vector(unsigned(mul_ln55_33_reg_1824) + unsigned(mul_ln55_34_reg_1829));
    add_ln55_37_fu_1436_p2 <= std_logic_vector(unsigned(add_ln55_36_fu_1432_p2) + unsigned(add_ln55_35_fu_1428_p2));
    add_ln55_38_fu_1565_p2 <= std_logic_vector(unsigned(add_ln55_37_reg_2014) + unsigned(add_ln55_34_fu_1561_p2));
    add_ln55_39_fu_1442_p2 <= std_logic_vector(unsigned(mul_ln55_35_reg_1834) + unsigned(mul_ln55_36_reg_1839));
    add_ln55_3_fu_1326_p2 <= std_logic_vector(unsigned(shl_ln55_1_fu_1252_p2) + unsigned(mul_ln55_1_reg_1653));
    add_ln55_40_fu_1446_p2 <= std_logic_vector(unsigned(mul_ln55_37_reg_1844) + unsigned(mul_ln55_38_reg_1849));
    add_ln55_41_fu_1570_p2 <= std_logic_vector(unsigned(add_ln55_40_reg_2024) + unsigned(add_ln55_39_reg_2019));
    add_ln55_42_fu_1450_p2 <= std_logic_vector(unsigned(mul_ln55_39_reg_1854) + unsigned(mul_ln55_40_reg_1859));
    add_ln55_43_fu_1454_p2 <= std_logic_vector(unsigned(mul_ln55_41_reg_1864) + unsigned(mul_ln55_42_reg_1869));
    add_ln55_44_fu_1458_p2 <= std_logic_vector(unsigned(add_ln55_43_fu_1454_p2) + unsigned(add_ln55_42_fu_1450_p2));
    add_ln55_45_fu_1574_p2 <= std_logic_vector(unsigned(add_ln55_44_reg_2029) + unsigned(add_ln55_41_fu_1570_p2));
    add_ln55_46_fu_1579_p2 <= std_logic_vector(unsigned(add_ln55_45_fu_1574_p2) + unsigned(add_ln55_38_fu_1565_p2));
    add_ln55_47_fu_1464_p2 <= std_logic_vector(unsigned(mul_ln55_43_reg_1874) + unsigned(mul_ln55_44_reg_1879));
    add_ln55_48_fu_1468_p2 <= std_logic_vector(unsigned(mul_ln55_45_reg_1884) + unsigned(mul_ln55_46_reg_1889));
    add_ln55_49_fu_1472_p2 <= std_logic_vector(unsigned(add_ln55_48_fu_1468_p2) + unsigned(add_ln55_47_fu_1464_p2));
    add_ln55_4_fu_1331_p2 <= std_logic_vector(unsigned(mul_ln55_2_reg_1658) + unsigned(mul_ln55_3_reg_1663));
    add_ln55_50_fu_1478_p2 <= std_logic_vector(unsigned(mul_ln55_47_reg_1894) + unsigned(mul_ln55_48_reg_1899));
    add_ln55_51_fu_1482_p2 <= std_logic_vector(unsigned(mul_ln55_49_reg_1904) + unsigned(mul_ln55_50_reg_1909));
    add_ln55_52_fu_1486_p2 <= std_logic_vector(unsigned(add_ln55_51_fu_1482_p2) + unsigned(add_ln55_50_fu_1478_p2));
    add_ln55_53_fu_1585_p2 <= std_logic_vector(unsigned(add_ln55_52_reg_2039) + unsigned(add_ln55_49_reg_2034));
    add_ln55_54_fu_1492_p2 <= std_logic_vector(unsigned(mul_ln55_51_reg_1914) + unsigned(sub_ln55_3_fu_1289_p2));
    add_ln55_55_fu_1497_p2 <= std_logic_vector(unsigned(mul_ln55_52_reg_1929) + unsigned(shl_ln55_7_fu_1294_p2));
    add_ln55_56_fu_1502_p2 <= std_logic_vector(unsigned(add_ln55_55_fu_1497_p2) + unsigned(add_ln55_54_fu_1492_p2));
    add_ln55_57_fu_1508_p2 <= std_logic_vector(unsigned(mul_ln55_53_reg_1939) + unsigned(mul_ln55_54_reg_1944));
    add_ln55_58_fu_1238_p2 <= std_logic_vector(unsigned(mul_ln55_56_reg_1626) + unsigned(mul_ln55_57_reg_1637));
    add_ln55_59_fu_1242_p2 <= std_logic_vector(unsigned(add_ln55_58_fu_1238_p2) + unsigned(mul_ln55_55_reg_1621));
    add_ln55_5_fu_1335_p2 <= std_logic_vector(unsigned(add_ln55_4_fu_1331_p2) + unsigned(add_ln55_3_fu_1326_p2));
    add_ln55_60_fu_1512_p2 <= std_logic_vector(unsigned(add_ln55_59_reg_1949) + unsigned(add_ln55_57_fu_1508_p2));
    add_ln55_61_fu_1517_p2 <= std_logic_vector(unsigned(add_ln55_60_fu_1512_p2) + unsigned(add_ln55_56_fu_1502_p2));
    add_ln55_62_fu_1589_p2 <= std_logic_vector(unsigned(add_ln55_61_reg_2044) + unsigned(add_ln55_53_fu_1585_p2));
    add_ln55_63_fu_1594_p2 <= std_logic_vector(unsigned(add_ln55_62_fu_1589_p2) + unsigned(add_ln55_46_fu_1579_p2));
    add_ln55_6_fu_1523_p2 <= std_logic_vector(unsigned(add_ln55_5_reg_1959) + unsigned(add_ln55_2_reg_1954));
    add_ln55_7_fu_1341_p2 <= std_logic_vector(unsigned(mul_ln55_4_reg_1668) + unsigned(shl_ln55_2_fu_1257_p2));
    add_ln55_8_fu_1346_p2 <= std_logic_vector(unsigned(mul_ln55_5_reg_1678) + unsigned(sub_ln55_1_fu_1278_p2));
    add_ln55_9_fu_1527_p2 <= std_logic_vector(unsigned(add_ln55_8_reg_1969) + unsigned(add_ln55_7_reg_1964));
    add_ln55_fu_1309_p2 <= std_logic_vector(unsigned(shl_ln55_9_fu_1304_p2) + unsigned(shl_ln55_8_fu_1299_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter5, x_empty_n, y_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((y_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter5, x_empty_n, y_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((y_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter5, x_empty_n, y_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((y_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, x_empty_n)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(y_full_n)
    begin
                ap_block_state6_pp0_stage0_iter5 <= (y_full_n = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln55_10_fu_491_p1 <= shift_reg_1_49;
    mul_ln55_10_fu_491_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFD4E) * signed(mul_ln55_10_fu_491_p1))), 32));
    mul_ln55_11_fu_507_p1 <= shift_reg_1_48;
    mul_ln55_11_fu_507_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCF7) * signed(mul_ln55_11_fu_507_p1))), 32));
    mul_ln55_12_fu_523_p1 <= shift_reg_1_47;
    mul_ln55_12_fu_523_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCD0) * signed(mul_ln55_12_fu_523_p1))), 32));
    mul_ln55_13_fu_539_p1 <= shift_reg_1_46;
    mul_ln55_13_fu_539_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCEA) * signed(mul_ln55_13_fu_539_p1))), 32));
    mul_ln55_14_fu_555_p1 <= shift_reg_1_45;
    mul_ln55_14_fu_555_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFD51) * signed(mul_ln55_14_fu_555_p1))), 32));
    mul_ln55_15_fu_571_p1 <= shift_reg_1_44;
    mul_ln55_15_fu_571_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFE0E) * signed(mul_ln55_15_fu_571_p1))), 32));
    mul_ln55_16_fu_587_p1 <= shift_reg_1_43;
    mul_ln55_16_fu_587_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFF27) * signed(mul_ln55_16_fu_587_p1))), 32));
    mul_ln55_17_fu_603_p1 <= shift_reg_1_42;
    mul_ln55_17_fu_603_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_9C) * signed(mul_ln55_17_fu_603_p1))), 32));
    mul_ln55_18_fu_619_p1 <= shift_reg_1_41;
    mul_ln55_18_fu_619_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_266) * signed(mul_ln55_18_fu_619_p1))), 32));
    mul_ln55_19_fu_635_p1 <= shift_reg_1_40;
    mul_ln55_19_fu_635_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_47B) * signed(mul_ln55_19_fu_635_p1))), 32));
    mul_ln55_1_fu_327_p1 <= shift_reg_1_60;
    mul_ln55_1_fu_327_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_AC) * signed(mul_ln55_1_fu_327_p1))), 32));
    mul_ln55_20_fu_651_p1 <= shift_reg_1_39;
    mul_ln55_20_fu_651_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_6C9) * signed(mul_ln55_20_fu_651_p1))), 32));
    mul_ln55_21_fu_667_p1 <= shift_reg_1_38;
    mul_ln55_21_fu_667_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_93A) * signed(mul_ln55_21_fu_667_p1))), 32));
    mul_ln55_22_fu_683_p1 <= shift_reg_1_37;
    mul_ln55_22_fu_683_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BB5) * signed(mul_ln55_22_fu_683_p1))), 32));
    mul_ln55_23_fu_699_p1 <= shift_reg_1_36;
    mul_ln55_23_fu_699_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_E1D) * signed(mul_ln55_23_fu_699_p1))), 32));
    mul_ln55_24_fu_715_p1 <= shift_reg_1_35;
    mul_ln55_24_fu_715_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_1055) * signed(mul_ln55_24_fu_715_p1))), 32));
    mul_ln55_25_fu_731_p1 <= shift_reg_1_34;
    mul_ln55_25_fu_731_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_1243) * signed(mul_ln55_25_fu_731_p1))), 32));
    mul_ln55_26_fu_747_p1 <= shift_reg_1_33;
    mul_ln55_26_fu_747_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_13CD) * signed(mul_ln55_26_fu_747_p1))), 32));
    mul_ln55_27_fu_763_p1 <= shift_reg_1_32;
    mul_ln55_27_fu_763_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_14E0) * signed(mul_ln55_27_fu_763_p1))), 32));
    mul_ln55_28_fu_779_p1 <= shift_reg_1_31;
    mul_ln55_28_fu_779_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_156D) * signed(mul_ln55_28_fu_779_p1))), 32));
    mul_ln55_29_fu_795_p1 <= shift_reg_1_30;
    mul_ln55_29_fu_795_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_156D) * signed(mul_ln55_29_fu_795_p1))), 32));
    mul_ln55_2_fu_343_p1 <= shift_reg_1_59;
    mul_ln55_2_fu_343_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BD) * signed(mul_ln55_2_fu_343_p1))), 32));
    mul_ln55_30_fu_811_p1 <= shift_reg_1_29;
    mul_ln55_30_fu_811_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_14E0) * signed(mul_ln55_30_fu_811_p1))), 32));
    mul_ln55_31_fu_827_p1 <= shift_reg_1_28;
    mul_ln55_31_fu_827_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_13CD) * signed(mul_ln55_31_fu_827_p1))), 32));
    mul_ln55_32_fu_843_p1 <= shift_reg_1_27;
    mul_ln55_32_fu_843_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_1243) * signed(mul_ln55_32_fu_843_p1))), 32));
    mul_ln55_33_fu_859_p1 <= shift_reg_1_26;
    mul_ln55_33_fu_859_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_1055) * signed(mul_ln55_33_fu_859_p1))), 32));
    mul_ln55_34_fu_875_p1 <= shift_reg_1_25;
    mul_ln55_34_fu_875_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_E1D) * signed(mul_ln55_34_fu_875_p1))), 32));
    mul_ln55_35_fu_891_p1 <= shift_reg_1_24;
    mul_ln55_35_fu_891_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BB5) * signed(mul_ln55_35_fu_891_p1))), 32));
    mul_ln55_36_fu_907_p1 <= shift_reg_1_23;
    mul_ln55_36_fu_907_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_93A) * signed(mul_ln55_36_fu_907_p1))), 32));
    mul_ln55_37_fu_923_p1 <= shift_reg_1_22;
    mul_ln55_37_fu_923_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_6C9) * signed(mul_ln55_37_fu_923_p1))), 32));
    mul_ln55_38_fu_939_p1 <= shift_reg_1_21;
    mul_ln55_38_fu_939_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_47B) * signed(mul_ln55_38_fu_939_p1))), 32));
    mul_ln55_39_fu_955_p1 <= shift_reg_1_20;
    mul_ln55_39_fu_955_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_266) * signed(mul_ln55_39_fu_955_p1))), 32));
    mul_ln55_3_fu_359_p1 <= shift_reg_1_58;
    mul_ln55_3_fu_359_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BF) * signed(mul_ln55_3_fu_359_p1))), 32));
    mul_ln55_40_fu_971_p1 <= shift_reg_1_19;
    mul_ln55_40_fu_971_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_9C) * signed(mul_ln55_40_fu_971_p1))), 32));
    mul_ln55_41_fu_987_p1 <= shift_reg_1_18;
    mul_ln55_41_fu_987_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFF27) * signed(mul_ln55_41_fu_987_p1))), 32));
    mul_ln55_42_fu_1003_p1 <= shift_reg_1_17;
    mul_ln55_42_fu_1003_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFE0E) * signed(mul_ln55_42_fu_1003_p1))), 32));
    mul_ln55_43_fu_1019_p1 <= shift_reg_1_16;
    mul_ln55_43_fu_1019_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFD51) * signed(mul_ln55_43_fu_1019_p1))), 32));
    mul_ln55_44_fu_1035_p1 <= shift_reg_1_15;
    mul_ln55_44_fu_1035_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCEA) * signed(mul_ln55_44_fu_1035_p1))), 32));
    mul_ln55_45_fu_1051_p1 <= shift_reg_1_14;
    mul_ln55_45_fu_1051_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCD0) * signed(mul_ln55_45_fu_1051_p1))), 32));
    mul_ln55_46_fu_1067_p1 <= shift_reg_1_13;
    mul_ln55_46_fu_1067_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFCF7) * signed(mul_ln55_46_fu_1067_p1))), 32));
    mul_ln55_47_fu_1083_p1 <= shift_reg_1_12;
    mul_ln55_47_fu_1083_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFD4E) * signed(mul_ln55_47_fu_1083_p1))), 32));
    mul_ln55_48_fu_1099_p1 <= shift_reg_1_11;
    mul_ln55_48_fu_1099_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFDC6) * signed(mul_ln55_48_fu_1099_p1))), 32));
    mul_ln55_49_fu_1115_p1 <= shift_reg_1_10;
    mul_ln55_49_fu_1115_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFE50) * signed(mul_ln55_49_fu_1115_p1))), 32));
    mul_ln55_4_fu_375_p1 <= shift_reg_1_57;
    mul_ln55_4_fu_375_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_AC) * signed(mul_ln55_4_fu_375_p1))), 32));
    mul_ln55_50_fu_1131_p1 <= shift_reg_1_9;
    mul_ln55_50_fu_1131_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFEDF) * signed(mul_ln55_50_fu_1131_p1))), 32));
    mul_ln55_51_fu_1147_p1 <= shift_reg_1_8;
    mul_ln55_51_fu_1147_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFF65) * signed(mul_ln55_51_fu_1147_p1))), 32));
    mul_ln55_52_fu_1185_p1 <= shift_reg_1_6;
    mul_ln55_52_fu_1185_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_3B) * signed(mul_ln55_52_fu_1185_p1))), 32));
    mul_ln55_53_fu_1211_p1 <= shift_reg_1_4;
    mul_ln55_53_fu_1211_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_AC) * signed(mul_ln55_53_fu_1211_p1))), 32));
    mul_ln55_54_fu_1227_p1 <= shift_reg_1_3;
    mul_ln55_54_fu_1227_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BF) * signed(mul_ln55_54_fu_1227_p1))), 32));
    mul_ln55_55_fu_255_p1 <= shift_reg_1_2;
    mul_ln55_55_fu_255_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_BD) * signed(mul_ln55_55_fu_255_p1))), 32));
    mul_ln55_56_fu_271_p1 <= shift_reg_1_1;
    mul_ln55_56_fu_271_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_AC) * signed(mul_ln55_56_fu_271_p1))), 32));
    mul_ln55_57_fu_292_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_E7) * signed(data_reg_1610))), 32));
    mul_ln55_5_fu_401_p1 <= shift_reg_1_55;
    mul_ln55_5_fu_401_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_3B) * signed(mul_ln55_5_fu_401_p1))), 32));
    mul_ln55_6_fu_427_p1 <= shift_reg_1_53;
    mul_ln55_6_fu_427_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFF65) * signed(mul_ln55_6_fu_427_p1))), 32));
    mul_ln55_7_fu_443_p1 <= shift_reg_1_52;
    mul_ln55_7_fu_443_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFEDF) * signed(mul_ln55_7_fu_443_p1))), 32));
    mul_ln55_8_fu_459_p1 <= shift_reg_1_51;
    mul_ln55_8_fu_459_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFE50) * signed(mul_ln55_8_fu_459_p1))), 32));
    mul_ln55_9_fu_475_p1 <= shift_reg_1_50;
    mul_ln55_9_fu_475_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFDC6) * signed(mul_ln55_9_fu_475_p1))), 32));
    mul_ln55_fu_301_p1 <= shift_reg_1_62;
    mul_ln55_fu_301_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_E7) * signed(mul_ln55_fu_301_p1))), 32));
    shl_ln55_1_fu_1252_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_61_load_reg_1647),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln55_2_fu_1257_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_56_load_reg_1673),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    shl_ln55_3_fu_1262_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_54_load_reg_1683),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    shl_ln55_4_fu_1273_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_54_load_reg_1683),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln55_5_fu_1163_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_7),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    shl_ln55_6_fu_1284_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_7_load_reg_1919),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    shl_ln55_7_fu_1294_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_5_load_reg_1934),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    shl_ln55_8_fu_1299_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_0_load_reg_1631_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    shl_ln55_9_fu_1304_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_0_load_reg_1631_pp0_iter2_reg),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln55_fu_1247_p2 <= std_logic_vector(shift_left(unsigned(shift_reg_1_61_load_reg_1647),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    sub_ln55_1_fu_1278_p2 <= std_logic_vector(unsigned(sub_ln55_fu_1267_p2) - unsigned(shl_ln55_4_fu_1273_p2));
    sub_ln55_2_fu_1169_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln55_5_fu_1163_p2));
    sub_ln55_3_fu_1289_p2 <= std_logic_vector(unsigned(sub_ln55_2_reg_1924) - unsigned(shl_ln55_6_fu_1284_p2));
    sub_ln55_fu_1267_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(shl_ln55_3_fu_1262_p2));

    x_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, x_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_blk_n <= x_empty_n;
        else 
            x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_read <= ap_const_logic_1;
        else 
            x_read <= ap_const_logic_0;
        end if; 
    end process;


    y_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, y_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            y_blk_n <= y_full_n;
        else 
            y_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    y_din <= std_logic_vector(unsigned(add_ln55_63_reg_2059) + unsigned(add_ln55_31_fu_1600_p2));

    y_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_write <= ap_const_logic_1;
        else 
            y_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
