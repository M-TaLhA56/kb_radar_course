// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "o_mux.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic o_mux::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic o_mux::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> o_mux::ap_ST_fsm_state1 = "1";
const sc_lv<32> o_mux::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool o_mux::ap_const_boolean_1 = true;
const sc_lv<2> o_mux::ap_const_lv2_3 = "11";
const sc_lv<1> o_mux::ap_const_lv1_0 = "0";
const sc_lv<1> o_mux::ap_const_lv1_1 = "1";
const sc_lv<2> o_mux::ap_const_lv2_1 = "1";
const sc_lv<2> o_mux::ap_const_lv2_2 = "10";
const sc_lv<2> o_mux::ap_const_lv2_0 = "00";

o_mux::o_mux(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_ap_condition_60);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_storemerge1_i_i_phi_fu_154_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( qx_V_dout );
    sensitive << ( mux_V_read_read_fu_114_p2 );
    sensitive << ( flag_read_read_fu_84_p2 );
    sensitive << ( sub_ln68_1_fu_183_p2 );

    SC_METHOD(thread_ap_phi_mux_storemerge_i_i_phi_fu_143_p4);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read1 );
    sensitive << ( sub_ln68_3_fu_169_p2 );
    sensitive << ( mux_V_read_read_fu_114_p2 );
    sensitive << ( flag_read_read_fu_84_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_flag_read_read_fu_84_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( flag );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_ix_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );

    SC_METHOD(thread_ix_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_iy_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_dout );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( p_read );
    sensitive << ( mux_V_empty_n );
    sensitive << ( mux_V_read_read_fu_114_p2 );
    sensitive << ( flag_read_read_fu_84_p2 );
    sensitive << ( sub_ln68_2_fu_162_p2 );
    sensitive << ( iy_V_preg );
    sensitive << ( sub_ln68_fu_176_p2 );

    SC_METHOD(thread_iy_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );
    sensitive << ( mux_V_read_read_fu_114_p2 );
    sensitive << ( flag_read_read_fu_84_p2 );

    SC_METHOD(thread_mux_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_mux_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_mux_V_read_read_fu_114_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_dout );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_qx_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( qx_V_empty_n );

    SC_METHOD(thread_qx_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    SC_METHOD(thread_qy_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_dout );
    sensitive << ( qx_V_empty_n );
    sensitive << ( p_read1 );
    sensitive << ( mux_V_empty_n );
    sensitive << ( ap_phi_mux_storemerge_i_i_phi_fu_143_p4 );
    sensitive << ( mux_V_read_read_fu_114_p2 );
    sensitive << ( ap_phi_mux_storemerge1_i_i_phi_fu_154_p4 );
    sensitive << ( qy_V_preg );

    SC_METHOD(thread_qy_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );
    sensitive << ( mux_V_read_read_fu_114_p2 );

    SC_METHOD(thread_sub_ln68_1_fu_183_p2);
    sensitive << ( qx_V_dout );

    SC_METHOD(thread_sub_ln68_2_fu_162_p2);
    sensitive << ( p_read );

    SC_METHOD(thread_sub_ln68_3_fu_169_p2);
    sensitive << ( p_read1 );

    SC_METHOD(thread_sub_ln68_fu_176_p2);
    sensitive << ( ix_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ix_V_empty_n );
    sensitive << ( qx_V_empty_n );
    sensitive << ( mux_V_empty_n );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    iy_V_preg = "00000000000000000000000000000000";
    qy_V_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "o_mux_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ix_V_dout, "(port)ix_V_dout");
    sc_trace(mVcdFile, ix_V_empty_n, "(port)ix_V_empty_n");
    sc_trace(mVcdFile, ix_V_read, "(port)ix_V_read");
    sc_trace(mVcdFile, qx_V_dout, "(port)qx_V_dout");
    sc_trace(mVcdFile, qx_V_empty_n, "(port)qx_V_empty_n");
    sc_trace(mVcdFile, qx_V_read, "(port)qx_V_read");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, iy_V, "(port)iy_V");
    sc_trace(mVcdFile, iy_V_ap_vld, "(port)iy_V_ap_vld");
    sc_trace(mVcdFile, qy_V, "(port)qy_V");
    sc_trace(mVcdFile, qy_V_ap_vld, "(port)qy_V_ap_vld");
    sc_trace(mVcdFile, flag, "(port)flag");
    sc_trace(mVcdFile, mux_V_dout, "(port)mux_V_dout");
    sc_trace(mVcdFile, mux_V_empty_n, "(port)mux_V_empty_n");
    sc_trace(mVcdFile, mux_V_read, "(port)mux_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ix_V_blk_n, "ix_V_blk_n");
    sc_trace(mVcdFile, qx_V_blk_n, "qx_V_blk_n");
    sc_trace(mVcdFile, mux_V_blk_n, "mux_V_blk_n");
    sc_trace(mVcdFile, sub_ln68_3_fu_169_p2, "sub_ln68_3_fu_169_p2");
    sc_trace(mVcdFile, ap_phi_mux_storemerge_i_i_phi_fu_143_p4, "ap_phi_mux_storemerge_i_i_phi_fu_143_p4");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, mux_V_read_read_fu_114_p2, "mux_V_read_read_fu_114_p2");
    sc_trace(mVcdFile, flag_read_read_fu_84_p2, "flag_read_read_fu_84_p2");
    sc_trace(mVcdFile, sub_ln68_1_fu_183_p2, "sub_ln68_1_fu_183_p2");
    sc_trace(mVcdFile, ap_phi_mux_storemerge1_i_i_phi_fu_154_p4, "ap_phi_mux_storemerge1_i_i_phi_fu_154_p4");
    sc_trace(mVcdFile, sub_ln68_2_fu_162_p2, "sub_ln68_2_fu_162_p2");
    sc_trace(mVcdFile, iy_V_preg, "iy_V_preg");
    sc_trace(mVcdFile, sub_ln68_fu_176_p2, "sub_ln68_fu_176_p2");
    sc_trace(mVcdFile, qy_V_preg, "qy_V_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_60, "ap_condition_60");
#endif

    }
}

o_mux::~o_mux() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void o_mux::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        iy_V_preg = ap_const_lv32_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
              esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
              esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0)))) {
            iy_V_preg = ix_V_dout.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                    esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1))) {
            iy_V_preg = sub_ln68_fu_176_p2.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                     esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
                     esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                     esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2)))) {
            iy_V_preg = p_read.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                    esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
                    esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0))) {
            iy_V_preg = sub_ln68_2_fu_162_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        qy_V_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_60.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0)) {
                qy_V_preg = qx_V_dout.read();
            } else if (esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)) {
                qy_V_preg = ap_phi_mux_storemerge1_i_i_phi_fu_154_p4.read();
            } else if (esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2)) {
                qy_V_preg = p_read1.read();
            } else if (esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3)) {
                qy_V_preg = ap_phi_mux_storemerge_i_i_phi_fu_143_p4.read();
            }
        }
    }
}

void o_mux::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void o_mux::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read()));
}

void o_mux::thread_ap_condition_60() {
    ap_condition_60 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())));
}

void o_mux::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void o_mux::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void o_mux::thread_ap_phi_mux_storemerge1_i_i_phi_fu_154_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1))) {
        if (esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_storemerge1_i_i_phi_fu_154_p4 = qx_V_dout.read();
        } else if (esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0)) {
            ap_phi_mux_storemerge1_i_i_phi_fu_154_p4 = sub_ln68_1_fu_183_p2.read();
        } else {
            ap_phi_mux_storemerge1_i_i_phi_fu_154_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_storemerge1_i_i_phi_fu_154_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void o_mux::thread_ap_phi_mux_storemerge_i_i_phi_fu_143_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3))) {
        if (esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_storemerge_i_i_phi_fu_143_p4 = p_read1.read();
        } else if (esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0)) {
            ap_phi_mux_storemerge_i_i_phi_fu_143_p4 = sub_ln68_3_fu_169_p2.read();
        } else {
            ap_phi_mux_storemerge_i_i_phi_fu_143_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_storemerge_i_i_phi_fu_143_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void o_mux::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void o_mux::thread_flag_read_read_fu_84_p2() {
    flag_read_read_fu_84_p2 =  (sc_lv<1>) (flag.read());
}

void o_mux::thread_ix_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ix_V_blk_n = ix_V_empty_n.read();
    } else {
        ix_V_blk_n = ap_const_logic_1;
    }
}

void o_mux::thread_ix_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
        ix_V_read = ap_const_logic_1;
    } else {
        ix_V_read = ap_const_logic_0;
    }
}

void o_mux::thread_iy_V() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        iy_V = ap_const_lv32_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                 esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                 esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0)))) {
        iy_V = ix_V_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1))) {
        iy_V = sub_ln68_fu_176_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                 esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
                 esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                 esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2)))) {
        iy_V = p_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
                esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0))) {
        iy_V = sub_ln68_2_fu_162_p2.read();
    } else {
        iy_V = iy_V_preg.read();
    }
}

void o_mux::thread_iy_V_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,1,1>(flag_read_read_fu_84_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0)))) {
        iy_V_ap_vld = ap_const_logic_1;
    } else {
        iy_V_ap_vld = ap_const_logic_0;
    }
}

void o_mux::thread_mux_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        mux_V_blk_n = mux_V_empty_n.read();
    } else {
        mux_V_blk_n = ap_const_logic_1;
    }
}

void o_mux::thread_mux_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
        mux_V_read = ap_const_logic_1;
    } else {
        mux_V_read = ap_const_logic_0;
    }
}

void o_mux::thread_mux_V_read_read_fu_114_p2() {
    mux_V_read_read_fu_114_p2 = mux_V_dout.read();
}

void o_mux::thread_qx_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        qx_V_blk_n = qx_V_empty_n.read();
    } else {
        qx_V_blk_n = ap_const_logic_1;
    }
}

void o_mux::thread_qx_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())))) {
        qx_V_read = ap_const_logic_1;
    } else {
        qx_V_read = ap_const_logic_0;
    }
}

void o_mux::thread_qy_V() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        qy_V = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0))) {
        qy_V = qx_V_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1))) {
        qy_V = ap_phi_mux_storemerge1_i_i_phi_fu_154_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2))) {
        qy_V = p_read1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
                esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3))) {
        qy_V = ap_phi_mux_storemerge_i_i_phi_fu_143_p4.read();
    } else {
        qy_V = qy_V_preg.read();
    }
}

void o_mux::thread_qy_V_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, ix_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, qx_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, mux_V_empty_n.read())) && 
          esl_seteq<1,2,2>(mux_V_read_read_fu_114_p2.read(), ap_const_lv2_1)))) {
        qy_V_ap_vld = ap_const_logic_1;
    } else {
        qy_V_ap_vld = ap_const_logic_0;
    }
}

void o_mux::thread_sub_ln68_1_fu_183_p2() {
    sub_ln68_1_fu_183_p2 = (!ap_const_lv32_0.is_01() || !qx_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(qx_V_dout.read()));
}

void o_mux::thread_sub_ln68_2_fu_162_p2() {
    sub_ln68_2_fu_162_p2 = (!ap_const_lv32_0.is_01() || !p_read.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_read.read()));
}

void o_mux::thread_sub_ln68_3_fu_169_p2() {
    sub_ln68_3_fu_169_p2 = (!ap_const_lv32_0.is_01() || !p_read1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_read1.read()));
}

void o_mux::thread_sub_ln68_fu_176_p2() {
    sub_ln68_fu_176_p2 = (!ap_const_lv32_0.is_01() || !ix_V_dout.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(ix_V_dout.read()));
}

void o_mux::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

