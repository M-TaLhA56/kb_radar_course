// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _phasm_HH_
#define _phasm_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct phasm : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > period_V_dout;
    sc_in< sc_logic > period_V_empty_n;
    sc_out< sc_logic > period_V_read;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    phasm(sc_module_name name);
    SC_HAS_PROCESS(phasm);

    ~phasm();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > count_V;
    sc_signal< sc_lv<1> > tmp;
    sc_signal< sc_logic > period_V_blk_n;
    sc_signal< sc_lv<1> > xor_ln48_fu_91_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_flag_write_assign_phi_fu_53_p4;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln879_fu_73_p2;
    sc_signal< sc_lv<8> > ap_phi_mux_storemerge_i_phi_fu_62_p4;
    sc_signal< sc_lv<8> > add_ln700_fu_84_p2;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_fu_84_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_flag_write_assign_phi_fu_53_p4();
    void thread_ap_phi_mux_storemerge_i_phi_fu_62_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln879_fu_73_p2();
    void thread_period_V_blk_n();
    void thread_period_V_read();
    void thread_xor_ln48_fu_91_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
