// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fir_filter_b (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x_dout,
        x_empty_n,
        x_read,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] x_dout;
input   x_empty_n;
output   x_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x_read;
reg[31:0] ap_return;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] shift_reg_62;
reg   [31:0] shift_reg_61;
reg   [31:0] shift_reg_60;
reg   [31:0] shift_reg_59;
reg   [31:0] shift_reg_58;
reg   [31:0] shift_reg_57;
reg   [31:0] shift_reg_56;
reg   [31:0] shift_reg_55;
reg   [31:0] shift_reg_54;
reg   [31:0] shift_reg_53;
reg   [31:0] shift_reg_52;
reg   [31:0] shift_reg_51;
reg   [31:0] shift_reg_50;
reg   [31:0] shift_reg_49;
reg   [31:0] shift_reg_48;
reg   [31:0] shift_reg_47;
reg   [31:0] shift_reg_46;
reg   [31:0] shift_reg_45;
reg   [31:0] shift_reg_44;
reg   [31:0] shift_reg_43;
reg   [31:0] shift_reg_42;
reg   [31:0] shift_reg_41;
reg   [31:0] shift_reg_40;
reg   [31:0] shift_reg_39;
reg   [31:0] shift_reg_38;
reg   [31:0] shift_reg_37;
reg   [31:0] shift_reg_36;
reg   [31:0] shift_reg_35;
reg   [31:0] shift_reg_34;
reg   [31:0] shift_reg_33;
reg   [31:0] shift_reg_32;
reg   [31:0] shift_reg_31;
reg   [31:0] shift_reg_30;
reg   [31:0] shift_reg_29;
reg   [31:0] shift_reg_28;
reg   [31:0] shift_reg_27;
reg   [31:0] shift_reg_26;
reg   [31:0] shift_reg_25;
reg   [31:0] shift_reg_24;
reg   [31:0] shift_reg_23;
reg   [31:0] shift_reg_22;
reg   [31:0] shift_reg_21;
reg   [31:0] shift_reg_20;
reg   [31:0] shift_reg_19;
reg   [31:0] shift_reg_18;
reg   [31:0] shift_reg_17;
reg   [31:0] shift_reg_16;
reg   [31:0] shift_reg_15;
reg   [31:0] shift_reg_14;
reg   [31:0] shift_reg_13;
reg   [31:0] shift_reg_12;
reg   [31:0] shift_reg_11;
reg   [31:0] shift_reg_10;
reg   [31:0] shift_reg_9;
reg   [31:0] shift_reg_8;
reg   [31:0] shift_reg_7;
reg   [31:0] shift_reg_6;
reg   [31:0] shift_reg_5;
reg   [31:0] shift_reg_4;
reg   [31:0] shift_reg_3;
reg   [31:0] shift_reg_2;
reg   [31:0] shift_reg_1;
reg   [31:0] shift_reg_0;
reg    x_blk_n;
wire    ap_block_pp0_stage0;
reg  signed [31:0] data_reg_1584;
wire   [31:0] mul_ln75_fu_232_p2;
reg   [31:0] mul_ln75_reg_1590;
reg   [31:0] shift_reg_61_load_reg_1595;
wire   [31:0] mul_ln75_1_fu_258_p2;
reg   [31:0] mul_ln75_1_reg_1601;
wire   [31:0] mul_ln75_2_fu_274_p2;
reg   [31:0] mul_ln75_2_reg_1606;
wire   [31:0] mul_ln75_3_fu_290_p2;
reg   [31:0] mul_ln75_3_reg_1611;
wire   [31:0] mul_ln75_4_fu_306_p2;
reg   [31:0] mul_ln75_4_reg_1616;
reg   [31:0] shift_reg_56_load_reg_1621;
wire   [31:0] mul_ln75_5_fu_332_p2;
reg   [31:0] mul_ln75_5_reg_1626;
reg   [31:0] shift_reg_54_load_reg_1631;
wire   [31:0] mul_ln75_6_fu_358_p2;
reg   [31:0] mul_ln75_6_reg_1637;
wire   [31:0] mul_ln75_7_fu_374_p2;
reg   [31:0] mul_ln75_7_reg_1642;
wire   [31:0] mul_ln75_8_fu_390_p2;
reg   [31:0] mul_ln75_8_reg_1647;
wire   [31:0] mul_ln75_9_fu_406_p2;
reg   [31:0] mul_ln75_9_reg_1652;
wire   [31:0] mul_ln75_10_fu_422_p2;
reg   [31:0] mul_ln75_10_reg_1657;
wire   [31:0] mul_ln75_11_fu_438_p2;
reg   [31:0] mul_ln75_11_reg_1662;
wire   [31:0] mul_ln75_12_fu_454_p2;
reg   [31:0] mul_ln75_12_reg_1667;
wire   [31:0] mul_ln75_13_fu_470_p2;
reg   [31:0] mul_ln75_13_reg_1672;
wire   [31:0] mul_ln75_14_fu_486_p2;
reg   [31:0] mul_ln75_14_reg_1677;
wire   [31:0] mul_ln75_15_fu_502_p2;
reg   [31:0] mul_ln75_15_reg_1682;
wire   [31:0] mul_ln75_16_fu_518_p2;
reg   [31:0] mul_ln75_16_reg_1687;
wire   [31:0] mul_ln75_17_fu_534_p2;
reg   [31:0] mul_ln75_17_reg_1692;
wire   [31:0] mul_ln75_18_fu_550_p2;
reg   [31:0] mul_ln75_18_reg_1697;
wire   [31:0] mul_ln75_19_fu_566_p2;
reg   [31:0] mul_ln75_19_reg_1702;
wire   [31:0] mul_ln75_20_fu_582_p2;
reg   [31:0] mul_ln75_20_reg_1707;
wire   [31:0] mul_ln75_21_fu_598_p2;
reg   [31:0] mul_ln75_21_reg_1712;
wire   [31:0] mul_ln75_22_fu_614_p2;
reg   [31:0] mul_ln75_22_reg_1717;
wire   [31:0] mul_ln75_23_fu_630_p2;
reg   [31:0] mul_ln75_23_reg_1722;
wire   [31:0] mul_ln75_24_fu_646_p2;
reg   [31:0] mul_ln75_24_reg_1727;
wire   [31:0] mul_ln75_25_fu_662_p2;
reg   [31:0] mul_ln75_25_reg_1732;
wire   [31:0] mul_ln75_26_fu_678_p2;
reg   [31:0] mul_ln75_26_reg_1737;
wire   [31:0] mul_ln75_27_fu_694_p2;
reg   [31:0] mul_ln75_27_reg_1742;
wire   [31:0] mul_ln75_28_fu_710_p2;
reg   [31:0] mul_ln75_28_reg_1747;
wire   [31:0] mul_ln75_29_fu_726_p2;
reg   [31:0] mul_ln75_29_reg_1752;
wire   [31:0] mul_ln75_30_fu_742_p2;
reg   [31:0] mul_ln75_30_reg_1757;
wire   [31:0] mul_ln75_31_fu_758_p2;
reg   [31:0] mul_ln75_31_reg_1762;
wire   [31:0] mul_ln75_32_fu_774_p2;
reg   [31:0] mul_ln75_32_reg_1767;
wire   [31:0] mul_ln75_33_fu_790_p2;
reg   [31:0] mul_ln75_33_reg_1772;
wire   [31:0] mul_ln75_34_fu_806_p2;
reg   [31:0] mul_ln75_34_reg_1777;
wire   [31:0] mul_ln75_35_fu_822_p2;
reg   [31:0] mul_ln75_35_reg_1782;
wire   [31:0] mul_ln75_36_fu_838_p2;
reg   [31:0] mul_ln75_36_reg_1787;
wire   [31:0] mul_ln75_37_fu_854_p2;
reg   [31:0] mul_ln75_37_reg_1792;
wire   [31:0] mul_ln75_38_fu_870_p2;
reg   [31:0] mul_ln75_38_reg_1797;
wire   [31:0] mul_ln75_39_fu_886_p2;
reg   [31:0] mul_ln75_39_reg_1802;
wire   [31:0] mul_ln75_40_fu_902_p2;
reg   [31:0] mul_ln75_40_reg_1807;
wire   [31:0] mul_ln75_41_fu_918_p2;
reg   [31:0] mul_ln75_41_reg_1812;
wire   [31:0] mul_ln75_42_fu_934_p2;
reg   [31:0] mul_ln75_42_reg_1817;
wire   [31:0] mul_ln75_43_fu_950_p2;
reg   [31:0] mul_ln75_43_reg_1822;
wire   [31:0] mul_ln75_44_fu_966_p2;
reg   [31:0] mul_ln75_44_reg_1827;
wire   [31:0] mul_ln75_45_fu_982_p2;
reg   [31:0] mul_ln75_45_reg_1832;
wire   [31:0] mul_ln75_46_fu_998_p2;
reg   [31:0] mul_ln75_46_reg_1837;
wire   [31:0] mul_ln75_47_fu_1014_p2;
reg   [31:0] mul_ln75_47_reg_1842;
wire   [31:0] mul_ln75_48_fu_1030_p2;
reg   [31:0] mul_ln75_48_reg_1847;
wire   [31:0] mul_ln75_49_fu_1046_p2;
reg   [31:0] mul_ln75_49_reg_1852;
wire   [31:0] mul_ln75_50_fu_1062_p2;
reg   [31:0] mul_ln75_50_reg_1857;
wire   [31:0] mul_ln75_51_fu_1078_p2;
reg   [31:0] mul_ln75_51_reg_1862;
reg   [31:0] shift_reg_7_load_reg_1867;
wire   [31:0] mul_ln75_52_fu_1104_p2;
reg   [31:0] mul_ln75_52_reg_1873;
reg   [31:0] shift_reg_5_load_reg_1878;
wire   [31:0] mul_ln75_53_fu_1130_p2;
reg   [31:0] mul_ln75_53_reg_1883;
wire   [31:0] mul_ln75_54_fu_1146_p2;
reg   [31:0] mul_ln75_54_reg_1888;
wire   [31:0] mul_ln75_55_fu_1162_p2;
reg   [31:0] mul_ln75_55_reg_1893;
wire   [31:0] mul_ln75_56_fu_1178_p2;
reg   [31:0] mul_ln75_56_reg_1898;
reg   [31:0] shift_reg_0_load_reg_1903;
wire   [31:0] mul_ln75_57_fu_1199_p2;
reg   [31:0] mul_ln75_57_reg_1909;
wire   [31:0] add_ln75_2_fu_1289_p2;
reg   [31:0] add_ln75_2_reg_1914;
wire   [31:0] add_ln75_5_fu_1304_p2;
reg   [31:0] add_ln75_5_reg_1919;
wire   [31:0] add_ln75_7_fu_1310_p2;
reg   [31:0] add_ln75_7_reg_1924;
wire   [31:0] add_ln75_8_fu_1315_p2;
reg   [31:0] add_ln75_8_reg_1929;
wire   [31:0] add_ln75_12_fu_1328_p2;
reg   [31:0] add_ln75_12_reg_1934;
wire   [31:0] add_ln75_17_fu_1342_p2;
reg   [31:0] add_ln75_17_reg_1939;
wire   [31:0] add_ln75_20_fu_1356_p2;
reg   [31:0] add_ln75_20_reg_1944;
wire   [31:0] add_ln75_22_fu_1362_p2;
reg   [31:0] add_ln75_22_reg_1949;
wire   [31:0] add_ln75_23_fu_1366_p2;
reg   [31:0] add_ln75_23_reg_1954;
wire   [31:0] add_ln75_28_fu_1383_p2;
reg   [31:0] add_ln75_28_reg_1959;
wire   [31:0] add_ln75_32_fu_1389_p2;
reg   [31:0] add_ln75_32_reg_1964;
wire   [31:0] add_ln75_33_fu_1393_p2;
reg   [31:0] add_ln75_33_reg_1969;
wire   [31:0] add_ln75_37_fu_1405_p2;
reg   [31:0] add_ln75_37_reg_1974;
wire   [31:0] add_ln75_39_fu_1411_p2;
reg   [31:0] add_ln75_39_reg_1979;
wire   [31:0] add_ln75_40_fu_1415_p2;
reg   [31:0] add_ln75_40_reg_1984;
wire   [31:0] add_ln75_44_fu_1427_p2;
reg   [31:0] add_ln75_44_reg_1989;
wire   [31:0] add_ln75_49_fu_1441_p2;
reg   [31:0] add_ln75_49_reg_1994;
wire   [31:0] add_ln75_52_fu_1455_p2;
reg   [31:0] add_ln75_52_reg_1999;
wire   [31:0] add_ln75_54_fu_1461_p2;
reg   [31:0] add_ln75_54_reg_2004;
wire   [31:0] add_ln75_55_fu_1466_p2;
reg   [31:0] add_ln75_55_reg_2009;
wire   [31:0] add_ln75_60_fu_1484_p2;
reg   [31:0] add_ln75_60_reg_2014;
wire   [31:0] add_ln75_14_fu_1503_p2;
reg   [31:0] add_ln75_14_reg_2019;
wire   [31:0] add_ln75_30_fu_1522_p2;
reg   [31:0] add_ln75_30_reg_2024;
wire   [31:0] add_ln75_38_fu_1532_p2;
reg   [31:0] add_ln75_38_reg_2029;
wire   [31:0] add_ln75_45_fu_1541_p2;
reg   [31:0] add_ln75_45_reg_2034;
wire   [31:0] add_ln75_62_fu_1559_p2;
reg   [31:0] add_ln75_62_reg_2039;
reg    ap_block_pp0_stage0_subdone;
wire  signed [31:0] mul_ln75_fu_232_p1;
wire  signed [31:0] mul_ln75_1_fu_258_p1;
wire  signed [31:0] mul_ln75_2_fu_274_p1;
wire  signed [31:0] mul_ln75_3_fu_290_p1;
wire  signed [31:0] mul_ln75_4_fu_306_p1;
wire  signed [31:0] mul_ln75_5_fu_332_p1;
wire  signed [31:0] mul_ln75_6_fu_358_p1;
wire  signed [31:0] mul_ln75_7_fu_374_p1;
wire  signed [31:0] mul_ln75_8_fu_390_p1;
wire  signed [31:0] mul_ln75_9_fu_406_p1;
wire  signed [31:0] mul_ln75_10_fu_422_p1;
wire  signed [31:0] mul_ln75_11_fu_438_p1;
wire  signed [31:0] mul_ln75_12_fu_454_p1;
wire  signed [31:0] mul_ln75_13_fu_470_p1;
wire  signed [31:0] mul_ln75_14_fu_486_p1;
wire  signed [31:0] mul_ln75_15_fu_502_p1;
wire  signed [31:0] mul_ln75_16_fu_518_p1;
wire  signed [31:0] mul_ln75_17_fu_534_p1;
wire  signed [31:0] mul_ln75_18_fu_550_p1;
wire  signed [31:0] mul_ln75_19_fu_566_p1;
wire  signed [31:0] mul_ln75_20_fu_582_p1;
wire  signed [31:0] mul_ln75_21_fu_598_p1;
wire  signed [31:0] mul_ln75_22_fu_614_p1;
wire  signed [31:0] mul_ln75_23_fu_630_p1;
wire  signed [31:0] mul_ln75_24_fu_646_p1;
wire  signed [31:0] mul_ln75_25_fu_662_p1;
wire  signed [31:0] mul_ln75_26_fu_678_p1;
wire  signed [31:0] mul_ln75_27_fu_694_p1;
wire  signed [31:0] mul_ln75_28_fu_710_p1;
wire  signed [31:0] mul_ln75_29_fu_726_p1;
wire  signed [31:0] mul_ln75_30_fu_742_p1;
wire  signed [31:0] mul_ln75_31_fu_758_p1;
wire  signed [31:0] mul_ln75_32_fu_774_p1;
wire  signed [31:0] mul_ln75_33_fu_790_p1;
wire  signed [31:0] mul_ln75_34_fu_806_p1;
wire  signed [31:0] mul_ln75_35_fu_822_p1;
wire  signed [31:0] mul_ln75_36_fu_838_p1;
wire  signed [31:0] mul_ln75_37_fu_854_p1;
wire  signed [31:0] mul_ln75_38_fu_870_p1;
wire  signed [31:0] mul_ln75_39_fu_886_p1;
wire  signed [31:0] mul_ln75_40_fu_902_p1;
wire  signed [31:0] mul_ln75_41_fu_918_p1;
wire  signed [31:0] mul_ln75_42_fu_934_p1;
wire  signed [31:0] mul_ln75_43_fu_950_p1;
wire  signed [31:0] mul_ln75_44_fu_966_p1;
wire  signed [31:0] mul_ln75_45_fu_982_p1;
wire  signed [31:0] mul_ln75_46_fu_998_p1;
wire  signed [31:0] mul_ln75_47_fu_1014_p1;
wire  signed [31:0] mul_ln75_48_fu_1030_p1;
wire  signed [31:0] mul_ln75_49_fu_1046_p1;
wire  signed [31:0] mul_ln75_50_fu_1062_p1;
wire  signed [31:0] mul_ln75_51_fu_1078_p1;
wire  signed [31:0] mul_ln75_52_fu_1104_p1;
wire  signed [31:0] mul_ln75_53_fu_1130_p1;
wire  signed [31:0] mul_ln75_54_fu_1146_p1;
wire  signed [31:0] mul_ln75_55_fu_1162_p1;
wire  signed [31:0] mul_ln75_56_fu_1178_p1;
wire   [31:0] shl_ln75_3_fu_1219_p2;
wire   [31:0] sub_ln75_fu_1224_p2;
wire   [31:0] shl_ln75_4_fu_1230_p2;
wire   [31:0] shl_ln75_5_fu_1241_p2;
wire   [31:0] sub_ln75_2_fu_1246_p2;
wire   [31:0] shl_ln75_6_fu_1252_p2;
wire   [31:0] shl_ln75_9_fu_1273_p2;
wire   [31:0] shl_ln75_8_fu_1268_p2;
wire   [31:0] shl_ln75_fu_1204_p2;
wire   [31:0] add_ln75_1_fu_1284_p2;
wire   [31:0] add_ln75_fu_1278_p2;
wire   [31:0] shl_ln75_1_fu_1209_p2;
wire   [31:0] add_ln75_4_fu_1300_p2;
wire   [31:0] add_ln75_3_fu_1295_p2;
wire   [31:0] shl_ln75_2_fu_1214_p2;
wire   [31:0] sub_ln75_1_fu_1235_p2;
wire   [31:0] add_ln75_11_fu_1324_p2;
wire   [31:0] add_ln75_10_fu_1320_p2;
wire   [31:0] add_ln75_16_fu_1338_p2;
wire   [31:0] add_ln75_15_fu_1334_p2;
wire   [31:0] add_ln75_19_fu_1352_p2;
wire   [31:0] add_ln75_18_fu_1348_p2;
wire   [31:0] add_ln75_26_fu_1374_p2;
wire   [31:0] add_ln75_27_fu_1378_p2;
wire   [31:0] add_ln75_25_fu_1370_p2;
wire   [31:0] add_ln75_36_fu_1401_p2;
wire   [31:0] add_ln75_35_fu_1397_p2;
wire   [31:0] add_ln75_43_fu_1423_p2;
wire   [31:0] add_ln75_42_fu_1419_p2;
wire   [31:0] add_ln75_48_fu_1437_p2;
wire   [31:0] add_ln75_47_fu_1433_p2;
wire   [31:0] add_ln75_51_fu_1451_p2;
wire   [31:0] add_ln75_50_fu_1447_p2;
wire   [31:0] sub_ln75_3_fu_1257_p2;
wire   [31:0] shl_ln75_7_fu_1263_p2;
wire   [31:0] add_ln75_58_fu_1475_p2;
wire   [31:0] add_ln75_59_fu_1479_p2;
wire   [31:0] add_ln75_57_fu_1471_p2;
wire   [31:0] add_ln75_9_fu_1494_p2;
wire   [31:0] add_ln75_13_fu_1498_p2;
wire   [31:0] add_ln75_6_fu_1490_p2;
wire   [31:0] add_ln75_24_fu_1513_p2;
wire   [31:0] add_ln75_29_fu_1517_p2;
wire   [31:0] add_ln75_21_fu_1509_p2;
wire   [31:0] add_ln75_34_fu_1528_p2;
wire   [31:0] add_ln75_41_fu_1537_p2;
wire   [31:0] add_ln75_56_fu_1550_p2;
wire   [31:0] add_ln75_61_fu_1554_p2;
wire   [31:0] add_ln75_53_fu_1546_p2;
wire   [31:0] add_ln75_46_fu_1569_p2;
wire   [31:0] add_ln75_63_fu_1573_p2;
wire   [31:0] add_ln75_31_fu_1565_p2;
wire   [31:0] add_ln75_64_fu_1578_p2;
reg   [31:0] ap_return_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 shift_reg_62 = 32'd0;
#0 shift_reg_61 = 32'd0;
#0 shift_reg_60 = 32'd0;
#0 shift_reg_59 = 32'd0;
#0 shift_reg_58 = 32'd0;
#0 shift_reg_57 = 32'd0;
#0 shift_reg_56 = 32'd0;
#0 shift_reg_55 = 32'd0;
#0 shift_reg_54 = 32'd0;
#0 shift_reg_53 = 32'd0;
#0 shift_reg_52 = 32'd0;
#0 shift_reg_51 = 32'd0;
#0 shift_reg_50 = 32'd0;
#0 shift_reg_49 = 32'd0;
#0 shift_reg_48 = 32'd0;
#0 shift_reg_47 = 32'd0;
#0 shift_reg_46 = 32'd0;
#0 shift_reg_45 = 32'd0;
#0 shift_reg_44 = 32'd0;
#0 shift_reg_43 = 32'd0;
#0 shift_reg_42 = 32'd0;
#0 shift_reg_41 = 32'd0;
#0 shift_reg_40 = 32'd0;
#0 shift_reg_39 = 32'd0;
#0 shift_reg_38 = 32'd0;
#0 shift_reg_37 = 32'd0;
#0 shift_reg_36 = 32'd0;
#0 shift_reg_35 = 32'd0;
#0 shift_reg_34 = 32'd0;
#0 shift_reg_33 = 32'd0;
#0 shift_reg_32 = 32'd0;
#0 shift_reg_31 = 32'd0;
#0 shift_reg_30 = 32'd0;
#0 shift_reg_29 = 32'd0;
#0 shift_reg_28 = 32'd0;
#0 shift_reg_27 = 32'd0;
#0 shift_reg_26 = 32'd0;
#0 shift_reg_25 = 32'd0;
#0 shift_reg_24 = 32'd0;
#0 shift_reg_23 = 32'd0;
#0 shift_reg_22 = 32'd0;
#0 shift_reg_21 = 32'd0;
#0 shift_reg_20 = 32'd0;
#0 shift_reg_19 = 32'd0;
#0 shift_reg_18 = 32'd0;
#0 shift_reg_17 = 32'd0;
#0 shift_reg_16 = 32'd0;
#0 shift_reg_15 = 32'd0;
#0 shift_reg_14 = 32'd0;
#0 shift_reg_13 = 32'd0;
#0 shift_reg_12 = 32'd0;
#0 shift_reg_11 = 32'd0;
#0 shift_reg_10 = 32'd0;
#0 shift_reg_9 = 32'd0;
#0 shift_reg_8 = 32'd0;
#0 shift_reg_7 = 32'd0;
#0 shift_reg_6 = 32'd0;
#0 shift_reg_5 = 32'd0;
#0 shift_reg_4 = 32'd0;
#0 shift_reg_3 = 32'd0;
#0 shift_reg_2 = 32'd0;
#0 shift_reg_1 = 32'd0;
#0 shift_reg_0 = 32'd0;
#0 ap_return_preg = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            ap_return_preg <= add_ln75_64_fu_1578_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln75_12_reg_1934 <= add_ln75_12_fu_1328_p2;
        add_ln75_14_reg_2019 <= add_ln75_14_fu_1503_p2;
        add_ln75_17_reg_1939 <= add_ln75_17_fu_1342_p2;
        add_ln75_20_reg_1944 <= add_ln75_20_fu_1356_p2;
        add_ln75_22_reg_1949 <= add_ln75_22_fu_1362_p2;
        add_ln75_23_reg_1954 <= add_ln75_23_fu_1366_p2;
        add_ln75_28_reg_1959 <= add_ln75_28_fu_1383_p2;
        add_ln75_2_reg_1914 <= add_ln75_2_fu_1289_p2;
        add_ln75_30_reg_2024 <= add_ln75_30_fu_1522_p2;
        add_ln75_32_reg_1964 <= add_ln75_32_fu_1389_p2;
        add_ln75_33_reg_1969 <= add_ln75_33_fu_1393_p2;
        add_ln75_37_reg_1974 <= add_ln75_37_fu_1405_p2;
        add_ln75_38_reg_2029 <= add_ln75_38_fu_1532_p2;
        add_ln75_39_reg_1979 <= add_ln75_39_fu_1411_p2;
        add_ln75_40_reg_1984 <= add_ln75_40_fu_1415_p2;
        add_ln75_44_reg_1989 <= add_ln75_44_fu_1427_p2;
        add_ln75_45_reg_2034 <= add_ln75_45_fu_1541_p2;
        add_ln75_49_reg_1994 <= add_ln75_49_fu_1441_p2;
        add_ln75_52_reg_1999 <= add_ln75_52_fu_1455_p2;
        add_ln75_54_reg_2004 <= add_ln75_54_fu_1461_p2;
        add_ln75_55_reg_2009 <= add_ln75_55_fu_1466_p2;
        add_ln75_5_reg_1919 <= add_ln75_5_fu_1304_p2;
        add_ln75_60_reg_2014 <= add_ln75_60_fu_1484_p2;
        add_ln75_62_reg_2039 <= add_ln75_62_fu_1559_p2;
        add_ln75_7_reg_1924 <= add_ln75_7_fu_1310_p2;
        add_ln75_8_reg_1929 <= add_ln75_8_fu_1315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_reg_1584 <= x_dout;
        mul_ln75_10_reg_1657 <= mul_ln75_10_fu_422_p2;
        mul_ln75_11_reg_1662 <= mul_ln75_11_fu_438_p2;
        mul_ln75_12_reg_1667 <= mul_ln75_12_fu_454_p2;
        mul_ln75_13_reg_1672 <= mul_ln75_13_fu_470_p2;
        mul_ln75_14_reg_1677 <= mul_ln75_14_fu_486_p2;
        mul_ln75_15_reg_1682 <= mul_ln75_15_fu_502_p2;
        mul_ln75_16_reg_1687 <= mul_ln75_16_fu_518_p2;
        mul_ln75_17_reg_1692 <= mul_ln75_17_fu_534_p2;
        mul_ln75_18_reg_1697 <= mul_ln75_18_fu_550_p2;
        mul_ln75_19_reg_1702 <= mul_ln75_19_fu_566_p2;
        mul_ln75_1_reg_1601 <= mul_ln75_1_fu_258_p2;
        mul_ln75_20_reg_1707 <= mul_ln75_20_fu_582_p2;
        mul_ln75_21_reg_1712 <= mul_ln75_21_fu_598_p2;
        mul_ln75_22_reg_1717 <= mul_ln75_22_fu_614_p2;
        mul_ln75_23_reg_1722 <= mul_ln75_23_fu_630_p2;
        mul_ln75_24_reg_1727 <= mul_ln75_24_fu_646_p2;
        mul_ln75_25_reg_1732 <= mul_ln75_25_fu_662_p2;
        mul_ln75_26_reg_1737 <= mul_ln75_26_fu_678_p2;
        mul_ln75_27_reg_1742 <= mul_ln75_27_fu_694_p2;
        mul_ln75_28_reg_1747 <= mul_ln75_28_fu_710_p2;
        mul_ln75_29_reg_1752 <= mul_ln75_29_fu_726_p2;
        mul_ln75_2_reg_1606 <= mul_ln75_2_fu_274_p2;
        mul_ln75_30_reg_1757 <= mul_ln75_30_fu_742_p2;
        mul_ln75_31_reg_1762 <= mul_ln75_31_fu_758_p2;
        mul_ln75_32_reg_1767 <= mul_ln75_32_fu_774_p2;
        mul_ln75_33_reg_1772 <= mul_ln75_33_fu_790_p2;
        mul_ln75_34_reg_1777 <= mul_ln75_34_fu_806_p2;
        mul_ln75_35_reg_1782 <= mul_ln75_35_fu_822_p2;
        mul_ln75_36_reg_1787 <= mul_ln75_36_fu_838_p2;
        mul_ln75_37_reg_1792 <= mul_ln75_37_fu_854_p2;
        mul_ln75_38_reg_1797 <= mul_ln75_38_fu_870_p2;
        mul_ln75_39_reg_1802 <= mul_ln75_39_fu_886_p2;
        mul_ln75_3_reg_1611 <= mul_ln75_3_fu_290_p2;
        mul_ln75_40_reg_1807 <= mul_ln75_40_fu_902_p2;
        mul_ln75_41_reg_1812 <= mul_ln75_41_fu_918_p2;
        mul_ln75_42_reg_1817 <= mul_ln75_42_fu_934_p2;
        mul_ln75_43_reg_1822 <= mul_ln75_43_fu_950_p2;
        mul_ln75_44_reg_1827 <= mul_ln75_44_fu_966_p2;
        mul_ln75_45_reg_1832 <= mul_ln75_45_fu_982_p2;
        mul_ln75_46_reg_1837 <= mul_ln75_46_fu_998_p2;
        mul_ln75_47_reg_1842 <= mul_ln75_47_fu_1014_p2;
        mul_ln75_48_reg_1847 <= mul_ln75_48_fu_1030_p2;
        mul_ln75_49_reg_1852 <= mul_ln75_49_fu_1046_p2;
        mul_ln75_4_reg_1616 <= mul_ln75_4_fu_306_p2;
        mul_ln75_50_reg_1857 <= mul_ln75_50_fu_1062_p2;
        mul_ln75_51_reg_1862 <= mul_ln75_51_fu_1078_p2;
        mul_ln75_52_reg_1873 <= mul_ln75_52_fu_1104_p2;
        mul_ln75_53_reg_1883 <= mul_ln75_53_fu_1130_p2;
        mul_ln75_54_reg_1888 <= mul_ln75_54_fu_1146_p2;
        mul_ln75_55_reg_1893 <= mul_ln75_55_fu_1162_p2;
        mul_ln75_56_reg_1898 <= mul_ln75_56_fu_1178_p2;
        mul_ln75_57_reg_1909 <= mul_ln75_57_fu_1199_p2;
        mul_ln75_5_reg_1626 <= mul_ln75_5_fu_332_p2;
        mul_ln75_6_reg_1637 <= mul_ln75_6_fu_358_p2;
        mul_ln75_7_reg_1642 <= mul_ln75_7_fu_374_p2;
        mul_ln75_8_reg_1647 <= mul_ln75_8_fu_390_p2;
        mul_ln75_9_reg_1652 <= mul_ln75_9_fu_406_p2;
        mul_ln75_reg_1590 <= mul_ln75_fu_232_p2;
        shift_reg_0_load_reg_1903 <= shift_reg_0;
        shift_reg_54_load_reg_1631 <= shift_reg_54;
        shift_reg_56_load_reg_1621 <= shift_reg_56;
        shift_reg_5_load_reg_1878 <= shift_reg_5;
        shift_reg_61_load_reg_1595 <= shift_reg_61;
        shift_reg_7_load_reg_1867 <= shift_reg_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_0 <= data_reg_1584;
        shift_reg_1 <= shift_reg_0;
        shift_reg_10 <= shift_reg_9;
        shift_reg_11 <= shift_reg_10;
        shift_reg_12 <= shift_reg_11;
        shift_reg_13 <= shift_reg_12;
        shift_reg_14 <= shift_reg_13;
        shift_reg_15 <= shift_reg_14;
        shift_reg_16 <= shift_reg_15;
        shift_reg_17 <= shift_reg_16;
        shift_reg_18 <= shift_reg_17;
        shift_reg_19 <= shift_reg_18;
        shift_reg_2 <= shift_reg_1;
        shift_reg_20 <= shift_reg_19;
        shift_reg_21 <= shift_reg_20;
        shift_reg_22 <= shift_reg_21;
        shift_reg_23 <= shift_reg_22;
        shift_reg_24 <= shift_reg_23;
        shift_reg_25 <= shift_reg_24;
        shift_reg_26 <= shift_reg_25;
        shift_reg_27 <= shift_reg_26;
        shift_reg_28 <= shift_reg_27;
        shift_reg_29 <= shift_reg_28;
        shift_reg_3 <= shift_reg_2;
        shift_reg_30 <= shift_reg_29;
        shift_reg_31 <= shift_reg_30;
        shift_reg_32 <= shift_reg_31;
        shift_reg_33 <= shift_reg_32;
        shift_reg_34 <= shift_reg_33;
        shift_reg_35 <= shift_reg_34;
        shift_reg_36 <= shift_reg_35;
        shift_reg_37 <= shift_reg_36;
        shift_reg_38 <= shift_reg_37;
        shift_reg_39 <= shift_reg_38;
        shift_reg_4 <= shift_reg_3;
        shift_reg_40 <= shift_reg_39;
        shift_reg_41 <= shift_reg_40;
        shift_reg_42 <= shift_reg_41;
        shift_reg_43 <= shift_reg_42;
        shift_reg_44 <= shift_reg_43;
        shift_reg_45 <= shift_reg_44;
        shift_reg_46 <= shift_reg_45;
        shift_reg_47 <= shift_reg_46;
        shift_reg_48 <= shift_reg_47;
        shift_reg_49 <= shift_reg_48;
        shift_reg_5 <= shift_reg_4;
        shift_reg_50 <= shift_reg_49;
        shift_reg_51 <= shift_reg_50;
        shift_reg_52 <= shift_reg_51;
        shift_reg_53 <= shift_reg_52;
        shift_reg_54 <= shift_reg_53;
        shift_reg_55 <= shift_reg_54;
        shift_reg_56 <= shift_reg_55;
        shift_reg_57 <= shift_reg_56;
        shift_reg_58 <= shift_reg_57;
        shift_reg_59 <= shift_reg_58;
        shift_reg_6 <= shift_reg_5;
        shift_reg_60 <= shift_reg_59;
        shift_reg_61 <= shift_reg_60;
        shift_reg_62 <= shift_reg_61;
        shift_reg_7 <= shift_reg_6;
        shift_reg_8 <= shift_reg_7;
        shift_reg_9 <= shift_reg_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_return = add_ln75_64_fu_1578_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        x_blk_n = x_empty_n;
    end else begin
        x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_read = 1'b1;
    end else begin
        x_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln75_10_fu_1320_p2 = (mul_ln75_6_reg_1637 + mul_ln75_7_reg_1642);

assign add_ln75_11_fu_1324_p2 = (mul_ln75_8_reg_1647 + mul_ln75_9_reg_1652);

assign add_ln75_12_fu_1328_p2 = (add_ln75_11_fu_1324_p2 + add_ln75_10_fu_1320_p2);

assign add_ln75_13_fu_1498_p2 = (add_ln75_12_reg_1934 + add_ln75_9_fu_1494_p2);

assign add_ln75_14_fu_1503_p2 = (add_ln75_13_fu_1498_p2 + add_ln75_6_fu_1490_p2);

assign add_ln75_15_fu_1334_p2 = (mul_ln75_10_reg_1657 + mul_ln75_11_reg_1662);

assign add_ln75_16_fu_1338_p2 = (mul_ln75_12_reg_1667 + mul_ln75_13_reg_1672);

assign add_ln75_17_fu_1342_p2 = (add_ln75_16_fu_1338_p2 + add_ln75_15_fu_1334_p2);

assign add_ln75_18_fu_1348_p2 = (mul_ln75_14_reg_1677 + mul_ln75_15_reg_1682);

assign add_ln75_19_fu_1352_p2 = (mul_ln75_16_reg_1687 + mul_ln75_17_reg_1692);

assign add_ln75_1_fu_1284_p2 = (mul_ln75_reg_1590 + shl_ln75_fu_1204_p2);

assign add_ln75_20_fu_1356_p2 = (add_ln75_19_fu_1352_p2 + add_ln75_18_fu_1348_p2);

assign add_ln75_21_fu_1509_p2 = (add_ln75_20_reg_1944 + add_ln75_17_reg_1939);

assign add_ln75_22_fu_1362_p2 = (mul_ln75_18_reg_1697 + mul_ln75_19_reg_1702);

assign add_ln75_23_fu_1366_p2 = (mul_ln75_20_reg_1707 + mul_ln75_21_reg_1712);

assign add_ln75_24_fu_1513_p2 = (add_ln75_23_reg_1954 + add_ln75_22_reg_1949);

assign add_ln75_25_fu_1370_p2 = (mul_ln75_22_reg_1717 + mul_ln75_23_reg_1722);

assign add_ln75_26_fu_1374_p2 = (mul_ln75_25_reg_1732 + mul_ln75_26_reg_1737);

assign add_ln75_27_fu_1378_p2 = (add_ln75_26_fu_1374_p2 + mul_ln75_24_reg_1727);

assign add_ln75_28_fu_1383_p2 = (add_ln75_27_fu_1378_p2 + add_ln75_25_fu_1370_p2);

assign add_ln75_29_fu_1517_p2 = (add_ln75_28_reg_1959 + add_ln75_24_fu_1513_p2);

assign add_ln75_2_fu_1289_p2 = (add_ln75_1_fu_1284_p2 + add_ln75_fu_1278_p2);

assign add_ln75_30_fu_1522_p2 = (add_ln75_29_fu_1517_p2 + add_ln75_21_fu_1509_p2);

assign add_ln75_31_fu_1565_p2 = (add_ln75_30_reg_2024 + add_ln75_14_reg_2019);

assign add_ln75_32_fu_1389_p2 = (mul_ln75_27_reg_1742 + mul_ln75_28_reg_1747);

assign add_ln75_33_fu_1393_p2 = (mul_ln75_29_reg_1752 + mul_ln75_30_reg_1757);

assign add_ln75_34_fu_1528_p2 = (add_ln75_33_reg_1969 + add_ln75_32_reg_1964);

assign add_ln75_35_fu_1397_p2 = (mul_ln75_31_reg_1762 + mul_ln75_32_reg_1767);

assign add_ln75_36_fu_1401_p2 = (mul_ln75_33_reg_1772 + mul_ln75_34_reg_1777);

assign add_ln75_37_fu_1405_p2 = (add_ln75_36_fu_1401_p2 + add_ln75_35_fu_1397_p2);

assign add_ln75_38_fu_1532_p2 = (add_ln75_37_reg_1974 + add_ln75_34_fu_1528_p2);

assign add_ln75_39_fu_1411_p2 = (mul_ln75_35_reg_1782 + mul_ln75_36_reg_1787);

assign add_ln75_3_fu_1295_p2 = (shl_ln75_1_fu_1209_p2 + mul_ln75_1_reg_1601);

assign add_ln75_40_fu_1415_p2 = (mul_ln75_37_reg_1792 + mul_ln75_38_reg_1797);

assign add_ln75_41_fu_1537_p2 = (add_ln75_40_reg_1984 + add_ln75_39_reg_1979);

assign add_ln75_42_fu_1419_p2 = (mul_ln75_39_reg_1802 + mul_ln75_40_reg_1807);

assign add_ln75_43_fu_1423_p2 = (mul_ln75_41_reg_1812 + mul_ln75_42_reg_1817);

assign add_ln75_44_fu_1427_p2 = (add_ln75_43_fu_1423_p2 + add_ln75_42_fu_1419_p2);

assign add_ln75_45_fu_1541_p2 = (add_ln75_44_reg_1989 + add_ln75_41_fu_1537_p2);

assign add_ln75_46_fu_1569_p2 = (add_ln75_45_reg_2034 + add_ln75_38_reg_2029);

assign add_ln75_47_fu_1433_p2 = (mul_ln75_43_reg_1822 + mul_ln75_44_reg_1827);

assign add_ln75_48_fu_1437_p2 = (mul_ln75_45_reg_1832 + mul_ln75_46_reg_1837);

assign add_ln75_49_fu_1441_p2 = (add_ln75_48_fu_1437_p2 + add_ln75_47_fu_1433_p2);

assign add_ln75_4_fu_1300_p2 = (mul_ln75_2_reg_1606 + mul_ln75_3_reg_1611);

assign add_ln75_50_fu_1447_p2 = (mul_ln75_47_reg_1842 + mul_ln75_48_reg_1847);

assign add_ln75_51_fu_1451_p2 = (mul_ln75_49_reg_1852 + mul_ln75_50_reg_1857);

assign add_ln75_52_fu_1455_p2 = (add_ln75_51_fu_1451_p2 + add_ln75_50_fu_1447_p2);

assign add_ln75_53_fu_1546_p2 = (add_ln75_52_reg_1999 + add_ln75_49_reg_1994);

assign add_ln75_54_fu_1461_p2 = (mul_ln75_51_reg_1862 + sub_ln75_3_fu_1257_p2);

assign add_ln75_55_fu_1466_p2 = (mul_ln75_52_reg_1873 + shl_ln75_7_fu_1263_p2);

assign add_ln75_56_fu_1550_p2 = (add_ln75_55_reg_2009 + add_ln75_54_reg_2004);

assign add_ln75_57_fu_1471_p2 = (mul_ln75_53_reg_1883 + mul_ln75_54_reg_1888);

assign add_ln75_58_fu_1475_p2 = (mul_ln75_56_reg_1898 + mul_ln75_57_reg_1909);

assign add_ln75_59_fu_1479_p2 = (add_ln75_58_fu_1475_p2 + mul_ln75_55_reg_1893);

assign add_ln75_5_fu_1304_p2 = (add_ln75_4_fu_1300_p2 + add_ln75_3_fu_1295_p2);

assign add_ln75_60_fu_1484_p2 = (add_ln75_59_fu_1479_p2 + add_ln75_57_fu_1471_p2);

assign add_ln75_61_fu_1554_p2 = (add_ln75_60_reg_2014 + add_ln75_56_fu_1550_p2);

assign add_ln75_62_fu_1559_p2 = (add_ln75_61_fu_1554_p2 + add_ln75_53_fu_1546_p2);

assign add_ln75_63_fu_1573_p2 = (add_ln75_62_reg_2039 + add_ln75_46_fu_1569_p2);

assign add_ln75_64_fu_1578_p2 = (add_ln75_63_fu_1573_p2 + add_ln75_31_fu_1565_p2);

assign add_ln75_6_fu_1490_p2 = (add_ln75_5_reg_1919 + add_ln75_2_reg_1914);

assign add_ln75_7_fu_1310_p2 = (mul_ln75_4_reg_1616 + shl_ln75_2_fu_1214_p2);

assign add_ln75_8_fu_1315_p2 = (mul_ln75_5_reg_1626 + sub_ln75_1_fu_1235_p2);

assign add_ln75_9_fu_1494_p2 = (add_ln75_8_reg_1929 + add_ln75_7_reg_1924);

assign add_ln75_fu_1278_p2 = (shl_ln75_9_fu_1273_p2 + shl_ln75_8_fu_1268_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign mul_ln75_10_fu_422_p1 = shift_reg_49;

assign mul_ln75_10_fu_422_p2 = ($signed(32'd4294966606) * $signed(mul_ln75_10_fu_422_p1));

assign mul_ln75_11_fu_438_p1 = shift_reg_48;

assign mul_ln75_11_fu_438_p2 = ($signed(32'd4294966519) * $signed(mul_ln75_11_fu_438_p1));

assign mul_ln75_12_fu_454_p1 = shift_reg_47;

assign mul_ln75_12_fu_454_p2 = ($signed(32'd4294966480) * $signed(mul_ln75_12_fu_454_p1));

assign mul_ln75_13_fu_470_p1 = shift_reg_46;

assign mul_ln75_13_fu_470_p2 = ($signed(32'd4294966506) * $signed(mul_ln75_13_fu_470_p1));

assign mul_ln75_14_fu_486_p1 = shift_reg_45;

assign mul_ln75_14_fu_486_p2 = ($signed(32'd4294966609) * $signed(mul_ln75_14_fu_486_p1));

assign mul_ln75_15_fu_502_p1 = shift_reg_44;

assign mul_ln75_15_fu_502_p2 = ($signed(32'd4294966798) * $signed(mul_ln75_15_fu_502_p1));

assign mul_ln75_16_fu_518_p1 = shift_reg_43;

assign mul_ln75_16_fu_518_p2 = ($signed(32'd4294967079) * $signed(mul_ln75_16_fu_518_p1));

assign mul_ln75_17_fu_534_p1 = shift_reg_42;

assign mul_ln75_17_fu_534_p2 = ($signed({{1'b0}, {32'd156}}) * $signed(mul_ln75_17_fu_534_p1));

assign mul_ln75_18_fu_550_p1 = shift_reg_41;

assign mul_ln75_18_fu_550_p2 = ($signed({{1'b0}, {32'd614}}) * $signed(mul_ln75_18_fu_550_p1));

assign mul_ln75_19_fu_566_p1 = shift_reg_40;

assign mul_ln75_19_fu_566_p2 = ($signed({{1'b0}, {32'd1147}}) * $signed(mul_ln75_19_fu_566_p1));

assign mul_ln75_1_fu_258_p1 = shift_reg_60;

assign mul_ln75_1_fu_258_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln75_1_fu_258_p1));

assign mul_ln75_20_fu_582_p1 = shift_reg_39;

assign mul_ln75_20_fu_582_p2 = ($signed({{1'b0}, {32'd1737}}) * $signed(mul_ln75_20_fu_582_p1));

assign mul_ln75_21_fu_598_p1 = shift_reg_38;

assign mul_ln75_21_fu_598_p2 = ($signed({{1'b0}, {32'd2362}}) * $signed(mul_ln75_21_fu_598_p1));

assign mul_ln75_22_fu_614_p1 = shift_reg_37;

assign mul_ln75_22_fu_614_p2 = ($signed({{1'b0}, {32'd2997}}) * $signed(mul_ln75_22_fu_614_p1));

assign mul_ln75_23_fu_630_p1 = shift_reg_36;

assign mul_ln75_23_fu_630_p2 = ($signed({{1'b0}, {32'd3613}}) * $signed(mul_ln75_23_fu_630_p1));

assign mul_ln75_24_fu_646_p1 = shift_reg_35;

assign mul_ln75_24_fu_646_p2 = ($signed({{1'b0}, {32'd4181}}) * $signed(mul_ln75_24_fu_646_p1));

assign mul_ln75_25_fu_662_p1 = shift_reg_34;

assign mul_ln75_25_fu_662_p2 = ($signed({{1'b0}, {32'd4675}}) * $signed(mul_ln75_25_fu_662_p1));

assign mul_ln75_26_fu_678_p1 = shift_reg_33;

assign mul_ln75_26_fu_678_p2 = ($signed({{1'b0}, {32'd5069}}) * $signed(mul_ln75_26_fu_678_p1));

assign mul_ln75_27_fu_694_p1 = shift_reg_32;

assign mul_ln75_27_fu_694_p2 = ($signed({{1'b0}, {32'd5344}}) * $signed(mul_ln75_27_fu_694_p1));

assign mul_ln75_28_fu_710_p1 = shift_reg_31;

assign mul_ln75_28_fu_710_p2 = ($signed({{1'b0}, {32'd5485}}) * $signed(mul_ln75_28_fu_710_p1));

assign mul_ln75_29_fu_726_p1 = shift_reg_30;

assign mul_ln75_29_fu_726_p2 = ($signed({{1'b0}, {32'd5485}}) * $signed(mul_ln75_29_fu_726_p1));

assign mul_ln75_2_fu_274_p1 = shift_reg_59;

assign mul_ln75_2_fu_274_p2 = ($signed({{1'b0}, {32'd189}}) * $signed(mul_ln75_2_fu_274_p1));

assign mul_ln75_30_fu_742_p1 = shift_reg_29;

assign mul_ln75_30_fu_742_p2 = ($signed({{1'b0}, {32'd5344}}) * $signed(mul_ln75_30_fu_742_p1));

assign mul_ln75_31_fu_758_p1 = shift_reg_28;

assign mul_ln75_31_fu_758_p2 = ($signed({{1'b0}, {32'd5069}}) * $signed(mul_ln75_31_fu_758_p1));

assign mul_ln75_32_fu_774_p1 = shift_reg_27;

assign mul_ln75_32_fu_774_p2 = ($signed({{1'b0}, {32'd4675}}) * $signed(mul_ln75_32_fu_774_p1));

assign mul_ln75_33_fu_790_p1 = shift_reg_26;

assign mul_ln75_33_fu_790_p2 = ($signed({{1'b0}, {32'd4181}}) * $signed(mul_ln75_33_fu_790_p1));

assign mul_ln75_34_fu_806_p1 = shift_reg_25;

assign mul_ln75_34_fu_806_p2 = ($signed({{1'b0}, {32'd3613}}) * $signed(mul_ln75_34_fu_806_p1));

assign mul_ln75_35_fu_822_p1 = shift_reg_24;

assign mul_ln75_35_fu_822_p2 = ($signed({{1'b0}, {32'd2997}}) * $signed(mul_ln75_35_fu_822_p1));

assign mul_ln75_36_fu_838_p1 = shift_reg_23;

assign mul_ln75_36_fu_838_p2 = ($signed({{1'b0}, {32'd2362}}) * $signed(mul_ln75_36_fu_838_p1));

assign mul_ln75_37_fu_854_p1 = shift_reg_22;

assign mul_ln75_37_fu_854_p2 = ($signed({{1'b0}, {32'd1737}}) * $signed(mul_ln75_37_fu_854_p1));

assign mul_ln75_38_fu_870_p1 = shift_reg_21;

assign mul_ln75_38_fu_870_p2 = ($signed({{1'b0}, {32'd1147}}) * $signed(mul_ln75_38_fu_870_p1));

assign mul_ln75_39_fu_886_p1 = shift_reg_20;

assign mul_ln75_39_fu_886_p2 = ($signed({{1'b0}, {32'd614}}) * $signed(mul_ln75_39_fu_886_p1));

assign mul_ln75_3_fu_290_p1 = shift_reg_58;

assign mul_ln75_3_fu_290_p2 = ($signed({{1'b0}, {32'd191}}) * $signed(mul_ln75_3_fu_290_p1));

assign mul_ln75_40_fu_902_p1 = shift_reg_19;

assign mul_ln75_40_fu_902_p2 = ($signed({{1'b0}, {32'd156}}) * $signed(mul_ln75_40_fu_902_p1));

assign mul_ln75_41_fu_918_p1 = shift_reg_18;

assign mul_ln75_41_fu_918_p2 = ($signed(32'd4294967079) * $signed(mul_ln75_41_fu_918_p1));

assign mul_ln75_42_fu_934_p1 = shift_reg_17;

assign mul_ln75_42_fu_934_p2 = ($signed(32'd4294966798) * $signed(mul_ln75_42_fu_934_p1));

assign mul_ln75_43_fu_950_p1 = shift_reg_16;

assign mul_ln75_43_fu_950_p2 = ($signed(32'd4294966609) * $signed(mul_ln75_43_fu_950_p1));

assign mul_ln75_44_fu_966_p1 = shift_reg_15;

assign mul_ln75_44_fu_966_p2 = ($signed(32'd4294966506) * $signed(mul_ln75_44_fu_966_p1));

assign mul_ln75_45_fu_982_p1 = shift_reg_14;

assign mul_ln75_45_fu_982_p2 = ($signed(32'd4294966480) * $signed(mul_ln75_45_fu_982_p1));

assign mul_ln75_46_fu_998_p1 = shift_reg_13;

assign mul_ln75_46_fu_998_p2 = ($signed(32'd4294966519) * $signed(mul_ln75_46_fu_998_p1));

assign mul_ln75_47_fu_1014_p1 = shift_reg_12;

assign mul_ln75_47_fu_1014_p2 = ($signed(32'd4294966606) * $signed(mul_ln75_47_fu_1014_p1));

assign mul_ln75_48_fu_1030_p1 = shift_reg_11;

assign mul_ln75_48_fu_1030_p2 = ($signed(32'd4294966726) * $signed(mul_ln75_48_fu_1030_p1));

assign mul_ln75_49_fu_1046_p1 = shift_reg_10;

assign mul_ln75_49_fu_1046_p2 = ($signed(32'd4294966864) * $signed(mul_ln75_49_fu_1046_p1));

assign mul_ln75_4_fu_306_p1 = shift_reg_57;

assign mul_ln75_4_fu_306_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln75_4_fu_306_p1));

assign mul_ln75_50_fu_1062_p1 = shift_reg_9;

assign mul_ln75_50_fu_1062_p2 = ($signed(32'd4294967007) * $signed(mul_ln75_50_fu_1062_p1));

assign mul_ln75_51_fu_1078_p1 = shift_reg_8;

assign mul_ln75_51_fu_1078_p2 = ($signed(32'd4294967141) * $signed(mul_ln75_51_fu_1078_p1));

assign mul_ln75_52_fu_1104_p1 = shift_reg_6;

assign mul_ln75_52_fu_1104_p2 = ($signed({{1'b0}, {32'd59}}) * $signed(mul_ln75_52_fu_1104_p1));

assign mul_ln75_53_fu_1130_p1 = shift_reg_4;

assign mul_ln75_53_fu_1130_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln75_53_fu_1130_p1));

assign mul_ln75_54_fu_1146_p1 = shift_reg_3;

assign mul_ln75_54_fu_1146_p2 = ($signed({{1'b0}, {32'd191}}) * $signed(mul_ln75_54_fu_1146_p1));

assign mul_ln75_55_fu_1162_p1 = shift_reg_2;

assign mul_ln75_55_fu_1162_p2 = ($signed({{1'b0}, {32'd189}}) * $signed(mul_ln75_55_fu_1162_p1));

assign mul_ln75_56_fu_1178_p1 = shift_reg_1;

assign mul_ln75_56_fu_1178_p2 = ($signed({{1'b0}, {32'd172}}) * $signed(mul_ln75_56_fu_1178_p1));

assign mul_ln75_57_fu_1199_p2 = ($signed({{1'b0}, {32'd231}}) * $signed(data_reg_1584));

assign mul_ln75_5_fu_332_p1 = shift_reg_55;

assign mul_ln75_5_fu_332_p2 = ($signed({{1'b0}, {32'd59}}) * $signed(mul_ln75_5_fu_332_p1));

assign mul_ln75_6_fu_358_p1 = shift_reg_53;

assign mul_ln75_6_fu_358_p2 = ($signed(32'd4294967141) * $signed(mul_ln75_6_fu_358_p1));

assign mul_ln75_7_fu_374_p1 = shift_reg_52;

assign mul_ln75_7_fu_374_p2 = ($signed(32'd4294967007) * $signed(mul_ln75_7_fu_374_p1));

assign mul_ln75_8_fu_390_p1 = shift_reg_51;

assign mul_ln75_8_fu_390_p2 = ($signed(32'd4294966864) * $signed(mul_ln75_8_fu_390_p1));

assign mul_ln75_9_fu_406_p1 = shift_reg_50;

assign mul_ln75_9_fu_406_p2 = ($signed(32'd4294966726) * $signed(mul_ln75_9_fu_406_p1));

assign mul_ln75_fu_232_p1 = shift_reg_62;

assign mul_ln75_fu_232_p2 = ($signed({{1'b0}, {32'd231}}) * $signed(mul_ln75_fu_232_p1));

assign shl_ln75_1_fu_1209_p2 = shift_reg_61_load_reg_1595 << 32'd4;

assign shl_ln75_2_fu_1214_p2 = shift_reg_56_load_reg_1621 << 32'd7;

assign shl_ln75_3_fu_1219_p2 = shift_reg_54_load_reg_1631 << 32'd5;

assign shl_ln75_4_fu_1230_p2 = shift_reg_54_load_reg_1631 << 32'd2;

assign shl_ln75_5_fu_1241_p2 = shift_reg_7_load_reg_1867 << 32'd5;

assign shl_ln75_6_fu_1252_p2 = shift_reg_7_load_reg_1867 << 32'd2;

assign shl_ln75_7_fu_1263_p2 = shift_reg_5_load_reg_1878 << 32'd7;

assign shl_ln75_8_fu_1268_p2 = shift_reg_0_load_reg_1903 << 32'd7;

assign shl_ln75_9_fu_1273_p2 = shift_reg_0_load_reg_1903 << 32'd4;

assign shl_ln75_fu_1204_p2 = shift_reg_61_load_reg_1595 << 32'd7;

assign sub_ln75_1_fu_1235_p2 = (sub_ln75_fu_1224_p2 - shl_ln75_4_fu_1230_p2);

assign sub_ln75_2_fu_1246_p2 = (32'd0 - shl_ln75_5_fu_1241_p2);

assign sub_ln75_3_fu_1257_p2 = (sub_ln75_2_fu_1246_p2 - shl_ln75_6_fu_1252_p2);

assign sub_ln75_fu_1224_p2 = (32'd0 - shl_ln75_3_fu_1219_p2);

endmodule //fir_filter_b
