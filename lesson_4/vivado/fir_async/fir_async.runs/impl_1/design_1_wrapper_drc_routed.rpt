Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1.2 (win64) Build 2615518 Fri Aug  9 15:55:25 MDT 2019
| Date         : Tue Dec  1 18:04:46 2020
| Host         : LAPTOP-KSVOJTV9 running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
| Design       : design_1_wrapper
| Device       : xc7z045ffg900-2
| Speed File   : -2
| Design State : Fully Routed
------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 92
+-----------+----------+------------------------------+------------+
| Rule      | Severity | Description                  | Violations |
+-----------+----------+------------------------------+------------+
| DPOP-1    | Warning  | PREG Output pipelining       | 30         |
| DPOP-2    | Warning  | MREG Output pipelining       | 30         |
| RTSTAT-10 | Warning  | No routable loads            | 1          |
| ZPS7-1    | Warning  | PS7 block required           | 1          |
| REQP-31   | Advisory | enum_PREG_0_connects_CEP_GND | 30         |
+-----------+----------+------------------------------+------------+

2. REPORT DETAILS
-----------------
DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[10].mult_reg output design_1_i/fir_async_0/inst/tap[10].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[11].mult_reg output design_1_i/fir_async_0/inst/tap[11].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[12].mult_reg output design_1_i/fir_async_0/inst/tap[12].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[13].mult_reg output design_1_i/fir_async_0/inst/tap[13].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[14].mult_reg output design_1_i/fir_async_0/inst/tap[14].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[15].mult_reg output design_1_i/fir_async_0/inst/tap[15].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[16].mult_reg output design_1_i/fir_async_0/inst/tap[16].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[17].mult_reg output design_1_i/fir_async_0/inst/tap[17].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[18].mult_reg output design_1_i/fir_async_0/inst/tap[18].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[19].mult_reg output design_1_i/fir_async_0/inst/tap[19].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[20].mult_reg output design_1_i/fir_async_0/inst/tap[20].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[21].mult_reg output design_1_i/fir_async_0/inst/tap[21].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[22].mult_reg output design_1_i/fir_async_0/inst/tap[22].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[23].mult_reg output design_1_i/fir_async_0/inst/tap[23].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[24].mult_reg output design_1_i/fir_async_0/inst/tap[24].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[25].mult_reg output design_1_i/fir_async_0/inst/tap[25].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[26].mult_reg output design_1_i/fir_async_0/inst/tap[26].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[27].mult_reg output design_1_i/fir_async_0/inst/tap[27].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[28].mult_reg output design_1_i/fir_async_0/inst/tap[28].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[29].mult_reg output design_1_i/fir_async_0/inst/tap[29].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[2].mult_reg output design_1_i/fir_async_0/inst/tap[2].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[30].mult_reg output design_1_i/fir_async_0/inst/tap[30].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[31].mult_reg output design_1_i/fir_async_0/inst/tap[31].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[3].mult_reg output design_1_i/fir_async_0/inst/tap[3].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[4].mult_reg output design_1_i/fir_async_0/inst/tap[4].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[5].mult_reg output design_1_i/fir_async_0/inst/tap[5].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[6].mult_reg output design_1_i/fir_async_0/inst/tap[6].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[7].mult_reg output design_1_i/fir_async_0/inst/tap[7].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[8].mult_reg output design_1_i/fir_async_0/inst/tap[8].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[9].mult_reg output design_1_i/fir_async_0/inst/tap[9].mult_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[10].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[10].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[11].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[11].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[12].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[12].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[13].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[13].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[14].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[14].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[15].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[15].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[16].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[16].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[17].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[17].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[18].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[18].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[19].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[19].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[20].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[20].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[21].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[21].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[22].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[22].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[23].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[23].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[24].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[24].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[25].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[25].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[26].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[26].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[27].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[27].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[28].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[28].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[29].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[29].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[2].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[2].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[30].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[30].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[31].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[31].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[3].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[3].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[4].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[4].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[5].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[5].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[6].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[6].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[7].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[7].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[8].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[8].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/fir_async_0/inst/tap[9].mult_reg multiplier stage design_1_i/fir_async_0/inst/tap[9].mult_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

RTSTAT-10#1 Warning
No routable loads  
25 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gras.rsts/ram_empty_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwas.wsts/ram_full_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_inst/s_bscan_tms, design_1_i/system_ila_0/inst/ila_lib/inst/ila_core_inst/u_ila_regs/U_XSDB_SLAVE/s_daddr_o[13], design_1_i/system_ila_0/inst/ila_lib/inst/ila_core_inst/u_ila_regs/U_XSDB_SLAVE/s_daddr_o[14] (the first 15 of 23 listed).
Related violations: <none>

ZPS7-1#1 Warning
PS7 block required  
The PS7 cell must be used in this Zynq design in order to enable correct default configuration.
Related violations: <none>

REQP-31#1 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[10].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#2 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[11].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#3 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[12].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#4 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[13].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#5 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[14].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#6 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[15].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#7 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[16].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#8 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[17].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#9 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[18].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#10 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[19].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#11 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[20].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#12 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[21].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#13 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[22].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#14 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[23].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#15 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[24].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#16 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[25].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#17 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[26].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#18 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[27].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#19 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[28].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#20 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[29].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#21 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[2].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#22 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[30].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#23 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[31].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#24 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[3].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#25 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[4].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#26 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[5].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#27 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[6].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#28 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[7].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#29 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[8].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>

REQP-31#30 Advisory
enum_PREG_0_connects_CEP_GND  
design_1_i/fir_async_0/inst/tap[9].mult_reg: When the DSP48E1 PREG attribute is set to 0, the CEP input pin should be tied to GND to save power.
Related violations: <none>


